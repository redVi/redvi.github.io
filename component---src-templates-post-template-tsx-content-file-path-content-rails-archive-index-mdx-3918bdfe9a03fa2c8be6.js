"use strict";(self.webpackChunkgatsby_blog=self.webpackChunkgatsby_blog||[]).push([[3344],{965:function(e,t,a){a.r(t),a.d(t,{Head:function(){return s.Ss},default:function(){return p}});var n=a(8876),l=a(4424),r=a(8860);function c(e){const t=Object.assign({p:"p",h2:"h2",a:"a",span:"span",code:"code",pre:"pre",em:"em"},(0,n.MN)(),e.components);return l.createElement(l.Fragment,null,l.createElement(t.p,null,"Пожалуй, нет ни одного владельца блога, перед которым не стояла бы\nзадача архивации и упорядочивания всех накопленных материалов. Кто-то\nразбивает архив по годам, кто-то по месяцам, но зачастую записей не\nтак много, чтобы создавать для каждого промежутка времени отдельную\nстраницу, и все материалы помещаются на единственной страничке, призванной быть неким путеводителем для посетителей ресурса."),"\n",l.createElement(t.p,null,"Подобный стиль больше всего подходит ведущим блогов, и именно он и будет рассмотрен нами сегодня."),"\n",l.createElement(t.h2,{id:"с-чего-начать",style:{position:"relative"}},l.createElement(t.a,{href:"#%D1%81-%D1%87%D0%B5%D0%B3%D0%BE-%D0%BD%D0%B0%D1%87%D0%B0%D1%82%D1%8C","aria-label":"с чего начать permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"С чего начать?"),"\n",l.createElement(t.p,null,"Смею порекомендовать обратить внимание на изображение, иллюстрирующее то, как Rails обрабатывает запросы, поступающие от браузера пользователя. Этот момент подробно расписан на ",l.createElement(t.a,{href:"http://ruby.railstutorial.org",target:"_blank",rel:"nofollow"},"railstutorial.org"),", но давайте немного коснёмся его здесь."),"\n",l.createElement(t.p,null,"Браузер посылает запрос, который принимает веб-сервер. Веб-сервер передает запрос контроллеру Rails. Именно контроллер отвечает за дальнейшие действия. В некоторых случаях (статические страницы), контроллер немедленно отобразит страницу, представляющую собой шаблон с расширением ",l.createElement(t.code,null,"html.erb"),". Шаблон преобразуется в чистый HTML и отображается в браузере."),"\n",l.createElement(t.p,null,"Если же речь идёт о динамических сайтах, контроллер взаимодействует моделью, а модель в свою очередь отвечает за связь с базой данных. После обработки запрошенных данных, контроллер направляется к соответствующим шаблонам из ",l.createElement(t.code,null,"app/views/")," и отображает страницу в виде HTML как и в первом случае."),"\n",l.createElement(t.p,null,"Адрес, где находится страница, определяется при помощи файла ",l.createElement(t.code,null,"config/routes.rb"),"."),"\n",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<span\n      class="gatsby-resp-image-wrapper"\n      style="position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 343px; flex:1;"\n    >\n      <span\n    class="gatsby-resp-image-background-image"\n    style="padding-bottom: 135.33333333333331%; position: relative; bottom: 0; left: 0; display: block;"\n  ></span>\n  <picture>\n          <source\n              srcset="/static/b07bf82275e25a526792551981d429dc/e93cc/rails_archive1.webp 300w,\n/static/b07bf82275e25a526792551981d429dc/6eb2a/rails_archive1.webp 343w"\n              sizes="(max-width: 343px) 100vw, 343px"\n              type="image/webp"\n            />\n          <source\n            srcset="/static/b07bf82275e25a526792551981d429dc/eed55/rails_archive1.png 300w,\n/static/b07bf82275e25a526792551981d429dc/cb082/rails_archive1.png 343w"\n            sizes="(max-width: 343px) 100vw, 343px"\n            type="image/png"\n          />\n          <img\n            class="gatsby-resp-image-image"\n            src="/static/b07bf82275e25a526792551981d429dc/cb082/rails_archive1.png"\n            alt="rails: request and responce"\n            title=""\n            loading="lazy"\n            decoding="async"\n            style="width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;"\n          />\n        </picture>\n    </span>'}}),"\n",l.createElement(t.p,null,"Наш архив не может быть статическим, ибо данные должны добавляться в него сразу же после публикации новой статьи. Значит обратимся к динамическому представлению страницы."),"\n",l.createElement(t.p,null,"Предполагается, что модель и контроллёр для статей (articles) уже существуют. Мы просто добавим дополнительный метод имеющемуся контроллёру и создадим новый шаблон представления."),"\n",l.createElement(t.h2,{id:"контроллер",style:{position:"relative"}},l.createElement(t.a,{href:"#%D0%BA%D0%BE%D0%BD%D1%82%D1%80%D0%BE%D0%BB%D0%BB%D0%B5%D1%80","aria-label":"контроллер permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Контроллер"),"\n",l.createElement(t.p,null,"Создадим новый метод ",l.createElement(t.code,null,"archive"),", оперирующий переменной ",l.createElement(t.code,null,"archives_by_year"),".\nЭта переменная будет включать в себя все существующие публикации, упорядоченные по дате создания с установленным лимитом на вывод количества постов на одной странице (вряд ли нам действительно понадобится последнее действие, но лучше подстраховаться)."),"\n",l.createElement(t.p,null,"Кроме описанных действий, мы воспользуемся группированием статей, обратившись к методу ",l.createElement(t.code,null,"beginning_of_year"),", который отображает время, взяв за точку отсчёта начало года."),"\n",l.createElement(r.y,{heading:"Примечание"},l.createElement(t.p,null,"Для получения подробной информации обратитесь к документации по API RoR. Все «временны́е» методы можно отыскать в описании модуля ",l.createElement("code",null,"DateAndTime::Calculations")," (для RoR 4).")),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-ruby"},'# app/controllers/articles-controller.rb\n\nclass ArticlesController < ApplicationController\n  def archive\n    @articles_by_year = Article.limit(300).find(\n      :all,\n      :order => "created_at DESC"\n      ).group_by { |article| article.created_at.beginning_of_year }\n  end\nend\n')),"\n",l.createElement(t.h2,{id:"модель",style:{position:"relative"}},l.createElement(t.a,{href:"#%D0%BC%D0%BE%D0%B4%D0%B5%D0%BB%D1%8C","aria-label":"модель permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Модель"),"\n",l.createElement(t.p,null,"Применительно к указанной в начале поста задаче сама модель не представляет для нас большого интереса, но сто́ит обратить внимание, что отсортировать публикации по дате можно прямо здесь и это будет работать для всех статей, где бы они не выводились."),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-ruby"},"# app/models/article.rb\n\nclass Article < ActiveRecord::Base\n  # сортировка публикаций\n  default_scope order: 'articles.created_at DESC'\n  # при необходимости здесь же указываем валидацию\n  # для элементов статьи\n  validates :slug, presence: true, length: {maximum:30}\n")),"\n",l.createElement(t.h2,{id:"представление",style:{position:"relative"}},l.createElement(t.a,{href:"#%D0%BF%D1%80%D0%B5%D0%B4%D1%81%D1%82%D0%B0%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5","aria-label":"представление permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Представление"),"\n",l.createElement(t.p,null,"Собственно, оно будет отвечать за то ",l.createElement(t.em,null,"как")," выводить архив. Здесь мы берём созданную нами переменную ",l.createElement(t.code,null,"articles_by_year")," и проводим итерацию по всем содержащимся в ней элементам. Тут же форматируем вывод дат при помощи метода ",l.createElement(t.code,null,"strftime")," и даже подсчитываем количество опубликованных постов при необходимости (посредством методов ",l.createElement(t.em,null,"count")," или ",l.createElement(t.em,null,"length"),")."),"\n",l.createElement(t.p,null,'Затем для каждой из статей указываем ссылку, при нажатии на которую можно перейти к полной версии, и время создания исключительно для удобства восприятия. Для времени создания также используем форматирование, чтобы отобразить только день и месяц ("%d %B").'),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-erb"},'<%# app/views/articles/archive.html.erb %>\n\n<% @articles_by_year.each do |year, articles| %>\n  <h2><%= "#{year.strftime(\'%Y\')} (#{articles.count})" %></h2>\n\n  <dl>\n    <% for article in articles %>\n      <dd><%= link_to article.title, article %>\n      <span><%= article.created_at.strftime("%d %B") %></span>\n      </dd>\n    <% end %>\n  </dl>\n<% end %>\n')),"\n",l.createElement(t.p,null,"Результат должен быть похожим на это:"),"\n",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<span\n      class="gatsby-resp-image-wrapper"\n      style="position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 800px; flex:2;"\n    >\n      <span\n    class="gatsby-resp-image-background-image"\n    style="padding-bottom: 58.00000000000001%; position: relative; bottom: 0; left: 0; display: block;"\n  ></span>\n  <picture>\n          <source\n              srcset="/static/1cec0f6372a185420448676c535ca7fa/e93cc/rails_archive2.webp 300w,\n/static/1cec0f6372a185420448676c535ca7fa/b0544/rails_archive2.webp 600w,\n/static/1cec0f6372a185420448676c535ca7fa/8d2ea/rails_archive2.webp 800w"\n              sizes="(max-width: 800px) 100vw, 800px"\n              type="image/webp"\n            />\n          <source\n            srcset="/static/1cec0f6372a185420448676c535ca7fa/73b64/rails_archive2.jpg 300w,\n/static/1cec0f6372a185420448676c535ca7fa/3ad8d/rails_archive2.jpg 600w,\n/static/1cec0f6372a185420448676c535ca7fa/c60e9/rails_archive2.jpg 800w"\n            sizes="(max-width: 800px) 100vw, 800px"\n            type="image/jpeg"\n          />\n          <img\n            class="gatsby-resp-image-image"\n            src="/static/1cec0f6372a185420448676c535ca7fa/c60e9/rails_archive2.jpg"\n            alt="archive"\n            title=""\n            loading="lazy"\n            decoding="async"\n            style="width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;"\n          />\n        </picture>\n    </span>'}}),"\n",l.createElement(t.p,null,"Но, постойте, кажется, мы забыли кое-что."),"\n",l.createElement(t.h2,{id:"роутинг",style:{position:"relative"}},l.createElement(t.a,{href:"#%D1%80%D0%BE%D1%83%D1%82%D0%B8%D0%BD%D0%B3","aria-label":"роутинг permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Роутинг"),"\n",l.createElement(t.p,null,"Ни одна страница не может существовать без адреса. Rails предлагает вам выбрать любой понравившийся, и поможет нам в этом деле маршрутизация. Заглянем в файл ",l.createElement(t.code,null,"routes.rb")," и определим то, какому адресу будет соответствовать каждый из методов контроллера."),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-ruby"},"# config/routes.rb\n\nMyblog::Application.routes.draw do\n  resources :articles\n  root 'articles#index' # главная страница\n  get 'archive/' => 'articles#archive' # архив\n  # предположим, у нас имеются статические страницы\n  get 'about/' => 'static_pages#about'\n  get 'authors/' => 'static_pages#authors'\nend\n")),"\n",l.createElement(t.p,null,"Выше представлен простейший вариант определения маршрутов. Чтобы изменения вступили в силу, следует дать команду:"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-shell"},"$ rake routes\nPrefix Verb   URI Pattern         Controller#Action\nroot GET      /                   articles#index\nabout GET     /about(.:format)    static_pages#about\nauthors GET   /authors(.:format)  static_pages#authors\narchive GET   /archive(.:format)  articles#archive\n")),"\n",l.createElement(t.p,null,"С её помощью Rails переопределит старые маршруты и найдёт новые, если таковые имеются. Вот и всё, можно запускать сервер и полюбоваться на результат."))}var i=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,n.MN)(),e.components);return t?l.createElement(t,e,l.createElement(c,e)):c(e)},s=a(7792),o=a(7619);function m(e){var t,a;let{data:{mdx:n},children:r,pageContext:{prev:c,next:i}}=e;const{h1:m,title:p,description:d,image:u,table_of_contents:h}=n.frontmatter;return(0,l.useEffect)((()=>{(0,o.K)()}),[]),l.createElement(l.Fragment,null,l.createElement(s._W,{h1:m,title:p,description:d,image:null===(t=n.frontmatter.image)||void 0===t?void 0:t.publicURL},l.createElement(s.MV,{post:n.frontmatter,imageData:null==u||null===(a=u.childImageSharp)||void 0===a?void 0:a.gatsbyImageData},h?l.createElement(s.G8,{headings:n.tableOfContents}):null,l.createElement("div",{className:"page__content"},r,l.createElement(s.Mf,{prev:c,next:i})),l.createElement(s.QZ,null))))}function p(e){return l.createElement(m,e,l.createElement(i,e))}},8860:function(e,t,a){a.d(t,{y:function(){return n.y}});var n=a(3836)},8876:function(e,t,a){a.d(t,{MN:function(){return r}});var n=a(4424);const l=n.createContext({});function r(e){const t=n.useContext(l);return n.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}}}]);