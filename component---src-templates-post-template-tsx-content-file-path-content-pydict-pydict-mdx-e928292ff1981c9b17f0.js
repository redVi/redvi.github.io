"use strict";(self.webpackChunkgatsby_blog=self.webpackChunkgatsby_blog||[]).push([[7544],{8828:function(e,n,t){t.r(n),t.d(n,{Head:function(){return o.Ss},default:function(){return m}});var l=t(8876),r=t(4424);function a(e){const n=Object.assign({p:"p",h2:"h2",a:"a",span:"span",code:"code",pre:"pre"},(0,l.MN)(),e.components);return r.createElement(r.Fragment,null,r.createElement(n.p,null,"Пост создан для рассмотрения небольшого примера возможностей языка python. Мы не станем углубляться в сложные темы языка, например, такие как объектно-ориентированное программирование и связанные с ним классы. Да, они являются мощным инструментом для создания сложных приложений, но нам этого пока не требуется."),"\n",r.createElement(n.p,null,"Цель: создать англо-русский, русско-английский словарь с возможностью вносить в него новые, пользовательские значения. Первое, что приходи на ум — словари языка python."),"\n",r.createElement(n.p,null,"Словарь в питоне — неупорядоченная последовательность пар ключ — значение. Что, собственно, и требовалось, верно?"),"\n",r.createElement(n.h2,{id:"пример-первый",style:{position:"relative"}},r.createElement(n.a,{href:"#%D0%BF%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%BF%D0%B5%D1%80%D0%B2%D1%8B%D0%B9","aria-label":"пример первый permalink",className:"anchor before"},r.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Пример первый"),"\n",r.createElement(n.p,null,"Итак, первый файл должен содержать сам словарь с некоторыми значениями."),"\n",r.createElement(n.p,null,"Создадим его. Назовём ",r.createElement(n.code,null,"words.py")),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-python"},"# words.py\n\nwords={'word': 'мир',\\\n    'earth':'земля',\\\n    'you': 'ты',\\\n    'I':'я',\\\n    'We':'мы',\\\n    'probably':'вероятно',\\\n    'piece':'кусок',\\\n    'tired':'усталый',\\\n    'should':'должен',\\\n    'be able':'быть в состоянии',\\\n    'not enough':'не хватает',\\\n    'enough':'достаточно',\\\n    'should':'должен',\\\n    'represent':'представлять',\\\n    'sequence':'последовательность'}\n")),"\n",r.createElement(n.p,null,"И так далее."),"\n",r.createElement(n.p,null,"Теперь нужно как-то спросить у пользователя, перевод какого именно слова он хотел бы найти и вывести значение на экран. Кроме того, не стоит забывать, что наш словарь работает в двух направлениях: он должен не только переводить с английского на русский, но и наоборот!"),"\n",r.createElement(n.p,null,"Создадим стартовый файл с функциями, запускающими в зависимости от предпочтений пользователя тот или иной вариант перевода."),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-python"},"# mydictionary.py\n\n#!/usr/bin/env python\n# -*- coding:utf-8 -*-\nfrom words import words\n\ndef eng():\n    eng_words=dict([[v, k] for k,v in words.items()])\n    find_word=input('Enter word ' '')\n    print(eng_words.get(find_word) or print('No such key'))\n\ndef rus():\n    key=input('Введите слово ' '')\n    print (words.get(key) or 'Искомое слово не найдено')\n\nif __name__ == '__main__':\n    x=input('Найти перевод английского слова? ' '')\n    if x == 'y':\n        rus()\n    elif x == 'n':\n        eng()\n    else:\n        print('Увидимся позже')\n")),"\n",r.createElement(n.p,null,"Отлично! Разберём построчно:"),"\n",r.createElement(n.p,null,r.createElement(n.code,null,"from words import words")," — импортируем из файла words.py сам словарь — ",r.createElement(n.code,null,"words")),"\n",r.createElement(n.p,null,"Пишем две функции: ",r.createElement(n.code,null,"eng")," и ",r.createElement(n.code,null,"rus")," без параметров."),"\n",r.createElement(n.p,null,r.createElement(n.code,null,"eng_words=dict([[v, k] for k,v in words.items()])"),' — это словарь "наоборот" для перевода русских слов на английские, теперь ключи стали значениями, а значения — ключами!'),"\n",r.createElement(n.p,null,r.createElement(n.code,null,"find_word=input('Enter word ' '')")," - просим пользователя ввести искомое слово"),"\n",r.createElement(n.p,null,r.createElement(n.code,null,"print(eng_words.get(find_word) or print('No such key'))")," — выводим на экран ответ с помощью функции ",r.createElement(n.code,null,"print"),", получаем значение (",r.createElement(n.code,null,"get"),"). В противном случае, отвечаем, что не смогли отыскать нужное слово."),"\n",r.createElement(n.p,null,"Функция ",r.createElement(n.code,null,"rus()")," работает так же, но без инвертирования словаря."),"\n",r.createElement(n.p,null,'Вы уже догадались: наш словарь "наоборот" нужен для того, чтобы не приходилось писать два словаря — мы просто меняем ключи и значения местами.'),"\n",r.createElement(n.p,null,"Попробуйте запустить ",r.createElement(n.code,null,"mydictionary.py")," и насладитесь результатом."),"\n",r.createElement(n.p,null,"Что сейчас делает наша программа?"),"\n",r.createElement(n.p,null,"Спрашивает искомое слово, выводит ответ. Но осталось ощущение, что всё слишком просто и чего-то не хватает. Давайте немного усложним задачу: создадим базу данных для словаря и дадим пользователю возможность добавлять свои значения."),"\n",r.createElement(n.h2,{id:"пример-второй",style:{position:"relative"}},r.createElement(n.a,{href:"#%D0%BF%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%B2%D1%82%D0%BE%D1%80%D0%BE%D0%B9","aria-label":"пример второй permalink",className:"anchor before"},r.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Пример второй"),"\n",r.createElement(n.p,null,"Создание базы данных. Файл ",r.createElement(n.code,null,"words_db.py")),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-python"},"# words_db.py\n\n#!/usr/bin/env python\n# -*- coding:utf-8 -*-\nimport shelve\ndb = shelve.open('db_file')\ndb['earth']='земля'\ndb['word']='слово'\ndb['catch']='ловить'\ndb['find']='искать'\ndb.close()\n")),"\n",r.createElement(n.p,null,"База данных создаётся при помощи модуля ",r.createElement(n.code,null,"shelve"),", импортируем его. Далее укажем входной файл: ",r.createElement(n.code,null,"db_file"),", он открывается, в него записываются данные — теперь именно это наш словарь. Файл ",r.createElement(n.code,null,"words.py"),", используемый в первом примере, нам больше не нужен."),"\n",r.createElement(n.p,null,"После записи значений, базу данных нужно закрыть — ",r.createElement(n.code,null,"db.close()"),". Создайте нашу базу данных — ",r.createElement(n.code,null,"db_file"),":"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-shell"},"$ python words_db.py\n")),"\n",r.createElement(n.p,null,"Восстановление базы данных из файла ",r.createElement(n.code,null,"db_file")),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-python"},"# dump_words_db.py\n\n#!/usr/bin/env python\n# -*- coding:utf-8 -*-\nimport shelve\ndb=shelve.open('db_file')\nprint('Yes')\n")),"\n",r.createElement(n.p,null,"Мы больше не используем просто словарь, значит и наш главный файл, запускающий функции, должен измениться. Напишем его:"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-python"},"# start_programm.py\n\n#!/usr/bin/env python\n# -*- coding:utf-8 -*-\nimport shelve\ndb=shelve.open('db_file')\n\ndef eng():\n    eng_words=dict([[v, k] for k,v in db.items()])\n    find_word=input('Enter word ' '')\n    print(eng_words.get(find_word) or print('No such key'))\n\ndef rus():\n    key=input('Введите слово ' '')\n    print (db.get(key) or 'Искомое слово не найдено')\n\ndef newRecord():\n    newkey=input('Ввести новое слово ' '')\n    newvalue=input('Ввести перевод ' '')\n    db[newkey] = newvalue\n    db.update()\n    db.close()\n\nif __name__ == '__main__':\n    start=input('Найти английский перевод русского слова? введите \"y\" или \"n\" ' '')\n    if start == 'y':\n        eng()\n    elif start == 'n':\n        rus()\n    elif start == 'u':\n        newRecord()\n    else:\n        print('До встречи')\n")),"\n",r.createElement(n.p,null,"Рассмотрим подробнее"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-python"},"import shelve\ndb=shelve.open('db_file')\n")),"\n",r.createElement(n.p,null,"Мы импортировали модуль ",r.createElement(n.code,null,"shelve")," и открыли нашу базу данных, содержащую словарь"),"\n",r.createElement(n.p,null,"Далее создали функцию, которая будет искать в файле ",r.createElement(n.code,null,"db_file")," значение ключа. В случае с функцией ",r.createElement(n.code,null,"eng()")," — значения в словаре инвертируются."),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-python"},"def eng():\n    eng_words=dict([[v, k] for k,v in db.items()])\n    find_word=input('Enter word ' '')\n    print(eng_words.get(find_word) or print('No such key'))\n")),"\n",r.createElement(n.p,null,"Кроме того, нужно дать пользователю внести свои значения - дополнить словарь, если он не нашёл в нём перевода нужного слова."),"\n",r.createElement(n.p,null,"За это отвечает функция ",r.createElement(n.code,null,"newRecord()"),", которая предлагает ввести новые ключ и значение, а затем записывает их в базу данных и обновляет её."),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-python"},"def newRecord():\n    newkey=input('Ввести новое слово ' '')\n    newvalue=input('Ввести перевод ' '')\n    db[newkey] = newvalue\n    db.update()\n    db.close()\n")),"\n",r.createElement(n.p,null,"Что означает последняя запись? Она работает, когда запускается программа и предлагает различные варианты. Если пользователь ввёл в ответ ",r.createElement(n.code,null,"'y'")," — ищет перевод русского слова на английский, если ",r.createElement(n.code,null,"'n'")," — ищет перевод английского слова на русский, если ",r.createElement(n.code,null,"'u'")," (update) — позволяет внести свои значения."),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-python"},"if __name__ == '__main__':\n    start=input('Найти английский перевод русского слова? введите \"y\" или \"n\" ' '')\n    if start == 'y':\n        eng()\n    elif start == 'n':\n        rus()\n    elif start == 'u':\n        newRecord()\n    else:\n        print('До встречи')\n")),"\n",r.createElement(n.p,null,"Наш словарь отрабатывает один раз и программа закрывается. Можно спрашивать о действиях снова и снова, для этого достаточно заключить инструкции в цикл ",r.createElement(n.code,null,"while"),'. Можно добавить графическое представление программы или "веб-морду". Но это уже совсем другая история и для примера простой программы она не подойдёт.'))}var c=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,l.MN)(),e.components);return n?r.createElement(n,e,r.createElement(a,e)):a(e)},o=t(7792),d=t(7619);function u(e){var n,t;let{data:{mdx:l},children:a,pageContext:{prev:c,next:u}}=e;const{h1:m,title:i,description:s,image:p,table_of_contents:E}=l.frontmatter;return(0,r.useEffect)((()=>{(0,d.K)()}),[]),r.createElement(r.Fragment,null,r.createElement(o._W,{h1:m,title:i,description:s,image:null===(n=l.frontmatter.image)||void 0===n?void 0:n.publicURL},r.createElement(o.MV,{post:l.frontmatter,imageData:null==p||null===(t=p.childImageSharp)||void 0===t?void 0:t.gatsbyImageData},E?r.createElement(o.G8,{headings:l.tableOfContents}):null,r.createElement("div",{className:"page__content"},a,r.createElement(o.Mf,{prev:c,next:u})),r.createElement(o.QZ,null))))}function m(e){return r.createElement(u,e,r.createElement(c,e))}},8876:function(e,n,t){t.d(n,{MN:function(){return a}});var l=t(4424);const r=l.createContext({});function a(e){const n=l.useContext(r);return l.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}}}]);