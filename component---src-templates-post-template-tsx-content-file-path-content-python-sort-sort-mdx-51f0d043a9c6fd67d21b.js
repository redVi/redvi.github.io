"use strict";(self.webpackChunkgatsby_blog=self.webpackChunkgatsby_blog||[]).push([[2228],{8632:function(n,e,a){a.r(e),a.d(e,{Head:function(){return o.Ss},default:function(){return u}});var t=a(8876),s=a(4424);function l(n){const e=Object.assign({p:"p",span:"span",ul:"ul",li:"li",h2:"h2",a:"a"},(0,t.MN)(),n.components);return s.createElement(s.Fragment,null,s.createElement(e.p,null,"Ранее мы уже писали различные скрипты для примера использования возможностей языка ",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">python</code>'}}),", но не сказать, чтобы они были нужны в повседневности и могли претендовать на какое-то практическое применение. Сегодня же будет рассмотрен один очень небольшой и очень нужный (автору) скрипт. На его написание натолкнуло использование gentoo linux поэтому считаю, что он может быть небезынтересен пользователям этой операционной системы и прикрепляю соответствующий тег к посту."),"\n",s.createElement(e.p,null,"В чём суть работы скрипта: он сортирует в алфавитном порядке записи в ",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">/etc/portage/*</code>'}}),". При пополнении парка программ такие файлы как ",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">package.use</code>'}}),", ",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">package.keywords</code>'}})," и им подобные наполняются беспорядочными строками, в коих некоторое время спустя сложно найти что-то самому хозяину. Так расставим всё по местам!"),"\n",s.createElement(e.p,null,"Сначала приводится полный пример кода, содержащий менее двадцати строк, затем построчный разбор с комментариями."),"\n",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python"><span class="token comment"># sort.py</span>\n<span class="token comment">#</span>\n<span class="token comment">#! /usr/bin/env python</span>\n<span class="token comment"># -*- coding: utf-8 -*-</span>\npackage <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">\'Choose file for sort: \'</span><span class="token punctuation">)</span>\n<span class="token keyword">try</span><span class="token punctuation">:</span>\n    <span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>package<span class="token punctuation">,</span> <span class="token string">\'r+\'</span><span class="token punctuation">)</span>\n    pos <span class="token operator">=</span> <span class="token number">0</span>\n    line <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token builtin">file</span><span class="token punctuation">.</span>seek<span class="token punctuation">(</span>pos<span class="token punctuation">)</span>\n    sort_text <span class="token operator">=</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span>\n    <span class="token keyword">for</span> new_line <span class="token keyword">in</span> sort_text<span class="token punctuation">:</span>\n        <span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>new_line<span class="token punctuation">)</span>\n        pos <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>tell<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">except</span> IOError<span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"No such file or directory. Repeat, please!"</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",s.createElement(e.p,null,"Первая строка указывает на расположение интерпретатора ",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">python</code>'}}),", вторая — на кодировку по-умолчанию."),"\n",s.createElement(e.p,null,"Далее вводится переменная package, которой будет присвоено значение указанное пользователем. Иными словами при запуске команды ",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">sudo python sort.py</code>'}})," будет запрошен путь к текстовому файлу, который в дальнейшем и подвергнется правке."),"\n",s.createElement(e.p,null,"Весь следующий блок кода обёрнут инструкцией ",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">try-except</code>'}}),", перехватывающей исключение ",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">IOError</code>'}}),". Это нужно для проверки ввода пользовательских данных. Например, вы могли ошибиться при наборе пути к файлу или ввели число. В таком случае вам укажут на вашу ошибку."),"\n",s.createElement(e.ul,null,"\n",s.createElement(e.li,null,"file = open(package, 'r+') — открыть выбранный пользователем файл для обновления."),"\n",s.createElement(e.li,null,"pos = 0 — установить позицию в начало"),"\n",s.createElement(e.li,null,"line = file.readlines() — построчное чтение из файла и присваивание переменной line получившегося списка"),"\n",s.createElement(e.li,null,"file.seek(pos) — перемещать позицию"),"\n",s.createElement(e.li,null,"sort_text = sorted(line) — получение нового отсортированного по алфавиту списка"),"\n"),"\n",s.createElement(e.p,null,"В следующем блоке проводится обход списка, перезапись выбранного файла, возвращение текущей позиции, закрытие файла:"),"\n",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python"><span class="token keyword">for</span> new_line <span class="token keyword">in</span> sort_text<span class="token punctuation">:</span>\n    <span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>new_line<span class="token punctuation">)</span>\n    pos <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>tell<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",s.createElement(e.p,null,"Кроме того, можно проводить сортировку по ключу. Для этого достаточно создать дополнительную функцию. Например:"),"\n",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">sortByLenght</span><span class="token punctuation">(</span>inputSrt<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">return</span> <span class="token builtin">len</span><span class="token punctuation">(</span>inputSrt<span class="token punctuation">)</span></code></pre></div>'}}),"\n",s.createElement(e.p,null,"Теперь можно вызывать функцию sorted с ключом:"),"\n",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell"><span class="token operator">>></span><span class="token operator">></span> new_list <span class="token operator">=</span> sorted<span class="token punctuation">(</span>old_list, <span class="token assign-left variable">key</span><span class="token operator">=</span>sortByLenght<span class="token punctuation">)</span></code></pre></div>'}}),"\n",s.createElement(e.h2,{id:"ещё-немного-теории-или-справка",style:{position:"relative"}},s.createElement(e.a,{href:"#%D0%B5%D1%89%D1%91-%D0%BD%D0%B5%D0%BC%D0%BD%D0%BE%D0%B3%D0%BE-%D1%82%D0%B5%D0%BE%D1%80%D0%B8%D0%B8-%D0%B8%D0%BB%D0%B8-%D1%81%D0%BF%D1%80%D0%B0%D0%B2%D0%BA%D0%B0","aria-label":"ещё немного теории или справка permalink",className:"anchor before"},s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Ещё немного теории или справка:"),"\n",s.createElement(e.p,null,"Файл может быть открыт в режимах только для чтения, для записи, для обновления."),"\n",s.createElement(e.ul,null,"\n",s.createElement(e.li,null,"f = open('file') — откроет файл только для чтения"),"\n",s.createElement(e.li,null,"f = open('file', 'r') — то же самое"),"\n",s.createElement(e.li,null,"'w' — открытие файла для записи"),"\n",s.createElement(e.li,null,"'a' — для добавления в конец"),"\n",s.createElement(e.li,null,"'b' — указание на двоичные данные: ",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:"<code class=\"language-text\">'wb'</code>"}}),", ",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:"<code class=\"language-text\">'rb'</code>"}}),"."),"\n",s.createElement(e.li,null,"'t' — явное указание на то, что файл текстовый. Обычно не пишется"),"\n",s.createElement(e.li,null,"'w+' — открытие файла в режиме для обновления, в момент открытия файла его длина усекается до нуля, возможны чтение и запись"),"\n",s.createElement(e.li,null,"'r+' —  открытие файла в режиме для обновления, длина не усекается, возможны чтение и запись"),"\n",s.createElement(e.li,null,"метод readline() — читает одну строку, возвращает строку"),"\n",s.createElement(e.li,null,"метод readlines() — читает все строки из файла, возвращает список"),"\n",s.createElement(e.li,null,"метод tell() — возвращает текущую позицию в файле"),"\n",s.createElement(e.li,null,"метод seek() — перемещает текущую позицию в новое место"),"\n",s.createElement(e.li,null,"метод write() — запишет в файл одну строку"),"\n",s.createElement(e.li,null,"метод writelines() — запишет список строк"),"\n"))}var p=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,t.MN)(),n.components);return e?s.createElement(e,n,s.createElement(l,n)):l(n)},o=a(7792),c=a(7619);function r(n){var e,a;let{data:{mdx:t},children:l,pageContext:{prev:p,next:r}}=n;const{h1:u,title:i,description:k,image:g,table_of_contents:m}=t.frontmatter;return(0,s.useEffect)((()=>{(0,c.K)()}),[]),s.createElement(s.Fragment,null,s.createElement(o._W,{h1:u,title:i,description:k,image:null===(e=t.frontmatter.image)||void 0===e?void 0:e.publicURL},s.createElement(o.MV,{post:t.frontmatter,imageData:null==g||null===(a=g.childImageSharp)||void 0===a?void 0:a.gatsbyImageData},m?s.createElement(o.G8,{headings:t.tableOfContents}):null,s.createElement("div",{className:"page__content"},l,s.createElement(o.Mf,{prev:p,next:r})),s.createElement(o.QZ,null))))}function u(n){return s.createElement(r,n,s.createElement(p,n))}},8876:function(n,e,a){a.d(e,{MN:function(){return l}});var t=a(4424);const s=t.createContext({});function l(n){const e=t.useContext(s);return t.useMemo((()=>"function"==typeof n?n(e):{...e,...n}),[e,n])}}}]);