"use strict";(self.webpackChunkgatsby_blog=self.webpackChunkgatsby_blog||[]).push([[9896],{312:function(n,a,s){s.r(a),s.d(a,{Head:function(){return c.Ss},default:function(){return r}});var t=s(8876),p=s(4424);function e(n){const a=Object.assign({p:"p",em:"em",span:"span",h2:"h2",a:"a",strong:"strong",h3:"h3",ul:"ul",li:"li"},(0,t.MN)(),n.components);return p.createElement(p.Fragment,null,p.createElement(a.p,null,"В языке JavaScript есть такая вещь как this. Часто взаимодействие с ним вызывает\nтрудности у начинающих разработчиков. Надеюсь, после прочтения этой заметки вам\nникогда больше не придётся сталкиваться с неожиданным поведением ваших функций.\nЗдесь рассматривается сущность this и управление его поведением в часто\nвстречающихся сценариях."),"\n",p.createElement(a.p,null,"Мы используем this так же, как местоимение в языках подобных английскому или русскому.\nНе всегда называем имя или предмет, а говорим применительно к нему «этот».\nТо же самое происходит при использовании ключевого слова this в языках программирования.\nThis всегда является ссылкой на свойство объекта, но ",p.createElement(a.em,null,"что это за объект")," зависит\nот контекста."),"\n",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token keyword">var</span> Person <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">firstName</span><span class="token operator">:</span> <span class="token string">"Jack"</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">lastName</span><span class="token operator">:</span>  <span class="token string">"Sparrow"</span><span class="token punctuation">,</span>\n\n  <span class="token function-variable function">fullName</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// this означает "этот"</span>\n    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>firstName <span class="token operator">+</span> <span class="token string">\' \'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lastName<span class="token punctuation">;</span>\n    <span class="token comment">// аналогично такой записи:</span>\n    <span class="token keyword">return</span> Person<span class="token punctuation">.</span>firstName <span class="token operator">+</span> <span class="token string">\' \'</span> <span class="token operator">+</span> Person<span class="token punctuation">.</span>lastName<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Person<span class="token punctuation">.</span><span class="token function">fullName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//-> Jack Sparrow</span></code></pre></div>'}}),"\n",p.createElement(a.h2,{id:"почему-this",style:{position:"relative"}},p.createElement(a.a,{href:"#%D0%BF%D0%BE%D1%87%D0%B5%D0%BC%D1%83-this","aria-label":"почему this permalink",className:"anchor before"},p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"почему this"),"\n",p.createElement(a.p,null,"Если вместо this обращаться к объекту через его имя (Person), мы рискуем вызвать\nметод совсем не того объекта. Ведь код может быть написан не одним человеком.\nВы уверены, что в скриптах, которые писали не вы, не будет глобальной переменной\nс таким же именем?"),"\n",p.createElement(a.p,null,"Объекты, как и функции, имеют свойства. Когда функция выполняется, она получает\nсвойство this того объекта, который её вызвал. This обычно используется внутри\nфункции, но при вызове в глобальной области видимости его значение будет\nзависеть от окружения. Например, для браузера глобальным объектом будет window,\nи код ",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">console.log(this.innerHeight);</code>'}})," вернёт высоту окна."),"\n",p.createElement(a.p,null,"При использовании ",p.createElement(a.strong,null,"строгого режима")," (strict mode) это не сработает: this не\nбудет связан с глобальным объектом и код вызовет ошибку. Такое же поведение\nожидаемо с анонимными функциями, ведь они не привязаны к конкретному объекту."),"\n",p.createElement(a.p,null,"Небольшой пример того, как работает this с jQuery:"),"\n",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">\'button\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// $(this) указывает на $(\'button\') потому что объект $(\'button\')</span>\n  <span class="token comment">// запускает метод click, в котором определён this</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">\'name\'</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",p.createElement(a.h2,{id:"когда-что-то-может-пойти-не-так",style:{position:"relative"}},p.createElement(a.a,{href:"#%D0%BA%D0%BE%D0%B3%D0%B4%D0%B0-%D1%87%D1%82%D0%BE-%D1%82%D0%BE-%D0%BC%D0%BE%D0%B6%D0%B5%D1%82-%D0%BF%D0%BE%D0%B9%D1%82%D0%B8-%D0%BD%D0%B5-%D1%82%D0%B0%D0%BA","aria-label":"когда что то может пойти не так permalink",className:"anchor before"},p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Когда что-то может пойти не так"),"\n",p.createElement(a.p,null,"Кажется, что всё просто как дважды два. Тогда почему this вызывает столько\nвопросов и ведёт себя не так, как мы ожидаем?"),"\n",p.createElement(a.h3,{id:"метод-как-функция-обратного-вызова",style:{position:"relative"}},p.createElement(a.a,{href:"#%D0%BC%D0%B5%D1%82%D0%BE%D0%B4-%D0%BA%D0%B0%D0%BA-%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D1%8F-%D0%BE%D0%B1%D1%80%D0%B0%D1%82%D0%BD%D0%BE%D0%B3%D0%BE-%D0%B2%D1%8B%D0%B7%D0%BE%D0%B2%D0%B0","aria-label":"метод как функция обратного вызова permalink",className:"anchor before"},p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Метод как функция обратного вызова"),"\n",p.createElement(a.p,null,"Объект ",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">Boxer</code>'}})," содержит некие данные и метод ",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">clickHandler</code>'}}),". Мы ищем объект-DOM\nс классом ",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">.boxer</code>'}}),". Добавляем обработчик события и в качестве функции пытаемся\nпередать ему ",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">clickHandler</code>'}}),", который будет рандомно отображать в консоли имя\nодного из боксёров."),"\n",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token keyword">var</span> Boxer <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'M.Tyson\'</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">49</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'M.Ali\'</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">74</span><span class="token punctuation">}</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token function-variable function">clickHandler</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> randomNum <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token operator">|</span><span class="token number">0</span><span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">[</span>randomNum<span class="token punctuation">]</span><span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">\' \'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">[</span>randomNum<span class="token punctuation">]</span><span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\ndocument<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">\'.boxer\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">\'click\'</span><span class="token punctuation">,</span> Boxer<span class="token punctuation">.</span>clickHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// -> Cannot read property \'1\' of undefined</span></code></pre></div>'}}),"\n",p.createElement(a.p,null,"Ничего не вышло. Всё дело в том, что функцию в данном контексте вызывает\nDOM-объект ",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">.boxer</code>'}}),". Наш ",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">Boxer.clickHandler</code>'}})," пытается быть выполненным в контексте\n",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">.boxer</code>'}}),"."),"\n",p.createElement(a.p,null,p.createElement(a.strong,null,"Решение:")," явно привязать функцию обратного вызова к объекту через метод ",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">bind()</code>'}}),"."),"\n",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token comment">// передаём нужный объект методу bind()</span>\ndocument<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">\'.boxer\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>\n  <span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">\'click\'</span><span class="token punctuation">,</span> Boxer<span class="token punctuation">.</span><span class="token function">clickHandler</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>Boxer<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",p.createElement(a.p,null,"Теперь всё в порядке."),"\n",p.createElement(a.h3,{id:"this-внутри-замыкания",style:{position:"relative"}},p.createElement(a.a,{href:"#this-%D0%B2%D0%BD%D1%83%D1%82%D1%80%D0%B8-%D0%B7%D0%B0%D0%BC%D1%8B%D0%BA%D0%B0%D0%BD%D0%B8%D1%8F","aria-label":"this внутри замыкания permalink",className:"anchor before"},p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"this внутри замыкания"),"\n",p.createElement(a.p,null,"Другой случай, когда поведение this может поставить в тупик: если он находится\nвнутри замыкания. Тогда мы не можем получить доступ к this внешней функции.\nПерепишем код примера выше так, чтобы он удовлетворял новому условию."),"\n",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token keyword">var</span> Boxer <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token string-property property">\'type of sport\'</span><span class="token operator">:</span> <span class="token string">\'boxing\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'M.Tyson\'</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">49</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'M.Ali\'</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">74</span> <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n\n  <span class="token function-variable function">clickHandler</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// ссылается на Boxer</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">person</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// теперь мы внутри data</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>name <span class="token operator">+</span>\n        <span class="token string">\'. His type of sport \'</span> <span class="token operator">+</span>  <span class="token keyword">this</span><span class="token punctuation">[</span><span class="token string">\'type of sport\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nBoxer<span class="token punctuation">.</span><span class="token function">clickHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//-> M.Tyson. His type of sport undefined</span></code></pre></div>'}}),"\n",p.createElement(a.p,null,"Раз this из замыкания не имеет доступа к this внешних функций, он будет привязан\nк глобальному объекту (если не включен строгий режим)."),"\n",p.createElement(a.p,null,p.createElement(a.strong,null,"Решение:")," передать значение this другой переменной перед тем как создать\nзамыкание. Такую переменную принято называть that."),"\n",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token function-variable function">clickHandler</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// передаём значение текущего this</span>\n  <span class="token keyword">var</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">person</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>name <span class="token operator">+</span>\n      <span class="token string">\'. His type of sport \'</span> <span class="token operator">+</span> that<span class="token punctuation">[</span><span class="token string">\'type of sport\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>that<span class="token punctuation">.</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">\'age\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// M.Tyson. His type of sport boxing</span>\n<span class="token comment">// 49</span></code></pre></div>'}}),"\n",p.createElement(a.p,null,"Хорошие новости. В ES6 делать этого не нужно. Спокойно пользуйтесь стрелочными\nфункциями, они не имеют своего this и просто берут тот, что снаружи."),"\n",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token keyword">var</span> Boxer <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token string-property property">\'type of sport\'</span><span class="token operator">:</span> <span class="token string">\'boxing\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'M.Tyson\'</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">49</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'M.Ali\'</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">74</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n\n  <span class="token function">clickHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">person</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>\n      <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>person<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">. His sport </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">[</span><span class="token string">\'type of sport\'</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nBoxer<span class="token punctuation">.</span><span class="token function">clickHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",p.createElement(a.h3,{id:"метод-объекта-передан-в-переменную",style:{position:"relative"}},p.createElement(a.a,{href:"#%D0%BC%D0%B5%D1%82%D0%BE%D0%B4-%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D0%B0-%D0%BF%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D0%BD-%D0%B2-%D0%BF%D0%B5%D1%80%D0%B5%D0%BC%D0%B5%D0%BD%D0%BD%D1%83%D1%8E","aria-label":"метод объекта передан в переменную permalink",className:"anchor before"},p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"метод объекта передан в переменную"),"\n",p.createElement(a.p,null,"Вернёмся к нашим боксёрам. Добавим пару чемпионов."),"\n",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Joe Louis\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Lennox Lewis\'</span> <span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">var</span> Boxer <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Mike Tyson\'</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">49</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Muhammad Ali\'</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">74</span> <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token function-variable function">clickHandler</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">var</span> showBoxer <span class="token operator">=</span> Boxer<span class="token punctuation">.</span>clickHandler<span class="token punctuation">;</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//-> Joe Louis</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">showBoxer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//-> Joe Louis</span></code></pre></div>'}}),"\n",p.createElement(a.p,null,"Вызов ",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">data</code>'}})," из глобальной области видимости и вызов ",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">showBoxer</code>'}})," оказался\nодинаковым. Когда ",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">showBoxer</code>'}})," срабатывает, вызывается анонимная функция:"),"\n",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",p.createElement(a.p,null,"Всё верно, этот кусок кода был «заморожен» в ",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">clickHandler</code>'}}),". Однако,\nсейчас он выполнился в контексте глобального объекта."),"\n",p.createElement(a.p,null,p.createElement(a.strong,null,"Решение:")," снова явно привязать метод к объекту."),"\n",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token keyword">var</span> showBoxer <span class="token operator">=</span> Boxer<span class="token punctuation">.</span><span class="token function">clickHandler</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>Boxer<span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">showBoxer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//-> Mike Tyson</span></code></pre></div>'}}),"\n",p.createElement(a.h3,{id:"заимствованные-методы",style:{position:"relative"}},p.createElement(a.a,{href:"#%D0%B7%D0%B0%D0%B8%D0%BC%D1%81%D1%82%D0%B2%D0%BE%D0%B2%D0%B0%D0%BD%D0%BD%D1%8B%D0%B5-%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B","aria-label":"заимствованные методы permalink",className:"anchor before"},p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"заимствованные методы"),"\n",p.createElement(a.p,null,"Четвёртый и последний случай: имеем два объекта, у одного из них хотим вызвать\nметод другого. Допустим, рассчитать среднее количество очков на раунд игры."),"\n",p.createElement(a.p,null,"Ниже используется метод ",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">reduce</code>'}}),". Он принимает значения:"),"\n",p.createElement(a.ul,null,"\n",p.createElement(a.li,null,"последний (он же промежуточный) результат (prev)"),"\n",p.createElement(a.li,null,"текущий элемент массива (cur)"),"\n",p.createElement(a.li,null,"номер текущего элемента (index)"),"\n",p.createElement(a.li,null,"передаваемый массив (array)"),"\n"),"\n",p.createElement(a.p,null,"В ",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">getTotal</code>'}})," передаём переменной сумму всех очков, затем делим их на количество\nраундов."),"\n",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token comment">// первая игра</span>\n<span class="token keyword">var</span> angryBirds <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// количество очков, 4 раунда</span>\n  <span class="token literal-property property">scores</span><span class="token operator">:</span>   <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token comment">// среднее значение ещё не рассчитано</span>\n  <span class="token literal-property property">average</span><span class="token operator">:</span> <span class="token keyword">null</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment">// вторая игра</span>\n<span class="token keyword">var</span> angryCats <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// количество очков, 5 раундов</span>\n  <span class="token literal-property property">scores</span><span class="token operator">:</span>   <span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">average</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n\n  <span class="token function-variable function">getTotal</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> sumOfScores <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>scores<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> cur<span class="token punctuation">,</span> index<span class="token punctuation">,</span> array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> prev <span class="token operator">+</span> cur<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>average <span class="token operator">=</span> sumOfScores <span class="token operator">/</span> <span class="token keyword">this</span><span class="token punctuation">.</span>scores<span class="token punctuation">.</span>length<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nangryBirds<span class="token punctuation">.</span>average <span class="token operator">=</span> angryCats<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>angryBirds<span class="token punctuation">.</span>average<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",p.createElement(a.p,null,"Но такой фокус не пройдёт. Метод ",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">getTotal</code>'}})," вызвается объектом angryCats."),"\n",p.createElement(a.p,null,p.createElement(a.strong,null,"Решение:")," ",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">apply</code>'}})," позволяет вызывать метод одного объекта в контексте другого."),"\n",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js">angryCats<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>angryBirds<span class="token punctuation">,</span> angryBirds<span class="token punctuation">.</span>scores<span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>angryBirds<span class="token punctuation">.</span>average<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",p.createElement(a.p,null,"Объект angryBirds «одолжил» метод ",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">getTotal</code>'}})," у angryCats. This передана\nangryBirds, потому что он указан первым параметром метода ",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">apply</code>'}}),"."))}var o=function(n){void 0===n&&(n={});const{wrapper:a}=Object.assign({},(0,t.MN)(),n.components);return a?p.createElement(a,n,p.createElement(e,n)):e(n)},c=s(7792),l=s(7619);function u(n){var a,s;let{data:{mdx:t},children:e,pageContext:{prev:o,next:u}}=n;const{h1:r,title:i,description:k,image:g,table_of_contents:d}=t.frontmatter;return(0,p.useEffect)((()=>{(0,l.K)()}),[]),p.createElement(p.Fragment,null,p.createElement(c._W,{h1:r,title:i,description:k,image:null===(a=t.frontmatter.image)||void 0===a?void 0:a.publicURL},p.createElement(c.MV,{post:t.frontmatter,imageData:null==g||null===(s=g.childImageSharp)||void 0===s?void 0:s.gatsbyImageData},d?p.createElement(c.G8,{headings:t.tableOfContents}):null,p.createElement("div",{className:"page__content"},e,p.createElement(c.Mf,{prev:o,next:u})),p.createElement(c.QZ,null))))}function r(n){return p.createElement(u,n,p.createElement(o,n))}},8876:function(n,a,s){s.d(a,{MN:function(){return e}});var t=s(4424);const p=t.createContext({});function e(n){const a=t.useContext(p);return t.useMemo((()=>"function"==typeof n?n(a):{...a,...n}),[a,n])}}}]);