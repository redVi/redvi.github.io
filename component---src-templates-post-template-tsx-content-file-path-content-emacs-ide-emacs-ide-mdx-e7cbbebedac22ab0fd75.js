"use strict";(self.webpackChunkgatsby_blog=self.webpackChunkgatsby_blog||[]).push([[3456],{9064:function(n,a,s){s.r(a),s.d(a,{Head:function(){return o.Ss},default:function(){return u}});var e=s(8876),t=s(4424);function p(n){const a=Object.assign({p:"p",h2:"h2",a:"a",span:"span",strong:"strong",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,e.MN)(),n.components);return t.createElement(t.Fragment,null,t.createElement(a.p,null,"В этом посте не будет вводных слов и примечаний: те, кто знает что собой представляют\nIDE и Emacs, но ещё не довели свой файл конфигурации до ума, возможно, найдут для себя что-то\nинтересное. Те же, кто использует новомодные текстовые редакторы, скорее всего\nобойдут данную заметку стороной, хотя... ребят, постойте! Зачем сидеть на\nновом условно-бесплатном, если старые проверенные временем редакторы могут быть\nтак же хороши? Ну, вы поняли: предположительно вторая категория возможных\nчитателей это sublime'ры. Приступим же."),"\n",t.createElement(a.h2,{id:"основные-пакеты",style:{position:"relative"}},t.createElement(a.a,{href:"#%D0%BE%D1%81%D0%BD%D0%BE%D0%B2%D0%BD%D1%8B%D0%B5-%D0%BF%D0%B0%D0%BA%D0%B5%D1%82%D1%8B","aria-label":"основные пакеты permalink",className:"anchor before"},t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Основные пакеты"),"\n",t.createElement(a.p,null,"Это о тех пакетах, которые пригодятся всегда, вне зависимости от используемого\nязыка программирования и личных пристрастий. Среди них имеются как уже\nвстроенные, так и те, что ещё предстоит поставить. Прошу обратить внимание:\nконфигурация строится на основе ",t.createElement(a.a,{href:"https://github.com/purcell/emacs.d",target:"_blank",rel:"nofollow"},t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">.emacs.d</code>'}})," от purcell")," и в ней для удобства\nопределены некоторые нестандартные функции."),"\n",t.createElement(a.p,null,"Напомню, что настройка осуществляется в вашем конфигурационном файле, таком как\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">.emacs</code>'}})," или же (что удобно когда настроек и пакетов множество) в файле\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">.emacs.d/init.el</code>'}}),", где подгружаются файлы, в каждом из которых описаны\nнастройки только для его собственного пакета."),"\n",t.createElement(a.p,null,"У автора структура каталога emacs выглядит следующим образом:"),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">~/.emacs.d/\n├── init.el\n├── lisp\n│   ├── init-css.el\n│   ├── init-ruby-mode.el\n├── snippets\n│   ├── css-mode\n└── themes\n    └── railscasts-theme.el</code></pre></div>'}}),"\n",t.createElement(a.p,null,"В ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">init.el</code>'}})," подгружаются файлы из директории ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">lisp</code>'}}),". Каждый файл описывает какой\nпакет здесь необходимо загрузить и какие настройки для этого пакета\nиспользовать. Идея была украдена у человека с ником purcell, о чём уже\nупоминалось во ",t.createElement(a.a,{href:"/posts/emacs/"},"вводной статье"),"."),"\n",t.createElement(a.p,null,"В «умолчательной» комплектации emacs содержит пакет ",t.createElement(a.strong,null,"ido"),", который\nпозволит с лёгкостью перемещаться между открытыми буферами нажатием клавиш ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">C-x b</code>'}}),".\nПотребуем его загрузки при старте редактора и сообщим о необходимости\nиспользовать данный функционал сразу."),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="lisp"><pre class="language-lisp"><code class="language-lisp"><span class="token comment">; init.el</span>\n<span class="token punctuation">(</span><span class="token keyword">require</span> <span class="token quoted-symbol variable symbol">\'ido</span><span class="token punctuation">)</span>\n<span class="token punctuation">(</span><span class="token car">ido-mode</span> <span class="token boolean">t</span><span class="token punctuation">)</span>\n<span class="token punctuation">(</span><span class="token keyword">require</span> <span class="token quoted-symbol variable symbol">\'init-yasnippet</span><span class="token punctuation">)</span>\n<span class="token punctuation">(</span><span class="token car">require-package</span> <span class="token quoted-symbol variable symbol">\'autopair</span><span class="token punctuation">)</span>\n<span class="token punctuation">(</span><span class="token car">autopair-global-mode</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"Также хорош на вкус знаменитый ",t.createElement(a.strong,null,"YASnippet"),", поставляющий коллекцию сниппетов для\nсамых разных языков программирования. Имеются горячие клавиши и возможность\nдобавления сниппетов собственных. Впрочем, если есть необходимость интерактивной\nвставки (с параметрами), лучше написать ",t.createElement(a.a,{href:"/posts/emacs-snippets/"},"свою функцию"),"."),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<span\n      class="gatsby-resp-image-wrapper"\n      style="position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 908px; flex:2;"\n    >\n      <span\n    class="gatsby-resp-image-background-image"\n    style="padding-bottom: 42.66666666666667%; position: relative; bottom: 0; left: 0; display: block;"\n  ></span>\n  <picture>\n          <source\n              srcset="/static/0cebbb37e6bc99f75cdab6c501843a1b/e93cc/yasnippet.webp 300w,\n/static/0cebbb37e6bc99f75cdab6c501843a1b/b0544/yasnippet.webp 600w,\n/static/0cebbb37e6bc99f75cdab6c501843a1b/4987e/yasnippet.webp 908w"\n              sizes="(max-width: 908px) 100vw, 908px"\n              type="image/webp"\n            />\n          <source\n            srcset="/static/0cebbb37e6bc99f75cdab6c501843a1b/eed55/yasnippet.png 300w,\n/static/0cebbb37e6bc99f75cdab6c501843a1b/7491f/yasnippet.png 600w,\n/static/0cebbb37e6bc99f75cdab6c501843a1b/39ea5/yasnippet.png 908w"\n            sizes="(max-width: 908px) 100vw, 908px"\n            type="image/png"\n          />\n          <img\n            class="gatsby-resp-image-image"\n            src="/static/0cebbb37e6bc99f75cdab6c501843a1b/39ea5/yasnippet.png"\n            alt="YASnippet"\n            title=""\n            loading="lazy"\n            decoding="async"\n            style="width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;"\n          />\n        </picture>\n    </span>'}}),"\n",t.createElement(a.p,null,"Настройки для YASnippet:"),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="lisp"><pre class="language-lisp"><code class="language-lisp"><span class="token comment">; init-yasnippet.el</span>\n\n<span class="token punctuation">(</span><span class="token car">require-package</span> <span class="token quoted-symbol variable symbol">\'yasnippet</span><span class="token punctuation">)</span>\n<span class="token punctuation">(</span><span class="token car">yas-global-mode</span> <span class="token number">1</span><span class="token punctuation">)</span>\n\n<span class="token comment">; где лежат сниппеты</span>\n<span class="token punctuation">(</span><span class="token keyword">setq</span> yas-snippet-dirs\n      <span class="token punctuation">\'(</span><span class="token string">"~/.emacs.d/snippets"</span> <span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n<span class="token punctuation">(</span><span class="token keyword">provide</span> <span class="token quoted-symbol variable symbol">\'init-yasnippet</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"Самописные сниппеты должны располагаться в поддиректории, соответствующей имени\nвключаемого режима. Это может быть prog-mode, ruby-mode, css-mode и прочие."),"\n",t.createElement(a.p,null,"И ещё одна незаменимая вещь: ",t.createElement(a.strong,null,"autopair")," автоматически закрывает парные скобки и\nкавычки. Включение ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">global-mode</code>'}})," активирует такое поведение всюду, даже в\nplain text файлах."),"\n",t.createElement(a.h2,{id:"web-mode",style:{position:"relative"}},t.createElement(a.a,{href:"#web-mode","aria-label":"web mode permalink",className:"anchor before"},t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Web-mode"),"\n",t.createElement(a.p,null,"Для примера настроим умное автодополнение в JavaScript и Ruby, позаботимся о\nзакрытии HTML-тегов, подсветке всего и вся. Описание дано короткое: в случае\nвозникновения желания разобраться подробнее следует обратиться к описанию того\nили иного пакета, которое быстро ищется при помощи google. Большинство пакетов\nтакже лежит (и ищется) на github.com."),"\n",t.createElement(a.p,null,"Вариантов настройки может быть несколько: автором предлагаются лишь некоторые из\nних. Прежде всего, это включение таких пакетов как ",t.createElement(a.strong,null,"web-mode")," (автозакрытие\nпарных HTML-тегов, подсветка js, html, erb), ",t.createElement(a.strong,null,"css-mode")," (встроен изначально,\nдополнительно к нему можно настроить поддержку sass и less)."),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="lisp"><pre class="language-lisp"><code class="language-lisp"><span class="token heading comment title">;;; Web-mode</span>\n<span class="token punctuation">(</span><span class="token car">require-package</span> <span class="token quoted-symbol variable symbol">\'web-mode</span><span class="token punctuation">)</span>\n\n<span class="token comment">; с какими файлами ассоциировать web-mode</span>\n<span class="token punctuation">(</span><span class="token car">add-to-list</span> <span class="token quoted-symbol variable symbol">\'auto-mode-alist</span> <span class="token punctuation">\'(</span><span class="token string">"\\\\.erb\\\\\'"</span> <span class="token punctuation">.</span> web-mode<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">(</span><span class="token car">add-to-list</span> <span class="token quoted-symbol variable symbol">\'auto-mode-alist</span> <span class="token punctuation">\'(</span><span class="token string">"\\\\.djhtml\\\\\'"</span> <span class="token punctuation">.</span> web-mode<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">(</span><span class="token car">add-to-list</span> <span class="token quoted-symbol variable symbol">\'auto-mode-alist</span> <span class="token punctuation">\'(</span><span class="token string">"\\\\.html\\\\\'"</span> <span class="token punctuation">.</span> web-mode<span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n<span class="token comment">; настройка отступов</span>\n<span class="token punctuation">(</span><span class="token keyword">setq</span> web-mode-markup-indent-offset <span class="token number">2</span><span class="token punctuation">)</span>\n<span class="token punctuation">(</span><span class="token keyword">setq</span> web-mode-css-indent-offset <span class="token number">2</span><span class="token punctuation">)</span>\n<span class="token punctuation">(</span><span class="token keyword">setq</span> web-mode-code-indent-offset <span class="token number">2</span><span class="token punctuation">)</span>\n\n<span class="token comment">; сниппеты и автозакрытие парных скобок</span>\n<span class="token punctuation">(</span><span class="token keyword">setq</span> web-mode-extra-snippets <span class="token punctuation">\'(</span><span class="token punctuation">(</span><span class="token string">"erb"</span> <span class="token punctuation">.</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">"name"</span> <span class="token punctuation">.</span> <span class="token punctuation">(</span><span class="token string">"beg"</span> <span class="token punctuation">.</span> <span class="token string">"end"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                                <span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">(</span><span class="token keyword">setq</span> web-mode-extra-auto-pairs <span class="token punctuation">\'(</span><span class="token punctuation">(</span><span class="token string">"erb"</span> <span class="token punctuation">.</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">"open"</span> <span class="token string">"close"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                                  <span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n<span class="token comment">; подсвечивать текущий элемент</span>\n<span class="token punctuation">(</span><span class="token keyword">setq</span> web-mode-enable-current-element-highlight <span class="token boolean">t</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"Данный пакет незаменим в случае, если вам приходится работать с разного\nрода шаблонизаторами да и просто чистым HTML. А ежели ещё применить чуток\nфантазии и написать несколько ya-сниппетов... в общем, обязательно попробуйте."),"\n",t.createElement(a.h2,{id:"javascript",style:{position:"relative"}},t.createElement(a.a,{href:"#javascript","aria-label":"javascript permalink",className:"anchor before"},t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"JavaScript"),"\n",t.createElement(a.p,null,"А что насчёт JavaScript?"),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="lisp"><pre class="language-lisp"><code class="language-lisp"><span class="token heading comment title">;;; JS</span>\n\n<span class="token punctuation">(</span><span class="token car">require-package</span> <span class="token quoted-symbol variable symbol">\'json-mode</span><span class="token punctuation">)</span>\n<span class="token punctuation">(</span><span class="token car">require-package</span> <span class="token quoted-symbol variable symbol">\'js2-mode</span><span class="token punctuation">)</span>\n<span class="token punctuation">(</span><span class="token car">require-package</span> <span class="token quoted-symbol variable symbol">\'ac-js2</span><span class="token punctuation">)</span>\n<span class="token punctuation">(</span><span class="token car">require-package</span> <span class="token quoted-symbol variable symbol">\'coffee-mode</span><span class="token punctuation">)</span>\n\n<span class="token punctuation">(</span><span class="token car">require-package</span> <span class="token quoted-symbol variable symbol">\'tern</span><span class="token punctuation">)</span>\n<span class="token punctuation">(</span><span class="token car">require-package</span> <span class="token quoted-symbol variable symbol">\'tern-auto-complete</span><span class="token punctuation">)</span>\n\n<span class="token punctuation">(</span><span class="token car">add-hook</span> <span class="token quoted-symbol variable symbol">\'js-mode-hook</span> <span class="token punctuation">(</span><span class="token lambda"><span class="token keyword">lambda</span> <span class="token punctuation">(</span><span class="token arguments"></span><span class="token punctuation">)</span></span> <span class="token punctuation">(</span><span class="token car">tern-mode</span> <span class="token boolean">t</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">(</span><span class="token car">eval-after-load</span> <span class="token quoted-symbol variable symbol">\'tern</span>\n   <span class="token punctuation">\'(</span><span class="token car">progn</span>\n      <span class="token punctuation">(</span><span class="token keyword">require</span> <span class="token quoted-symbol variable symbol">\'tern-auto-complete</span><span class="token punctuation">)</span>\n      <span class="token punctuation">(</span><span class="token car">tern-ac-setup</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"Как уже было упомянуто выше, для тонкой настройки рекомендуется обратиться к\nдокументации пакета. Здесь же хочется поставить акцент на последнем пакете:\n",t.createElement(a.strong,null,"tern"),". Tern обеспечивает автодополнение методов JavaScript, но для своей работы\nтребует предварительной установки ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">node.js</code>'}})," с пакетным менеджером\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">npm</code>'}}),":"),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell"><span class="token comment"># emerge -pav net-libs/nodejs</span>\n<span class="token comment"># npm install -g tern</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"После проведения этой процедуры можно активировать ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">tern-mode</code>'}})),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<span\n      class="gatsby-resp-image-wrapper"\n      style="position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 927px; flex:2;"\n    >\n      <span\n    class="gatsby-resp-image-background-image"\n    style="padding-bottom: 44.66666666666667%; position: relative; bottom: 0; left: 0; display: block;"\n  ></span>\n  <picture>\n          <source\n              srcset="/static/6824e77006ac9a388144c3e2d19644cf/e93cc/tern.webp 300w,\n/static/6824e77006ac9a388144c3e2d19644cf/b0544/tern.webp 600w,\n/static/6824e77006ac9a388144c3e2d19644cf/44de1/tern.webp 927w"\n              sizes="(max-width: 927px) 100vw, 927px"\n              type="image/webp"\n            />\n          <source\n            srcset="/static/6824e77006ac9a388144c3e2d19644cf/eed55/tern.png 300w,\n/static/6824e77006ac9a388144c3e2d19644cf/7491f/tern.png 600w,\n/static/6824e77006ac9a388144c3e2d19644cf/469a2/tern.png 927w"\n            sizes="(max-width: 927px) 100vw, 927px"\n            type="image/png"\n          />\n          <img\n            class="gatsby-resp-image-image"\n            src="/static/6824e77006ac9a388144c3e2d19644cf/469a2/tern.png"\n            alt="Tern"\n            title=""\n            loading="lazy"\n            decoding="async"\n            style="width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;"\n          />\n        </picture>\n    </span>'}}),"\n",t.createElement(a.p,null,"Весьма удобно, не так ли?"),"\n",t.createElement(a.h2,{id:"ruby",style:{position:"relative"}},t.createElement(a.a,{href:"#ruby","aria-label":"ruby permalink",className:"anchor before"},t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Ruby"),"\n",t.createElement(a.p,null,"Здесь следует сесть и подумать что приходит на ум при слове\n«ruby». Пожалуй, это такие вещи как сам интерпретатор, подсветка\nсинтаксиса и автодополнение методов подобно тому, как мы реализовали её в\nJavaScript тоже пригодилась бы, ещё rvm с возможностью переключаться между\nиспользуемыми гемами, rails, тестирование кода с rspec... много всего. Что ж,\nдавайте по-порядку."),"\n",t.createElement(a.p,null,"Перво-наперво надо бы активировать сам ",t.createElement(a.strong,null,"ruby-mode")," и связать его с некоторыми\nчасто используемыми файлами, которые не имеют расширения ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">.rb</code>'}}),"."),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="lisp"><pre class="language-lisp"><code class="language-lisp"><span class="token punctuation">(</span><span class="token car">require-package</span> <span class="token quoted-symbol variable symbol">\'ruby-mode</span><span class="token punctuation">)</span>\n<span class="token punctuation">(</span><span class="token car">require-package</span> <span class="token quoted-symbol variable symbol">\'ruby-hash-syntax</span><span class="token punctuation">)</span>\n<span class="token punctuation">(</span><span class="token car">add-auto-mode</span> <span class="token quoted-symbol variable symbol">\'ruby-mode</span>\n    <span class="token string">"Rakefile\\\\\'"</span> <span class="token string">"\\\\.rake\\\\\'"</span> <span class="token string">"\\\\.rxml\\\\\'"</span>\n    <span class="token string">"\\\\.rjs\\\\\'"</span> <span class="token string">"\\\\.irbrc\\\\\'"</span> <span class="token string">"\\\\.pryrc\\\\\'"</span> <span class="token string">"\\\\.builder\\\\\'"</span> <span class="token string">"\\\\.ru\\\\\'"</span>\n    <span class="token string">"\\\\.gemspec\\\\\'"</span> <span class="token string">"Gemfile\\\\\'"</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"Для тех, кто использует ",t.createElement(a.a,{href:"/posts/ruby-rvm/"},"rvm"),", неплохо было бы позаботиться о\nвозможности интеграции оного в emacs, чем мы, собственно, и займёмся."),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="lisp"><pre class="language-lisp"><code class="language-lisp"><span class="token punctuation">(</span><span class="token car">require-package</span> <span class="token quoted-symbol variable symbol">\'rvm</span><span class="token punctuation">)</span>\n<span class="token punctuation">(</span><span class="token car">rvm-use-default</span><span class="token punctuation">)</span>\n<span class="token comment">; для связки rvm+robe</span>\n<span class="token punctuation">(</span><span class="token car">defadvice</span> inf-ruby-console-auto <span class="token punctuation">(</span><span class="token car">before</span> activate-rvm-for-robe activate<span class="token punctuation">)</span>\n  <span class="token punctuation">(</span><span class="token car">rvm-activate-corresponding-ruby</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"Emacs умеет запускать терминал, что избавляет от необходимости постоянно\nпереключаться между окнами. Но как запустить irb, не открывая юниксовый shell? Для этого существует ",t.createElement(a.strong,null,"inf-ruby"),"."),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="lisp"><pre class="language-lisp"><code class="language-lisp"><span class="token punctuation">(</span><span class="token keyword">unless</span> <span class="token punctuation">(</span><span class="token car">package-installed-p</span> <span class="token quoted-symbol variable symbol">\'inf-ruby</span><span class="token punctuation">)</span>\n  <span class="token punctuation">(</span><span class="token car">package-install</span> <span class="token quoted-symbol variable symbol">\'inf-ruby</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n<span class="token punctuation">(</span><span class="token car">autoload</span> <span class="token quoted-symbol variable symbol">\'inf-ruby</span> <span class="token string">"inf-ruby"</span> <span class="token string">"Run an inferior Ruby process"</span> <span class="token boolean">t</span><span class="token punctuation">)</span>\n<span class="token punctuation">(</span><span class="token car">add-hook</span> <span class="token quoted-symbol variable symbol">\'ruby-mode-hook</span>  <span class="token quoted-symbol variable symbol">\'inf-ruby-minor-mode</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"Часто (если не сказать всегда) ruby ассоциируют с его\n«киллер-фичей»: фреймворком Ruby On Rails. И здесь emacs'еров ждёт много\nзамечательных вещей."),"\n",t.createElement(a.p,null,"Начнём с подключения пакета ",t.createElement(a.strong,null,"rinari"),", который поможет быстро перемещаться\nмежду каталогами проекта, запускать встроенный веб-сервер и собственную консоль\nрельсов."),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="lisp"><pre class="language-lisp"><code class="language-lisp"><span class="token punctuation">(</span><span class="token car">require-package</span> <span class="token quoted-symbol variable symbol">\'rinari</span><span class="token punctuation">)</span>\n<span class="token punctuation">(</span><span class="token car">after-load</span> <span class="token quoted-symbol variable symbol">\'rinari</span>\n  <span class="token punctuation">(</span><span class="token car">diminish</span> <span class="token quoted-symbol variable symbol">\'rinari-minor-mode</span> <span class="token string">"Rin"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">(</span><span class="token car">global-rinari-mode</span><span class="token punctuation">)</span>\n\n<span class="token punctuation">(</span><span class="token defun"><span class="token keyword">defun</span> <span class="token function">update-rails-ctags</span> <span class="token punctuation">(</span><span class="token arguments"></span><span class="token punctuation">)</span></span>\n  <span class="token punctuation">(</span><span class="token interactive keyword">interactive</span><span class="token punctuation">)</span>\n  <span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token car">default-directory</span> <span class="token punctuation">(</span><span class="token keyword">or</span> <span class="token punctuation">(</span><span class="token car">rinari-root</span><span class="token punctuation">)</span> default-directory<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">(</span><span class="token car">shell-command</span> <span class="token punctuation">(</span><span class="token keyword">concat</span> <span class="token string">"ctags -a -e -f "</span> rinari-tags-file-name <span class="token string">" --tag-relative <span class="token argument">-R</span> app lib vendor test"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"Что получим на выходе:"),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<span\n      class="gatsby-resp-image-wrapper"\n      style="position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 641px; flex:1;"\n    >\n      <span\n    class="gatsby-resp-image-background-image"\n    style="padding-bottom: 67.33333333333333%; position: relative; bottom: 0; left: 0; display: block;"\n  ></span>\n  <picture>\n          <source\n              srcset="/static/7e2a45632acc7c466f87490a6e00a762/e93cc/rinari.webp 300w,\n/static/7e2a45632acc7c466f87490a6e00a762/b0544/rinari.webp 600w,\n/static/7e2a45632acc7c466f87490a6e00a762/6d422/rinari.webp 641w"\n              sizes="(max-width: 641px) 100vw, 641px"\n              type="image/webp"\n            />\n          <source\n            srcset="/static/7e2a45632acc7c466f87490a6e00a762/eed55/rinari.png 300w,\n/static/7e2a45632acc7c466f87490a6e00a762/7491f/rinari.png 600w,\n/static/7e2a45632acc7c466f87490a6e00a762/1f77c/rinari.png 641w"\n            sizes="(max-width: 641px) 100vw, 641px"\n            type="image/png"\n          />\n          <img\n            class="gatsby-resp-image-image"\n            src="/static/7e2a45632acc7c466f87490a6e00a762/1f77c/rinari.png"\n            alt="rinari"\n            title=""\n            loading="lazy"\n            decoding="async"\n            style="width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;"\n          />\n        </picture>\n    </span>'}}),"\n",t.createElement(a.p,null,"Но этого мало! Мало, потому что желательно иметь возможность запускать\nтесты. Да, прямо в emacs. И ",t.createElement(a.strong,null,"rspec-mode")," будет здесь хорошим помощником. С ним\nможно запустить как полный набор тестов, так и протестировать единственный spec-файл."),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="lisp"><pre class="language-lisp"><code class="language-lisp"><span class="token punctuation">(</span><span class="token car">require-package</span> <span class="token quoted-symbol variable symbol">\'rspec-mode</span><span class="token punctuation">)</span>\n<span class="token punctuation">(</span><span class="token car">eval-after-load</span> <span class="token quoted-symbol variable symbol">\'rspec-mode</span>\n <span class="token punctuation">\'(</span><span class="token car">rspec-install-snippets</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"О том, как выбрать нужное, речь пойдёт чуть позже."),"\n",t.createElement(a.p,null,"Небесполезная штука: подсветка блоков. Иногда это может оказать весомую помощь\nпри работе с большим (очень большим) файлом. С задачей справляется\n",t.createElement(a.strong,null,"ruby-blocks"),", хотя он имеет недостаток: при загрузке стандартным методом\n(elpa) пакетик куражится. Поэтому предлагается взять соответствующий файл\n",t.createElement(a.a,{href:"https://github.com/adolfosousa/ruby-block.el",target:"_blank",rel:"nofollow"},"у его автора")," и поместить в ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">lisp/init-ruby-block.el</code>'}}),"."),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="lisp"><pre class="language-lisp"><code class="language-lisp"><span class="token comment">; init.el</span>\n<span class="token punctuation">(</span><span class="token keyword">require</span> <span class="token quoted-symbol variable symbol">\'init-ruby-block</span><span class="token punctuation">)</span>\n\n<span class="token punctuation">(</span><span class="token car">ruby-block-mode</span> <span class="token boolean">t</span><span class="token punctuation">)</span>\n<span class="token punctuation">(</span><span class="token keyword">setq</span> ruby-block-highlight-toggle <span class="token boolean">t</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"Наконец, вспомним об автодополнении для чего будем использовать ",t.createElement(a.strong,null,"robe"),".\nRobe не будет работать без активированного ",t.createElement(a.strong,null,"inf-ruby"),", иначе говоря без\nзапущенного процесса ruby также как ",t.createElement(a.strong,null,"tern")," без установленного ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">nodejs</code>'}}),"."),"\n",t.createElement(a.p,null,"Поэтому есть два пути: последовательно включить соответствующие режимы или\nпопробовать автоматизировать это дело. С последним при использовании rvm (без\nустановленного в ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">/usr/bin</code>'}})," ruby) у автора возникли временные сложности, коих не\nдолжно наблюдаться в случае, если руби установлен в директорию по-умолчанию."),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="lisp"><pre class="language-lisp"><code class="language-lisp"><span class="token punctuation">(</span><span class="token car">require-package</span> <span class="token quoted-symbol variable symbol">\'robe</span><span class="token punctuation">)</span>\n\n<span class="token comment">; для работы с rvm</span>\n<span class="token punctuation">(</span><span class="token car">defadvice</span> inf-ruby-console-auto <span class="token punctuation">(</span><span class="token car">before</span> activate-rvm-for-robe activate<span class="token punctuation">)</span>\n   <span class="token punctuation">(</span><span class="token car">rvm-activate-corresponding-ruby</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n<span class="token punctuation">(</span><span class="token car">after-load</span> <span class="token quoted-symbol variable symbol">\'ruby-mode</span>\n  <span class="token punctuation">(</span><span class="token car">add-hook</span> <span class="token quoted-symbol variable symbol">\'ruby-mode-hook</span> <span class="token quoted-symbol variable symbol">\'robe-mode</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">(</span><span class="token car">after-load</span> <span class="token quoted-symbol variable symbol">\'robe</span>\n  <span class="token punctuation">(</span><span class="token car">add-hook</span> <span class="token quoted-symbol variable symbol">\'robe-mode-hook</span> <span class="token quoted-symbol variable symbol">\'ac-robe-setup</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">(</span><span class="token car">add-hook</span> <span class="token quoted-symbol variable symbol">\'robe-mode-hook</span>\n            <span class="token punctuation">(</span><span class="token lambda"><span class="token keyword">lambda</span> <span class="token punctuation">(</span><span class="token arguments"></span><span class="token punctuation">)</span></span>\n              <span class="token punctuation">(</span><span class="token car">add-to-list</span> <span class="token quoted-symbol variable symbol">\'ac-sources</span> <span class="token quoted-symbol variable symbol">\'ac-source-robe</span><span class="token punctuation">)</span>\n              <span class="token punctuation">(</span><span class="token car">set-auto-complete-as-completion-at-point-function</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"Далее предлагается лицезреть достаточно большой кусок кода, благодаря которому\n«автозакрываются» блоки в erb-файлах, а также происходит проверка на\nошибки."),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="lisp"><pre class="language-lisp"><code class="language-lisp"><span class="token punctuation">(</span><span class="token car">require-package</span> <span class="token quoted-symbol variable symbol">\'mmm-mode</span><span class="token punctuation">)</span>\n<span class="token punctuation">(</span><span class="token defun"><span class="token keyword">defun</span> <span class="token function">sanityinc/ensure-mmm-erb-loaded</span> <span class="token punctuation">(</span><span class="token arguments"></span><span class="token punctuation">)</span></span>\n  <span class="token punctuation">(</span><span class="token keyword">require</span> <span class="token quoted-symbol variable symbol">\'mmm-erb</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n<span class="token punctuation">(</span><span class="token keyword">require</span> <span class="token quoted-symbol variable symbol">\'derived</span><span class="token punctuation">)</span>\n\n<span class="token punctuation">(</span><span class="token defun"><span class="token keyword">defun</span> <span class="token function">sanityinc/set-up-mode-for-erb</span> <span class="token punctuation">(</span><span class="token arguments"><span class="token argument variable">mode</span></span><span class="token punctuation">)</span></span>\n  <span class="token punctuation">(</span><span class="token car">add-hook</span> <span class="token punctuation">(</span><span class="token car">derived-mode-hook-name</span> mode<span class="token punctuation">)</span> <span class="token quoted-symbol variable symbol">\'sanityinc/ensure-mmm-erb-loaded</span><span class="token punctuation">)</span>\n  <span class="token punctuation">(</span><span class="token car">mmm-add-mode-ext-class</span> mode <span class="token string">"\\\\.erb\\\\\'"</span> <span class="token quoted-symbol variable symbol">\'erb</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n<span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token car">html-erb-modes</span> <span class="token punctuation">\'(</span><span class="token car">html-mode</span> html-erb-mode nxml-mode<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">(</span><span class="token car">dolist</span> <span class="token punctuation">(</span><span class="token car">mode</span> html-erb-modes<span class="token punctuation">)</span>\n    <span class="token punctuation">(</span><span class="token car">sanityinc/set-up-mode-for-erb</span> mode<span class="token punctuation">)</span>\n    <span class="token punctuation">(</span><span class="token car">mmm-add-mode-ext-class</span> mode <span class="token string">"\\\\.r?html\\\\(\\\\.erb\\\\)?\\\\\'"</span> <span class="token quoted-symbol variable symbol">\'html-js</span><span class="token punctuation">)</span>\n    <span class="token punctuation">(</span><span class="token car">mmm-add-mode-ext-class</span> mode <span class="token string">"\\\\.r?html\\\\(\\\\.erb\\\\)?\\\\\'"</span> <span class="token quoted-symbol variable symbol">\'html-css</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n<span class="token punctuation">(</span><span class="token car">mmm-add-mode-ext-class</span> <span class="token quoted-symbol variable symbol">\'html-erb-mode</span> <span class="token string">"\\\\.jst\\\\.ejs\\\\\'"</span> <span class="token quoted-symbol variable symbol">\'ejs</span><span class="token punctuation">)</span>\n\n<span class="token punctuation">(</span><span class="token car">add-auto-mode</span> <span class="token quoted-symbol variable symbol">\'html-erb-mode</span> <span class="token string">"\\\\.rhtml\\\\\'"</span> <span class="token string">"\\\\.html\\\\.erb\\\\\'"</span><span class="token punctuation">)</span>\n<span class="token punctuation">(</span><span class="token car">add-to-list</span> <span class="token quoted-symbol variable symbol">\'auto-mode-alist</span> <span class="token punctuation">\'(</span><span class="token string">"\\\\.jst\\\\.ejs\\\\\'"</span>  <span class="token punctuation">.</span> html-erb-mode<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">(</span><span class="token car">mmm-add-mode-ext-class</span> <span class="token quoted-symbol variable symbol">\'yaml-mode</span> <span class="token string">"\\\\.yaml\\\\\'"</span> <span class="token quoted-symbol variable symbol">\'erb</span><span class="token punctuation">)</span>\n\n<span class="token punctuation">(</span><span class="token car">dolist</span> <span class="token punctuation">(</span><span class="token car">mode</span> <span class="token punctuation">(</span><span class="token car">list</span> <span class="token quoted-symbol variable symbol">\'js-mode</span> <span class="token quoted-symbol variable symbol">\'js2-mode</span> <span class="token quoted-symbol variable symbol">\'js3-mode</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">(</span><span class="token car">mmm-add-mode-ext-class</span> mode <span class="token string">"\\\\.js\\\\.erb\\\\\'"</span> <span class="token quoted-symbol variable symbol">\'erb</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",t.createElement(a.h2,{id:"навигация-по-проекту",style:{position:"relative"}},t.createElement(a.a,{href:"#%D0%BD%D0%B0%D0%B2%D0%B8%D0%B3%D0%B0%D1%86%D0%B8%D1%8F-%D0%BF%D0%BE-%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%83","aria-label":"навигация по проекту permalink",className:"anchor before"},t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Навигация по проекту"),"\n",t.createElement(a.p,null,"В заключение хотелось бы порекомендовать ",t.createElement(a.strong,null,"projectile"),"."),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="lisp"><pre class="language-lisp"><code class="language-lisp"><span class="token punctuation">(</span><span class="token keyword">require</span> <span class="token quoted-symbol variable symbol">\'init-projectile</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"Этот ",t.createElement(a.a,{href:"https://github.com/bbatsov/projectile",target:"_blank",rel:"nofollow"},"пакет")," упростит навигацию по файлам\nи директориям отдельного проекта. Имеется специальная версия для RoR:\n",t.createElement(a.strong,null,"projectile-rails"),". Думается, при наличии одного проекта можно обойтись без\nподобных излишеств. А вот если проектов множество, и в каждом одинаковая\nструктура, и между ними нужно переключаться! Без projectile одна только\nнавигация может быть аду подобна."),"\n",t.createElement(a.p,null,"Помимо вышеперечисленного рекомендуется также обзавестить поддержкой emmet,\nпоставить sr-speedbar и... написать пару-тройку сниппетов."),"\n",t.createElement(a.p,null,"И, как обещалось ранее, примеры доступных нам полезных команд."),"\n",t.createElement(a.table,null,t.createElement(a.thead,null,t.createElement(a.tr,null,t.createElement(a.th,null,"описание"),t.createElement(a.th,null,"команда"))),t.createElement(a.tbody,null,t.createElement(a.tr,null,t.createElement(a.td,null,"сравнить содержимое буфера и оригинального файла"),t.createElement(a.td,null,"diff-buffer-with-file")),t.createElement(a.tr,null,t.createElement(a.td,null,"проверить грамотность автора"),t.createElement(a.td,null,"flyspell-buffer")),t.createElement(a.tr,null,t.createElement(a.td,null,"закомментировать выделенную область"),t.createElement(a.td,null,"comment-region")),t.createElement(a.tr,null,t.createElement(a.td,null,"раскоментировать её же"),t.createElement(a.td,null,"uncomment-region")),t.createElement(a.tr,null,t.createElement(a.td,null,"включить режим web-mode"),t.createElement(a.td,null,"web-mode")),t.createElement(a.tr,null,t.createElement(a.td,null,"включить режим tern-mode"),t.createElement(a.td,null,"tern-mode")),t.createElement(a.tr,null,t.createElement(a.td,null,"запустить ruby shell"),t.createElement(a.td,null,"inf-ruby")),t.createElement(a.tr,null,t.createElement(a.td,null,"запустить robe"),t.createElement(a.td,null,"robe-start")),t.createElement(a.tr,null,t.createElement(a.td,null,"прогнать текущий тест"),t.createElement(a.td,null,"rspec-verify")),t.createElement(a.tr,null,t.createElement(a.td,null,"запустить весь набор тестов"),t.createElement(a.td,null,"rspec-verify-all")),t.createElement(a.tr,null,t.createElement(a.td,null,"запустить консоль rails"),t.createElement(a.td,null,"rinari-console")),t.createElement(a.tr,null,t.createElement(a.td,null,"найти файл в проекте при помощи rinari"),t.createElement(a.td,null,"rinari-find-file-in-project")),t.createElement(a.tr,null,t.createElement(a.td,null,"выбрать версию ruby и gemset"),t.createElement(a.td,null,"rvm-use")))),"\n",t.createElement(a.p,null,"Сегодня это всё. Главная мысль: vim и emacs не уступают\nмногим графическим платным/условно-работоспособным инструментам, а в\nнекоторых ситуациях превосходят их."))}var l=function(n){void 0===n&&(n={});const{wrapper:a}=Object.assign({},(0,e.MN)(),n.components);return a?t.createElement(a,n,t.createElement(p,n)):p(n)},o=s(7792),c=s(7619);function r(n){var a,s;let{data:{mdx:e},children:p,pageContext:{prev:l,next:r}}=n;const{h1:u,title:i,description:m,image:k,table_of_contents:d}=e.frontmatter;return(0,t.useEffect)((()=>{(0,c.K)()}),[]),t.createElement(t.Fragment,null,t.createElement(o._W,{h1:u,title:i,description:m,image:null===(a=e.frontmatter.image)||void 0===a?void 0:a.publicURL},t.createElement(o.MV,{post:e.frontmatter,imageData:null==k||null===(s=k.childImageSharp)||void 0===s?void 0:s.gatsbyImageData},d?t.createElement(o.G8,{headings:e.tableOfContents}):null,t.createElement("div",{className:"page__content"},p,t.createElement(o.Mf,{prev:l,next:r})),t.createElement(o.QZ,null))))}function u(n){return t.createElement(r,n,t.createElement(l,n))}},8876:function(n,a,s){s.d(a,{MN:function(){return p}});var e=s(4424);const t=e.createContext({});function p(n){const a=e.useContext(t);return e.useMemo((()=>"function"==typeof n?n(a):{...a,...n}),[a,n])}}}]);