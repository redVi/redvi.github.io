"use strict";(self.webpackChunkgatsby_blog=self.webpackChunkgatsby_blog||[]).push([[3640],{972:function(n,a,s){s.r(a),s.d(a,{Head:function(){return c.Ss},default:function(){return u}});var e=s(8876),t=s(4424),l=s(1892);function p(n){const a=Object.assign({p:"p",h2:"h2",a:"a",span:"span"},(0,e.MN)(),n.components);return t.createElement(t.Fragment,null,t.createElement(a.p,null,"Позволю себе привести несколько практических рекомендаций,\nкоторые позволят облегчить жизнь при работе с React Native. И себе при старте нового проекта,\nи людям, так сказать."),"\n",t.createElement(a.h2,{id:"нет-глобальному-окружению",style:{position:"relative"}},t.createElement(a.a,{href:"#%D0%BD%D0%B5%D1%82-%D0%B3%D0%BB%D0%BE%D0%B1%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%BC%D1%83-%D0%BE%D0%BA%D1%80%D1%83%D0%B6%D0%B5%D0%BD%D0%B8%D1%8E","aria-label":"нет глобальному окружению permalink",className:"anchor before"},t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Нет глобальному окружению"),"\n",t.createElement(a.p,null,"На вебе сейчас активно используют Docker. В том числе и для того, чтобы окружение было у всех\nодинаково и, как плюс, изолировано от операционной системы. Мобильные в докере — не всегда\nхорошая идея. Но и здесь изолироваться можно."),"\n",t.createElement(a.p,null,"Для управления версиями node.js, рекомендую ",t.createElement(a.a,{href:"https://github.com/tj/n",target:"_blank",rel:"nofollow"},"n"),". Установка проста."),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell"><span class="token comment"># установить</span>\n$ <span class="token function">curl</span> <span class="token parameter variable">-L</span> https://git.io/n-install <span class="token operator">|</span> <span class="token function">bash</span>\n\n<span class="token comment"># добавить путь в .bashrc или .zshrc</span>\n$ <span class="token function">cat</span> .zshrc:\n<span class="token builtin class-name">export</span> <span class="token assign-left variable">N_PREFIX</span><span class="token operator">=</span><span class="token string">"<span class="token environment constant">$HOME</span>/n"</span><span class="token punctuation">;</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token builtin class-name">:</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span> <span class="token operator">==</span> *<span class="token string">":<span class="token variable">$N_PREFIX</span>/bin:"</span>* <span class="token punctuation">]</span><span class="token punctuation">]</span>\n\n<span class="token comment"># выбрать версию node</span>\n$ n <span class="token number">15.5</span>.0</code></pre></div>'}}),"\n",t.createElement(a.p,null,"По-умолчанию путь к node будет ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">${HOME}/n/bin/node</code>'}}),". Чтобы Xcode мог найти его,\nнадо создать символьную ссылку."),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">$ <span class="token function">ln</span> <span class="token parameter variable">-s</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">which</span> <span class="token function">node</span><span class="token variable">)</span></span> /usr/local/bin/node</code></pre></div>'}}),"\n",t.createElement(a.p,null,"Если ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">n</code>'}})," перестал быть нужным, удалите версию node и саму директорию,\nне забудьте поправить .bashrc/.zshrc."),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">$ n <span class="token function">rm</span> <span class="token number">15.5</span>.0\n$ <span class="token function">rm</span> <span class="token parameter variable">-rf</span> ~/n</code></pre></div>'}}),"\n",t.createElement(a.p,null,"Процесс изоляции и ",t.createElement(l.Link,{to:"/posts/ruby-rvm/"},"управления версиями ruby")," немногим сложнее.\nЗато при установке зависимостей для iOS никаких root-прав с нас спрашивать не будут."),"\n",t.createElement(a.h2,{id:"псевдонимы-команд",style:{position:"relative"}},t.createElement(a.a,{href:"#%D0%BF%D1%81%D0%B5%D0%B2%D0%B4%D0%BE%D0%BD%D0%B8%D0%BC%D1%8B-%D0%BA%D0%BE%D0%BC%D0%B0%D0%BD%D0%B4","aria-label":"псевдонимы команд permalink",className:"anchor before"},t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Псевдонимы команд"),"\n",t.createElement(a.p,null,"Для разгрузки долговременной памяти можно создать псевдонимы команд в тех же ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">.bashrc</code>'}})," или ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">.zshrc</code>'}}),".\nВсе команды выполняются в директории проекта. Плюс: команда короче, её всегда можно подсмотреть."),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="bash"><pre class="language-bash"><code class="language-bash"><span class="token comment"># запустить эмулятор iOS в режиме отладки</span>\n<span class="token builtin class-name">alias</span> <span class="token assign-left variable">run_ios</span><span class="token operator">=</span><span class="token string">"react-native run-ios --simulator=<span class="token entity" title="\\&quot;">\\"</span>iPhone 12<span class="token entity" title="\\&quot;">\\"</span> --configuration=debug"</span>\n\n<span class="token comment"># запустить на реальном устройстве, где iPhoneName - имя вашего iPhone</span>\n<span class="token builtin class-name">alias</span> <span class="token assign-left variable">run_ios_on_device</span><span class="token operator">=</span><span class="token string">"react-native run-ios --simulator=<span class="token entity" title="\\&quot;">\\"</span>iPhoneName<span class="token entity" title="\\&quot;">\\"</span>"</span>\n\n<span class="token comment"># запустить эмулятор Android в режиме отладки</span>\n<span class="token builtin class-name">alias</span> <span class="token assign-left variable">run_android</span><span class="token operator">=</span><span class="token string">"react-native run-android --variant=debug"</span>\n\n<span class="token comment"># запустить metro</span>\n<span class="token builtin class-name">alias</span> <span class="token assign-left variable">run_metro</span><span class="token operator">=</span><span class="token string">"react-native start"</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"Впрочем, всё это можно указать и для отдельно взятого проекта.\nТогда править надо скрипты ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">package.json</code>'}}),"."),"\n",t.createElement(a.h2,{id:"импорт-относительно-корня-проекта",style:{position:"relative"}},t.createElement(a.a,{href:"#%D0%B8%D0%BC%D0%BF%D0%BE%D1%80%D1%82-%D0%BE%D1%82%D0%BD%D0%BE%D1%81%D0%B8%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D0%BE-%D0%BA%D0%BE%D1%80%D0%BD%D1%8F-%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D0%B0","aria-label":"импорт относительно корня проекта permalink",className:"anchor before"},t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Импорт относительно корня проекта"),"\n",t.createElement(a.p,null,"Многим неудобно импортировать файлы по относительному пути. В вебе эту проблему решает webpack.\nВ React Native нам поможет babel:"),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">$ <span class="token function">yarn</span> <span class="token function">add</span> <span class="token parameter variable">-D</span> babel-plugin-module-resolver</code></pre></div>'}}),"\n",t.createElement(a.p,null,"Изменим ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">.babel.config.js</code>'}})),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">presets</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'module:metro-react-native-babel-preset\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">[</span><span class="token string">\'module-resolver\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./src\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">extensions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'.js\'</span><span class="token punctuation">,</span> <span class="token string">\'.ios.js\'</span><span class="token punctuation">,</span> <span class="token string">\'.android.js\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"Пользователям VS Code понадобится создать файл ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">jsconfig.json</code>'}})," в корне проекта:"),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="json"><pre class="language-json"><code class="language-json"><span class="token punctuation">{</span>\n  <span class="token property">"compilerOptions"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">"target"</span><span class="token operator">:</span> <span class="token string">"esnext"</span><span class="token punctuation">,</span>\n    <span class="token property">"allowSyntheticDefaultImports"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token property">"rootDir"</span><span class="token operator">:</span> <span class="token string">"./"</span><span class="token punctuation">,</span>\n    <span class="token property">"baseUrl"</span><span class="token operator">:</span> <span class="token string">"src/"</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token property">"exclude"</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token string">"node_modules"</span><span class="token punctuation">,</span>\n    <span class="token string">"dist"</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"Настройки по вкусу, главное, чтобы ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">baseUrl</code>'}})," соответствовал директории ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">root</code>'}})," в ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">.babel.config.js</code>'}}),".\nИмпорт получится примерно такой:"),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="jsx"><pre class="language-jsx"><code class="language-jsx"><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">\'app\'</span> <span class="token comment">// обратились к файлу app.js из src/app.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Hello <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'components/hello\'</span> <span class="token comment">// к Hello из src/components/hello</span></code></pre></div>'}}),"\n",t.createElement(a.h2,{id:"очистка",style:{position:"relative"}},t.createElement(a.a,{href:"#%D0%BE%D1%87%D0%B8%D1%81%D1%82%D0%BA%D0%B0","aria-label":"очистка permalink",className:"anchor before"},t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Очистка"),"\n",t.createElement(a.p,null,"Иногда странное поведние объясняется использованием кэша. После сброса кэша всё встаёт на свои места.\nСбросить кэш можно следующим образом:"),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">$ watchman watch-del-all\n$ <span class="token function">rm</span> <span class="token parameter variable">-rf</span> <span class="token variable">$TMPDIR</span>/react-*\n$ <span class="token function">yarn</span> cache clean <span class="token operator">&amp;&amp;</span> <span class="token function">rm</span> <span class="token parameter variable">-rf</span> node_modules/ <span class="token operator">&amp;&amp;</span> <span class="token function">yarn</span> <span class="token function">install</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"Процесс очистки от «хвостов» предыдущих сборок для разных платформ отличается."),"\n",t.createElement(a.p,null,"Для iOS:"),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">$ gem <span class="token function">install</span> --user-install cocoapods-deintegrate cocoapods-clean\n\n$ <span class="token builtin class-name">cd</span> <span class="token variable">$projectName</span>/ios\n$ pod deintegrate\n$ pod cache clean <span class="token parameter variable">--all</span>\n\n<span class="token comment"># удалить сборку: rm -rf ios/build</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"Для Android:"),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">$ <span class="token builtin class-name">cd</span> <span class="token variable">$projectName</span>/android\n$ ./gradlew clean\n$ ./gradlew cleanBuildCache\n\n<span class="token comment"># удалить сборку: rm -rf android/app/build</span></code></pre></div>'}}))}var o=function(n){void 0===n&&(n={});const{wrapper:a}=Object.assign({},(0,e.MN)(),n.components);return a?t.createElement(a,n,t.createElement(p,n)):p(n)},c=s(7792),r=s(7619);function i(n){var a,s;let{data:{mdx:e},children:l,pageContext:{prev:p,next:o}}=n;const{h1:i,title:u,description:g,image:d,table_of_contents:m}=e.frontmatter;return(0,t.useEffect)((()=>{(0,r.K)()}),[]),t.createElement(t.Fragment,null,t.createElement(c._W,{h1:i,title:u,description:g,image:null===(a=e.frontmatter.image)||void 0===a?void 0:a.publicURL},t.createElement(c.MV,{post:e.frontmatter,imageData:null==d||null===(s=d.childImageSharp)||void 0===s?void 0:s.gatsbyImageData},m?t.createElement(c.G8,{headings:e.tableOfContents}):null,t.createElement("div",{className:"page__content"},l,t.createElement(c.Mf,{prev:p,next:o})),t.createElement(c.QZ,null))))}function u(n){return t.createElement(i,n,t.createElement(o,n))}},8876:function(n,a,s){s.d(a,{MN:function(){return l}});var e=s(4424);const t=e.createContext({});function l(n){const a=e.useContext(t);return e.useMemo((()=>"function"==typeof n?n(a):{...a,...n}),[a,n])}}}]);