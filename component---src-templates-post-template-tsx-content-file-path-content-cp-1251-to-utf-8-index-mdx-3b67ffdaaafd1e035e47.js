"use strict";(self.webpackChunkgatsby_blog=self.webpackChunkgatsby_blog||[]).push([[6796],{3624:function(e,n,a){a.r(n),a.d(n,{Head:function(){return r.Ss},default:function(){return i}});var t=a(8876),s=a(4424);function l(e){const n=Object.assign({p:"p",span:"span"},(0,t.MN)(),e.components);return s.createElement(s.Fragment,null,s.createElement(n.p,null,"Небольшая заметка, посвящённая борьбе с засильем кодировки cp1251,\nкоторая фактически стала стандартом де-факто благодаря операционной системе\nWindows и её многочисленным адептам. Кодировать будем под ОС Linux.\nНе волнуйтесь, это не займёт много сил и не подорвёт вашего душевного равновесия."),"\n",s.createElement(n.p,null,"Момент первый."),"\n",s.createElement(n.p,null,"Когда нужно перекодировать текст (.txt, .php, .css или что-то в этом духе)\nИдём в директорию, где лежат файлы, подлежащие преобразованию, например:"),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">$ <span class="token builtin class-name">cd</span> ~/Documents</code></pre></div>'}}),"\n",s.createElement(n.p,null,"После чего даём команду:"),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">$ <span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-name</span> <span class="token string">"*.txt"</span> <span class="token parameter variable">-exec</span> recode CP1251/<span class="token punctuation">..</span>UTF-8 <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">\\</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",s.createElement(n.p,null,"Или для перекодировки единственного файла:"),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">$ enconv <span class="token parameter variable">-x</span> UTF-8 myfile.txt</code></pre></div>'}}),"\n",s.createElement(n.p,null,"Момент второй. Перекодировка mp3 тегов"),"\n",s.createElement(n.p,null,"Тут должен быть установлен пакет mutagen. Для перекодирования тегов\nmp3-коллекции из кодировки CP1251 в UTF-8 перейдите в нужную директорию и\nвыполните ещё одну команду:"),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">$ <span class="token function">find</span> <span class="token parameter variable">-iname</span> <span class="token string">\'*.mp3\'</span> <span class="token parameter variable">-print0</span> <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token parameter variable">-0</span> mid3iconv <span class="token parameter variable">-eCP1251</span> --remove-v1</code></pre></div>'}}),"\n",s.createElement(n.p,null,"Вот и всё."))}var c=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,t.MN)(),e.components);return n?s.createElement(n,e,s.createElement(l,e)):l(e)},r=a(7792),p=a(7619);function o(e){var n,a;let{data:{mdx:t},children:l,pageContext:{prev:c,next:o}}=e;const{h1:i,title:u,description:m,image:g,table_of_contents:d}=t.frontmatter;return(0,s.useEffect)((()=>{(0,p.K)()}),[]),s.createElement(s.Fragment,null,s.createElement(r._W,{h1:i,title:u,description:m,image:null===(n=t.frontmatter.image)||void 0===n?void 0:n.publicURL},s.createElement(r.MV,{post:t.frontmatter,imageData:null==g||null===(a=g.childImageSharp)||void 0===a?void 0:a.gatsbyImageData},d?s.createElement(r.G8,{headings:t.tableOfContents}):null,s.createElement("div",{className:"page__content"},l,s.createElement(r.Mf,{prev:c,next:o})),s.createElement(r.QZ,null))))}function i(e){return s.createElement(o,e,s.createElement(c,e))}},8876:function(e,n,a){a.d(n,{MN:function(){return l}});var t=a(4424);const s=t.createContext({});function l(e){const n=t.useContext(s);return t.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}}}]);