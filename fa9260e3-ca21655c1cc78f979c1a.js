"use strict";(self.webpackChunkgatsby_blog=self.webpackChunkgatsby_blog||[]).push([[6384],{1631:function(n,s,a){var t=a(8876),p=a(4424);function e(n){const s=Object.assign({p:"p",h2:"h2",a:"a",span:"span",h3:"h3"},(0,t.MN)(),n.components);return p.createElement(p.Fragment,null,p.createElement(s.p,null,"На выходных захотелось поэкспериментировать с блогом. Возможности vuepress исследованы.\nДуша просит новизны. Под руку попался gatsby. Ну, что ж, попробуем сделать мультиязычный сайт\nи поиграть с graphql, который поставляется как вариант по-умолчанию для передачи данных."),"\n",p.createElement(s.h2,{id:"установка",style:{position:"relative"}},p.createElement(s.a,{href:"#%D1%83%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%BA%D0%B0","aria-label":"установка permalink",className:"anchor before"},p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Установка"),"\n",p.createElement(s.p,null,"Любимый для подобных вещей ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">npx</code>'}})," спешит на помощь. Выбираем минимальный starter-шаблон, чтобы\nвсё сделать по-своему с нуля. Используемая версия gatsby: 4."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">$ npx gatsby new gatsby-blog https://github.com/gatsbyjs/gatsby-starter-hello-world\n$ <span class="token builtin class-name">cd</span> gatsby-blog\n$ <span class="token function">npm</span> run develop</code></pre></div>'}}),"\n",p.createElement(s.p,null,"Файловая структура представлена ниже. Можно не воспроизводить её как есть, она лишь иллюстрирует\nоткуда берутся те или иные файлы и помогает ориентироваться в дальнейших кусках кода."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">.\n├── content\n│   ├── en\n│   │   └── frontend\n│   └── ru\n│       ├── frontend\n│       └── backend\n├── gatsby-browser.js\n├── gatsby-config.js\n├── gatsby-node.js\n├── gatsby-ssr.js\n├── src\n│   ├── assets\n│   │   ├── images\n│   │   │   └── great.jpg\n│   │   └── styles\n│   │       └── base.css\n│   ├── components\n│   │   ├── layout.js\n│   │   └── theme-switcher.js\n│   ├── pages\n│   │   ├── 404.js\n│   │   └── index.js\n│   ├── templates\n│   │   └── post-template.js\n│   └── translations\n│       ├── en.json\n│       ├── ru.json\n│       └── index.js\n└── static\n    ├── favicon.ico\n    ├── sitemap.xml\n    └── robots.txt</code></pre></div>'}}),"\n",p.createElement(s.p,null,"Из названий, в общем-то, всё понятно. Единственное, что стоило бы уточнить: данные\nбудут представлять собой ",p.createElement(s.a,{href:"https://daringfireball.net/projects/markdown/",target:"_blank",rel:"nofollow"},"markdown-файлы"),".\nЭто наша база данных. Типичная для генератора статики, но не являющаяся единственным вариантом\nв случае с gatsby."),"\n",p.createElement(s.h2,{id:"graphql",style:{position:"relative"}},p.createElement(s.a,{href:"#graphql","aria-label":"graphql permalink",className:"anchor before"},p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Graphql"),"\n",p.createElement(s.p,null,"После получения копии gatsby, можно сразу же запустить его в режиме разработки и поиграть\nс graphql. Чтобы получить что-то полезное, сначала надо это полезное написать. Хотя бы\nзадать глобальные данные для сайта. Сделать это можно в ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">gatsby-config.js</code>'}}),"."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token comment">// gatsby-config.js</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">siteMetadata</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">"Great gatsby multi-language blog"</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"Открыть браузер по адресу ",p.createElement(s.a,{href:"http://localhost:8000/___graphql",target:"_blank",rel:"nofollow"},"http://localhost:8000/___graphql")," и написать запрос:"),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="graphql"><pre class="language-graphql"><code class="language-graphql"><span class="token punctuation">{</span>\n  <span class="token object">site</span> <span class="token punctuation">{</span>\n    <span class="token object">siteMetadata</span> <span class="token punctuation">{</span>\n      <span class="token property">title</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"В файле конфигурации можно прописать названия и пути к каким-либо страницам и вывести\nдинамическое меню. Только помните: если запросы используются в компоненте, получайте их\nчерез ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">useStaticQuery</code>'}}),". Но обо всём по порядку."),"\n",p.createElement(s.p,null,"Надеюсь, вы получили в ответ свой заголовок. Пора отправляться дальше."),"\n",p.createElement(s.h2,{id:"контент",style:{position:"relative"}},p.createElement(s.a,{href:"#%D0%BA%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D1%82","aria-label":"контент permalink",className:"anchor before"},p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Контент"),"\n",p.createElement(s.p,null,"Главная вещь, ради которой мы тут собрались: данные. Этот раздел самый большой,\nпоэтому приготовьте чаю."),"\n",p.createElement(s.h3,{id:"данные",style:{position:"relative"}},p.createElement(s.a,{href:"#%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D0%B5","aria-label":"данные permalink",className:"anchor before"},p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Данные"),"\n",p.createElement(s.p,null,"Перво-наперво пишем заметочку. Лучше несколько."),"\n",p.createElement(s.p,null,"По ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">slug</code>'}})," определим путь к заметке. ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">Category</code>'}})," для тех, кто хочет разбивать страницы по категориям.\nКонечно, дата, в формате год-месяц-день. Остальное должно быть понятно."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="markdown"><pre class="language-markdown"><code class="language-markdown"><span class="token comment">&lt;!--content/ru/frontend/gatsby/gatsby.mdx--\x3e</span>\n<span class="token hr punctuation">---</span>\nh1: Заголовок поста\ntitle: Title для браузера\ndescription: Описание для поисковых роботов\ndate: 2020-04-06\ncategory: frontend\n<span class="token title important">slug: gatsby\n<span class="token punctuation">---</span></span>\n\nМой контент\n<span class="token url"><span class="token operator">!</span>[<span class="token content">alt</span>](<span class="token url">./tree.jpg</span>)</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"Структура директории в формате ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">локаль -> категория -> запись</code>'}}),":"),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">.\n├── content\n│   ├── en\n│   │   └── frontend\n│   └── ru\n│       ├── frontend\n│       │   ├── gatsby\n│       │   │   ├── gatsby.jpg\n│       │   │   └── gatsby.mdx</code></pre></div>'}}),"\n",p.createElement(s.h3,{id:"инструменты",style:{position:"relative"}},p.createElement(s.a,{href:"#%D0%B8%D0%BD%D1%81%D1%82%D1%80%D1%83%D0%BC%D0%B5%D0%BD%D1%82%D1%8B","aria-label":"инструменты permalink",className:"anchor before"},p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Инструменты"),"\n",p.createElement(s.p,null,"Установка пакетов для работы с форматом mdx (в отличие от обычного markdown эта штука позволит\nиспользовать компоненты прямо в md-файлах. Ну не круто ли?)."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">$ <span class="token function">npm</span> i gatsby-plugin-mdx @mdx-js/mdx @mdx-js/react</code></pre></div>'}}),"\n",p.createElement(s.p,null,"Пакет «расшаривания» директории, где лежит контент, чтобы его содержимое\nбыло видно в graphql."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">$ <span class="token function">npm</span> i gatsby-source-filesystem</code></pre></div>'}}),"\n",p.createElement(s.p,null,"И пакеты, позволяющие запросто подключать картинки и хранить их не где-то в ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">static</code>'}}),",\nа рядом с файлом-заметкой."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">$ <span class="token function">npm</span> i gatsby-plugin-sharp gatsby-remark-images</code></pre></div>'}}),"\n",p.createElement(s.p,null,"Скормим их в файлу конфигурации:"),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token comment">// gatsby-config.js</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token string">"gatsby-plugin-sharp"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">resolve</span><span class="token operator">:</span> <span class="token string">"gatsby-source-filesystem"</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"content"</span><span class="token punctuation">,</span>\n        <span class="token comment">// шарить директорию content</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>__dirname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/content/</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">resolve</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">gatsby-plugin-mdx</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n      <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">extensions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">.mdx</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">.md</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">gatsbyRemarkPlugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            <span class="token literal-property property">resolve</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">gatsby-remark-images</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n            <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n              <span class="token literal-property property">maxWidth</span><span class="token operator">:</span> <span class="token number">1200</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"Данные подготовлены, пакеты установлены. Дальше следует выяснить как работает механизм\nпередачи данных. Для каждого markdown-файла создаётся страница (",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">gatsby-node.js</code>'}}),").\nСтраница должна иметь шаблон (",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">post-template.js</code>'}}),"). В шаблоне можно вывести что угодно."),"\n",p.createElement(s.p,null,"Поехали."),"\n",p.createElement(s.h3,{id:"создание-страниц",style:{position:"relative"}},p.createElement(s.a,{href:"#%D1%81%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5-%D1%81%D1%82%D1%80%D0%B0%D0%BD%D0%B8%D1%86","aria-label":"создание страниц permalink",className:"anchor before"},p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Создание страниц"),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token comment">// gatsby-node.js</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span>\n\n<span class="token comment">// createPages даёт доступ к graphql и некоторым методам gatsby (actions)</span>\nexports<span class="token punctuation">.</span><span class="token function-variable function">createPages</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> actions<span class="token punctuation">,</span> graphql <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> createPage <span class="token punctuation">}</span> <span class="token operator">=</span> actions\n\n  <span class="token comment">// получить все markdown-записи</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">allMdx</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">edges</span><span class="token operator">:</span> posts <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">graphql</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n    {\n      allMdx {\n        edges {\n          node {\n            frontmatter {\n              slug\n              category\n            }\n          }\n        }\n      }\n    }\n  </span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n\n  <span class="token comment">// для каждой записи создать страницу</span>\n  posts<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> node <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> slug<span class="token punctuation">,</span> category <span class="token punctuation">}</span> <span class="token operator">=</span> node<span class="token punctuation">.</span>frontmatter\n    <span class="token keyword">return</span> <span class="token function">createPage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// путь к странице</span>\n      <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>category<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>slug<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n      <span class="token comment">// шаблон страницы</span>\n      <span class="token literal-property property">component</span><span class="token operator">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">"./src/templates/post-template.js"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token comment">// контекст, который попадёт в шаблон</span>\n      <span class="token comment">// может быть использован для дальнейших манипуляций с данными</span>\n      <span class="token literal-property property">context</span><span class="token operator">:</span> <span class="token punctuation">{</span> slug <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",p.createElement(s.h3,{id:"шаблон",style:{position:"relative"}},p.createElement(s.a,{href:"#%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD","aria-label":"шаблон permalink",className:"anchor before"},p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Шаблон"),"\n",p.createElement(s.p,null,"В шаблоне запрашиваем любые данные."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="jsx"><pre class="language-jsx"><code class="language-jsx"><span class="token comment">// src/templates/post-template.js</span>\n\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">"react"</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> graphql <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"gatsby"</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> MDXRenderer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"gatsby-plugin-mdx"</span>\n\n<span class="token comment">// динамический slug берётся из переданного на этапе создания страниц контекста</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> query <span class="token operator">=</span> graphql<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  query getPost($slug: String!) {\n    mdx(frontmatter: { slug: { eq: $slug } }) {\n      body\n      frontmatter {\n        h1\n        slug\n      }\n    }\n  }\n</span><span class="token template-punctuation string">`</span></span>\n<span class="token comment">// Отобразить контент помогает MDXRenderer</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">PostTemplate</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> data <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> h1 <span class="token punctuation">}</span> <span class="token operator">=</span> data<span class="token punctuation">.</span>mdx<span class="token punctuation">.</span>frontmatter\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> body <span class="token punctuation">}</span> <span class="token operator">=</span> data<span class="token punctuation">.</span>mdx\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>h1<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MDXRenderer</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>body<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">MDXRenderer</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"Всё! Новую запись можно увидеть по адресу ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">http://localhost:8000/frontend/gatsby/</code>'}}),".\nЭто был самый трудоёмкий этап. Дальше можно вывести все записи на главной и перейти к пунктам\nболее простым и не менее полезным."),"\n",p.createElement(s.p,null,"Записи на главной:"),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="jsx"><pre class="language-jsx"><code class="language-jsx"><span class="token comment">// pages/index.js</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">"react"</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> graphql<span class="token punctuation">,</span> useStaticQuery<span class="token punctuation">,</span> Link <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"gatsby"</span>\n\n<span class="token comment">// получить все записи, отсортированные по дате</span>\n<span class="token keyword">const</span> getPosts <span class="token operator">=</span> graphql<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  query allPosts {\n    allMdx(sort: { frontmatter: {date: DESC} }) {\n      edges {\n        node {\n          frontmatter {\n            h1\n            slug\n            category\n            date(formatString: "MMMM Do, YYYY")\n          }\n        }\n      }\n    }\n  }\n</span><span class="token template-punctuation string">`</span></span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">HomePage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token function">useStaticQuery</span><span class="token punctuation">(</span>getPosts<span class="token punctuation">)</span>\n  <span class="token keyword">const</span> posts <span class="token operator">=</span> response<span class="token punctuation">.</span>allMdx<span class="token punctuation">.</span>edges\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span><span class="token plain-text">Posts</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span><span class="token plain-text">\n        </span><span class="token punctuation">{</span>posts<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> <span class="token literal-property property">node</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">frontmatter</span><span class="token operator">:</span> post <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>post<span class="token punctuation">.</span>date<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Link</span></span> <span class="token attr-name">to</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>post<span class="token punctuation">.</span>category<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>post<span class="token punctuation">.</span>slug<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>post<span class="token punctuation">.</span>h1<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Link</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"Объект ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">posts</code>'}})," можно фильтровать и сортировать как захочется прямо здесь. На производительность\nэто не повлияет. После сборки останется статичная страница с преобразованными заранее данными."),"\n",p.createElement(s.h2,{id:"мультиязычность-и-seo",style:{position:"relative"}},p.createElement(s.a,{href:"#%D0%BC%D1%83%D0%BB%D1%8C%D1%82%D0%B8%D1%8F%D0%B7%D1%8B%D1%87%D0%BD%D0%BE%D1%81%D1%82%D1%8C-%D0%B8-seo","aria-label":"мультиязычность и seo permalink",className:"anchor before"},p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Мультиязычность и SEO"),"\n",p.createElement(s.p,null,"На мой взгляд хорошим подспорьем для переводов в обычных javascript-файлах,\nтаких как страницы (pages), может быть пакет ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">react-intl</code>'}}),". Однако, есть одна проблема:\nдля gatsby его метод ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">injectIntl</code>'}})," работать не будет: не предусмотрен для использования\nв этом окружении. Но не беда, есть обёртка над ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">react-intl</code>'}}),", её и установим."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">$ <span class="token function">npm</span> i gatsby-plugin-intl</code></pre></div>'}}),"\n",p.createElement(s.p,null,"Файл конфигурации принимает следующий вид:"),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token comment">// gatsby-config.js</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token comment">// ...</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">resolve</span><span class="token operator">:</span> <span class="token string">"gatsby-plugin-intl"</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>__dirname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/src/translations</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n        <span class="token literal-property property">languages</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"en"</span><span class="token punctuation">,</span> <span class="token string">"ru"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">defaultLanguage</span><span class="token operator">:</span> <span class="token string">"ru"</span><span class="token punctuation">,</span>\n        <span class="token comment">// автоматически перенаправлять на `/ru` или `/en` когда человек на главной `/`</span>\n        <span class="token comment">// имейте ввиду: у Google Chrome всегда стоит `en-US`! экспериментируйте</span>\n        <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"Создайте файлы с языковыми переводами, если не сделали этого раньше."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">src\n└── translations\n    ├── en.json\n    ├── ru.json\n    └── index.js</code></pre></div>'}}),"\n",p.createElement(s.p,null,"Переводы не должны иметь вложенность. Только flat. Это ограничение ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">react-intl</code>'}}),".\nОно, конечно, обходится, но не станем заострять на этом внимание сейчас."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="json"><pre class="language-json"><code class="language-json"><span class="token comment">// src/translations/en.json</span>\n<span class="token punctuation">{</span>\n  <span class="token property">"home.h1"</span><span class="token operator">:</span> <span class="token string">"Hello, welcome {user}"</span><span class="token punctuation">,</span>\n  <span class="token property">"home.title"</span><span class="token operator">:</span> <span class="token string">"Home title"</span><span class="token punctuation">,</span>\n  <span class="token property">"home.description"</span><span class="token operator">:</span> <span class="token string">"Home description"</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"Предпочитаю брать их все из одного места. Так удобнее."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token comment">// src/translations/index.js</span>\n<span class="token keyword">import</span> locale_en <span class="token keyword">from</span> <span class="token string">"./en.json"</span>\n<span class="token keyword">import</span> locale_ru <span class="token keyword">from</span> <span class="token string">"./ru.json"</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">en</span><span class="token operator">:</span> locale_en<span class="token punctuation">,</span>\n  <span class="token literal-property property">ru</span><span class="token operator">:</span> locale_ru<span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"В markdown-файлы добавить информацию о языке, это очень важные данные!"),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="markdown"><pre class="language-markdown"><code class="language-markdown"><span class="token comment">&lt;!--content/ru/frontend/gatsby/gatsby.mdx--\x3e</span>\n<span class="token hr punctuation">---</span>\nh1: Заголовок поста\nlang: ru\n\n<span class="token comment">&lt;!--content/en/frontend/gatsby/gatsby.mdx--\x3e</span>\n<span class="token hr punctuation">---</span>\nh1: Post heading\nlang: en</code></pre></div>'}}),"\n",p.createElement(s.p,null,"Поскольку контентные страницы создаём самостоятельно, передавать контекст тоже надо самостоятельно."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token comment">// gatsby-node.js</span>\nexports<span class="token punctuation">.</span><span class="token function-variable function">createPages</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> actions<span class="token punctuation">,</span> graphql <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token comment">// запрос тот же, только lang добавить</span>\n  <span class="token comment">// ...</span>\n  frontmatter <span class="token punctuation">{</span>\n    lang\n    slug\n    category\n  <span class="token punctuation">}</span>\n  <span class="token comment">// ...</span>\n\n  <span class="token comment">// создать отдельные страницы для разных языков</span>\n  posts<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> node <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> lang<span class="token punctuation">,</span> slug<span class="token punctuation">,</span> category <span class="token punctuation">}</span> <span class="token operator">=</span> node<span class="token punctuation">.</span>frontmatter\n    <span class="token keyword">return</span> <span class="token function">createPage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>lang<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>category<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>slug<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n      <span class="token literal-property property">component</span><span class="token operator">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">"./src/templates/post-template.js"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">context</span><span class="token operator">:</span> <span class="token punctuation">{</span> lang<span class="token punctuation">,</span> slug <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"И ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">lang</code>'}})," в шаблон, конечно, прокинуть. Надо же теперь распределять весь контент\nпо языковой принадлежности! Заодно правильно отформатируем даты для текущего языка."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="jsx"><pre class="language-jsx"><code class="language-jsx"><span class="token comment">// src/templates/post-template.js</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> query <span class="token operator">=</span> graphql<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  query getPost($slug: String!, $lang: String!) {\n    mdx(frontmatter: { slug: { eq: $slug }, lang: { eq: $lang } }) {\n      body\n      frontmatter {\n        h1\n        date(formatString: "MMMM Do, YYYY", locale: $lang)\n      }\n    }\n  }\n</span><span class="token template-punctuation string">`</span></span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"Страницы в ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">page</code>'}})," после установки плагина обзавелись новой переменной контекста — ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">language</code>'}}),".\nТеперь для каждой из них можно получить язык, установленный в браузере посетителя.\nФильтровать по этому признаку записи или добавлять seo-заголовки. Попробуем."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="jsx"><pre class="language-jsx"><code class="language-jsx"><span class="token comment">// src/pages/index.js</span>\n<span class="token comment">// ... добавить в запрос lang</span>\nfrontmatter <span class="token punctuation">{</span>\n  lang\n  h1\n  slug\n  category\n<span class="token punctuation">}</span>\n<span class="token comment">// ...</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">HomePage</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> <span class="token literal-property property">pageContext</span><span class="token operator">:</span> <span class="token punctuation">{</span> language <span class="token punctuation">}</span> <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token function">useStaticQuery</span><span class="token punctuation">(</span>getPosts<span class="token punctuation">)</span>\n  <span class="token comment">// только записи с актуальной локалью</span>\n  <span class="token keyword">const</span> posts <span class="token operator">=</span> response<span class="token punctuation">.</span>allMdx<span class="token punctuation">.</span>edges<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>\n    <span class="token parameter">post</span> <span class="token operator">=></span> post<span class="token punctuation">.</span>node<span class="token punctuation">.</span>frontmatter<span class="token punctuation">.</span>lang <span class="token operator">===</span> language\n  <span class="token punctuation">)</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span><span class="token plain-text">\n        </span><span class="token punctuation">{</span>posts<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> <span class="token literal-property property">node</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">frontmatter</span><span class="token operator">:</span> post <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Link</span></span> <span class="token attr-name">to</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>post<span class="token punctuation">.</span>lang<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>post<span class="token punctuation">.</span>category<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>post<span class="token punctuation">.</span>slug<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n              </span><span class="token punctuation">{</span>post<span class="token punctuation">.</span>h1<span class="token punctuation">}</span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Link</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"Осталось разобраться с локализацией самих js-страниц. На сцену снова выходит ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">react-intl</code>'}}),"."),"\n",p.createElement(s.p,null,"Конечно, захочется правильно устанавливать html-атрибут ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">lang</code>'}})," и писать в ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">head</code>'}})," всякие\nкрасивые мета-данные для поисковых роботов. В этом поможет ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">layout.js</code>'}}),", куда будем складывать всё\nэто добро. Ставим ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">react-helmet</code>'}})," и ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">gatsby-plugin-react-helmet</code>'}}),":"),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">$ <span class="token function">npm</span> i react-helmet gatsby-plugin-react-helmet</code></pre></div>'}}),"\n",p.createElement(s.p,null,"В ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">gatsby.config.js</code>'}})," добавляем последний. Так мета-теги будут учитываться при генерации статики."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token comment">// gatsby.config.js</span>\n<span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n  <span class="token string">\'gatsby-plugin-react-helmet\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"Чтобы не страдать с импортом относительных путей, докрутим webpack."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token comment">// gatsby-node.js</span>\nexports<span class="token punctuation">.</span><span class="token function-variable function">onCreateWebpackConfig</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> actions <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  actions<span class="token punctuation">.</span><span class="token function">setWebpackConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">resolve</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">modules</span><span class="token operator">:</span> <span class="token punctuation">[</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"src"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"node_modules"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"Дописываем в ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">gatsby-config.js</code>'}})," глобальные title и description. Или не дописываем, а передаём\nс конкретной страницы. Тогда и graphql-запрос не нужен. В общем, идём делать SEO."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="jsx"><pre class="language-jsx"><code class="language-jsx"><span class="token comment">// components/layout.js</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">"react"</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Helmet <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react-helmet"</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useStaticQuery<span class="token punctuation">,</span> graphql <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"gatsby"</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Layout</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  lang <span class="token operator">=</span> <span class="token string">"ru"</span><span class="token punctuation">,</span>\n  title <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">,</span>\n  description <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">,</span>\n  children<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> site <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useStaticQuery</span><span class="token punctuation">(</span>\n    graphql<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    </span><span class="token template-punctuation string">`</span></span>\n  <span class="token punctuation">)</span>\n  <span class="token keyword">const</span> metaDescription <span class="token operator">=</span> description <span class="token operator">||</span> site<span class="token punctuation">.</span>siteMetadata<span class="token punctuation">.</span>description\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Helmet</span></span>\n        <span class="token attr-name">htmlAttributes</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> lang <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">title</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>title<span class="token punctuation">}</span></span>\n        <span class="token attr-name">titleTemplate</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">%s | </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>site<span class="token punctuation">.</span>siteMetadata<span class="token punctuation">.</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">meta</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>\n          <span class="token comment">// по желанию добавить Open Graph для социальных сетей</span>\n          <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"description"</span><span class="token punctuation">,</span> <span class="token literal-property property">content</span><span class="token operator">:</span> metaDescription <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"Допустим, ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">pages/index.js</code>'}})," пуст (если нет, создаём любой другой, к примеру ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">about.js</code>'}}),")."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="jsx"><pre class="language-jsx"><code class="language-jsx"><span class="token comment">// pages/index.js</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">"react"</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>\n  useIntl<span class="token punctuation">,</span>\n  FormattedDate<span class="token punctuation">,</span>\n  FormattedMessage<span class="token punctuation">,</span>\n  FormattedNumber<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"gatsby-plugin-intl"</span>\n<span class="token keyword">import</span> Layout <span class="token keyword">from</span> <span class="token string">"components/layout"</span>\n\n<span class="token comment">// получить language из контекста и вывести:</span>\n<span class="token comment">// правильно отформатированные дату, число и валюту, да просто переменную в тексте</span>\n<span class="token comment">// красота!</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">HomePage</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> <span class="token literal-property property">pageContext</span><span class="token operator">:</span> <span class="token punctuation">{</span> language <span class="token punctuation">}</span> <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> intl <span class="token operator">=</span> <span class="token function">useIntl</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Layout</span></span>\n      <span class="token attr-name">lang</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>language<span class="token punctuation">}</span></span>\n      <span class="token attr-name">title</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>intl<span class="token punctuation">.</span><span class="token function">formatMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">"home.title"</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">description</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>intl<span class="token punctuation">.</span><span class="token function">formatMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">"home.description"</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n    <span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormattedDate</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormattedNumber</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">12000</span><span class="token punctuation">}</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css">currency</span><span class="token punctuation">"</span></span></span> <span class="token attr-name">currency</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>USD<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormattedMessage</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>home.h1<span class="token punctuation">"</span></span> <span class="token attr-name">values</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">user</span><span class="token operator">:</span> <span class="token string">"Jack"</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Layout</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"На этом вопросы мультиязычности и SEO считаю закрытыми."),"\n",p.createElement(s.h2,{id:"gatsby-ssr",style:{position:"relative"}},p.createElement(s.a,{href:"#gatsby-ssr","aria-label":"gatsby ssr permalink",className:"anchor before"},p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"gatsby-ssr"),"\n",p.createElement(s.p,null,"Надо бы затронуть и этот файл тоже. Но для чего? Gatsby встраивает инлайновые стили на страницу.\nНе всем это придётся по вкусу по той причине, что такие стили по-умолчанию не кэшируются.\nЭто поведение меняется здесь. На любителя."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token comment">// gatsby-ssr.js</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">onPreRenderHTML</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> getHeadComponents<span class="token punctuation">,</span> replaceHeadComponents <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token comment">// для разработки оставить inline css</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">"production"</span><span class="token punctuation">)</span> <span class="token keyword">return</span>\n\n  <span class="token keyword">const</span> headComponents <span class="token operator">=</span> <span class="token function">getHeadComponents</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n  headComponents<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">el</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token comment">// для итоговой сборки сделать отдельный css-файл</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">"style"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      el<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">"link"</span>\n      el<span class="token punctuation">.</span>props<span class="token punctuation">[</span><span class="token string">"href"</span><span class="token punctuation">]</span> <span class="token operator">=</span> el<span class="token punctuation">.</span>props<span class="token punctuation">[</span><span class="token string">"data-href"</span><span class="token punctuation">]</span>\n      el<span class="token punctuation">.</span>props<span class="token punctuation">[</span><span class="token string">"rel"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"stylesheet"</span>\n      el<span class="token punctuation">.</span>props<span class="token punctuation">[</span><span class="token string">"type"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"text/css"</span>\n\n      <span class="token keyword">delete</span> el<span class="token punctuation">.</span>props<span class="token punctuation">[</span><span class="token string">"data-href"</span><span class="token punctuation">]</span>\n      <span class="token keyword">delete</span> el<span class="token punctuation">.</span>props<span class="token punctuation">[</span><span class="token string">"dangerouslySetInnerHTML"</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n  <span class="token function">replaceHeadComponents</span><span class="token punctuation">(</span>headComponents<span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",p.createElement(s.h2,{id:"webpack",style:{position:"relative"}},p.createElement(s.a,{href:"#webpack","aria-label":"webpack permalink",className:"anchor before"},p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Webpack"),"\n",p.createElement(s.p,null,"Небольшой пример тюнинга конфигурации webpack был рассмотрен в предыдущем разделе."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token comment">// gatsby-node.js</span>\nexports<span class="token punctuation">.</span><span class="token function-variable function">onCreateWebpackConfig</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> getConfig<span class="token punctuation">,</span> actions<span class="token punctuation">,</span> plugins <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  actions<span class="token punctuation">.</span><span class="token function">setWebpackConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token comment">// отключить  source-map в итоговой сборке</span>\n    <span class="token literal-property property">devtool</span><span class="token operator">:</span> <span class="token function">getConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mode <span class="token operator">===</span> <span class="token string">"production"</span> <span class="token operator">?</span> <span class="token boolean">false</span> <span class="token operator">:</span> <span class="token string">"source-map"</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">resolve</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">modules</span><span class="token operator">:</span> <span class="token punctuation">[</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"src"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"node_modules"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// по желанию вырубить react-dev-tools</span>\n    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      plugins<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token string-property property">\'__REACT_DEVTOOLS_GLOBAL_HOOK__\'</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">({ isDisabled: true })</span><span class="token template-punctuation string">`</span></span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"Здесь упомяну лишь о том, как ставить свои плагины. На самом деле нет ничего проще.\nСтавим что хотим + обязательно ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">babel-preset-gatsby</code>'}}),"."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">$ <span class="token function">npm</span> i --save-dev babel-preset-gatsby @babel/plugin-proposal-optional-chaining</code></pre></div>'}}),"\n",p.createElement(s.p,null,"Создаём свой ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">.babelrc</code>'}})," в корне проекта."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="json"><pre class="language-json"><code class="language-json"><span class="token punctuation">{</span>\n  <span class="token property">"plugins"</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token string">"@babel/plugin-proposal-optional-chaining"</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token property">"presets"</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">[</span>\n      <span class="token string">"babel-preset-gatsby"</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        <span class="token property">"targets"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token property">"browsers"</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">">0.5%"</span><span class="token punctuation">,</span>\n            <span class="token string">"not dead"</span>\n          <span class="token punctuation">]</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"Всё. Уже можно использовать ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">plugin-proposal-optional-chaining</code>'}}),"."),"\n",p.createElement(s.h2,{id:"картинки-вне-static",style:{position:"relative"}},p.createElement(s.a,{href:"#%D0%BA%D0%B0%D1%80%D1%82%D0%B8%D0%BD%D0%BA%D0%B8-%D0%B2%D0%BD%D0%B5-static","aria-label":"картинки вне static permalink",className:"anchor before"},p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Картинки вне static"),"\n",p.createElement(s.p,null,"Импорт картинок, лежащих не глобально в ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">static</code>'}}),", а где-нибудь в ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">src/assets</code>'}}),", можно произвести\nследующим образом:"),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="jsx"><pre class="language-jsx"><code class="language-jsx"><span class="token comment">// src/pages/index.js</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">"react"</span>\n<span class="token keyword">import</span> image <span class="token keyword">from</span> <span class="token string">"assets/images/great.jpg"</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">HomePage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>image<span class="token punctuation">}</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Great Gatsby<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">375</span><span class="token punctuation">}</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>auto<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",p.createElement(s.h2,{id:"dark-mode",style:{position:"relative"}},p.createElement(s.a,{href:"#dark-mode","aria-label":"dark mode permalink",className:"anchor before"},p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Dark mode"),"\n",p.createElement(s.p,null,"В мобильных приложениях появился dark mode. Осмелюсь доложить, штука неплохая. Вечерами спасает глаза.\nТе, кто хочет завести себе PWA и быть ближе к нативным мобильным, явно захотят и эту фичу.\nЧто ж, сделаем!"),"\n",p.createElement(s.p,null,"Я опишу сложный вариант, чтобы продемонстрировать работу с ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">gatsby-browser.js</code>'}}),".\nМожно проще: менять класс у ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">html</code>'}})," или ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">body</code>'}})," (рабоать это будет, конечно, до перезагрузки страницы)."),"\n",p.createElement(s.p,null,"Понадобятся стили, общие для всех страниц для объявления в них css-переменных. В примере\nдинамически меняться будут только фон и текст страницы."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="css"><pre class="language-css"><code class="language-css"><span class="token comment">/* assets/styles/base.css */</span>\n<span class="token selector">:root</span> <span class="token punctuation">{</span>\n  <span class="token property">--textColor</span><span class="token punctuation">:</span> #3f3f3f<span class="token punctuation">;</span>\n  <span class="token property">--bgColor</span><span class="token punctuation">:</span> #fafafa<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">[data-theme="dark"]</span> <span class="token punctuation">{</span>\n  <span class="token property">--textColor</span><span class="token punctuation">:</span> #d9d7e0<span class="token punctuation">;</span>\n  <span class="token property">--bgColor</span><span class="token punctuation">:</span> #232129<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">body</span> <span class="token punctuation">{</span>\n  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--bgColor<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--textColor<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"Идём на сторону клиента. Код в ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">onClientEntry</code>'}})," отрабатывает только один раз когда посетитель зашёл\nна страницу."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token comment">// gatsby-browser.js</span>\n<span class="token comment">// подключаем глобальные стили</span>\n<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"./src/assets/styles/base.css"</span><span class="token punctuation">)</span>\n\nexports<span class="token punctuation">.</span><span class="token function-variable function">onClientEntry</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token function">enableTheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// Если тема не установлена, применить тему по-умолчанию.</span>\n<span class="token comment">// Если установлена пользователем, сохранить его выбор в localStorage,</span>\n<span class="token comment">// чтобы не заставлять человека выбирать её снова и снова при переходе на другие страницы</span>\n<span class="token keyword">function</span> <span class="token function">enableTheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> root <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>\n  <span class="token keyword">try</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> uiTheme <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">"theme-ui-color-mode"</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> theme <span class="token operator">=</span> uiTheme <span class="token operator">?</span> uiTheme <span class="token operator">:</span> <span class="token string">"light"</span>\n    <span class="token comment">// выставить data-атрибут темы для элемента body</span>\n    root<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"data-theme"</span><span class="token punctuation">,</span> theme<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">\'localStorage error\'</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"Неплохо бы сделать переключатель, чтобы пользователь сам мог менять оформление."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="jsx"><pre class="language-jsx"><code class="language-jsx"><span class="token comment">// src/components/theme-switcher.js</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">"react"</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">onThemeToggle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token comment">// получить тему из data-theme</span>\n  <span class="token keyword">const</span> root <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>\n  <span class="token keyword">const</span> theme <span class="token operator">=</span> root<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"data-theme"</span><span class="token punctuation">)</span>\n\n  <span class="token comment">// изменить атрибут</span>\n  <span class="token comment">// если была светлая тема, поставить тёмную и наоборот</span>\n  <span class="token keyword">const</span> uiTheme <span class="token operator">=</span> theme <span class="token operator">===</span> <span class="token string">"dark"</span> <span class="token operator">?</span> <span class="token string">"light"</span> <span class="token operator">:</span> <span class="token string">"dark"</span>\n\n  <span class="token keyword">try</span> <span class="token punctuation">{</span>\n    root<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"data-theme"</span><span class="token punctuation">,</span> uiTheme<span class="token punctuation">)</span>\n    <span class="token comment">// запомнить выбор</span>\n    localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">"theme-ui-color-mode"</span><span class="token punctuation">,</span> uiTheme<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">ThemeSwitcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onThemeToggle<span class="token punctuation">}</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n      Change Theme\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"Ну, и подключить компонент-switcher куда-нибудь на страницу или в другой компонент:\nв шапку сайта, например."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="jsx"><pre class="language-jsx"><code class="language-jsx"><span class="token comment">// src/pages/index.js</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">"react"</span>\n<span class="token keyword">import</span> Layout <span class="token keyword">from</span> <span class="token string">"components/layout"</span>\n<span class="token keyword">import</span> ThemeSwitcher <span class="token keyword">from</span> <span class="token string">"components/theme-switcher"</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">HomePage</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> <span class="token literal-property property">pageContext</span><span class="token operator">:</span> <span class="token punctuation">{</span> language <span class="token punctuation">}</span> <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Layout</span></span> <span class="token attr-name">lang</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>language<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ThemeSwitcher</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span><span class="token plain-text">Home</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Layout</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"Проверяем, кликаем."),"\n",p.createElement(s.p,null,"Если хочется менять тему в зависимости от времени суток, лучший вариант ",p.createElement(s.a,{href:"https://developer.mozilla.org/ru/docs/Web/CSS/@media/prefers-color-scheme",target:"_blank",rel:"nofollow"},"prefers-color-scheme"),". Тогда приведённый выше код даже писать\nне придётся."),"\n",p.createElement(s.h2,{id:"подсветка-кода",style:{position:"relative"}},p.createElement(s.a,{href:"#%D0%BF%D0%BE%D0%B4%D1%81%D0%B2%D0%B5%D1%82%D0%BA%D0%B0-%D0%BA%D0%BE%D0%B4%D0%B0","aria-label":"подсветка кода permalink",className:"anchor before"},p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Подсветка кода"),"\n",p.createElement(s.p,null,"Когда вы пишете в своих заметках тонны кода как это делаю я, подсветка жизненно необходима.\nДля gatsby есть два варианта: prism.js или highlight.js. Возьмём первый."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">$ <span class="token function">npm</span> i prismjs gatsby-remark-prismjs</code></pre></div>'}}),"\n",p.createElement(s.p,null,"Настроек у пакета достаточно. Не вижу смысла описывать их все здесь, лучше увидеть\n",p.createElement(s.a,{href:"https://www.gatsbyjs.com/packages/gatsby-remark-prismjs/",target:"_blank",rel:"nofollow"},"полную картину"),"."),"\n",p.createElement(s.p,null,"Ограничимся минимумом. Надо сказать ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">gatsby-plugin-mdx</code>'}}),", чтобы он применил ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">prism.js</code>'}}),"."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token comment">// gatsby-config.js</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token comment">// ...</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">resolve</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">gatsby-plugin-mdx</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n      <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">gatsbyRemarkPlugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            <span class="token literal-property property">resolve</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">gatsby-remark-prismjs</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n            <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n              <span class="token literal-property property">classPrefix</span><span class="token operator">:</span> <span class="token string">"language-"</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">inlineCodeMarker</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"Не забыть подключить стили подсветки. Можно глобально, а можно только на страницах записей."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token comment">// gatsby-browser.js</span>\n<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"prismjs/themes/prism-solarizedlight.css"</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"И посмотреть-таки, что получилось."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="markdown"><pre class="language-markdown"><code class="language-markdown"><span class="token comment">&lt;!--content/ru/frontend/gatsby/gatsby.mdx--\x3e</span>\nКусок кода css.\n\n<span class="token code"><span class="token punctuation">```</span><span class="token code-language">css</span>\n<span class="token code-block language-css"><span class="token selector">.gatsby-highlight</span> <span class="token punctuation">{</span>\n  <span class="token property">background-color</span><span class="token punctuation">:</span> #fdf6e3<span class="token punctuation">;</span>\n  <span class="token property">border-radius</span><span class="token punctuation">:</span> 0.3em<span class="token punctuation">;</span>\n<span class="token punctuation">}</span></span>\n<span class="token punctuation">```</span></span></code></pre></div>'}}),"\n",p.createElement(s.h2,{id:"комментарии",style:{position:"relative"}},p.createElement(s.a,{href:"#%D0%BA%D0%BE%D0%BC%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%D1%80%D0%B8%D0%B8","aria-label":"комментарии permalink",className:"anchor before"},p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Комментарии"),"\n",p.createElement(s.p,null,"Редкий блог обходится без комментариев. Здесь у каждого свои предпочтения, начиная от\nвыбора самой системы комментирования, и заканчивая реализацией её подключения. Мне интересно\nповедение, когда комментарии показываются только если посетитель сам захотел их увидеть.\nСледовательно, до этого момента (а он может не наступить никогда), я не хочу грузить какие-то\nсторонние скрипты."),"\n",p.createElement(s.p,null,"Реализация именно такого поведения и представлена ниже. Из всего многообразия похожих скриптовых\nсистем используем disqus."),"\n",p.createElement(s.p,null,"Код disqus."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="jsx"><pre class="language-jsx"><code class="language-jsx"><span class="token comment">// src/components/disqus.js</span>\n<span class="token keyword">const</span> <span class="token constant">DISQUS_ID</span> <span class="token operator">=</span> <span class="token string">"xxxxx.disqus.com"</span> <span class="token comment">// ваш идентификатор</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">runDisqus</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> page <span class="token operator">=</span> window<span class="token punctuation">.</span>document<span class="token punctuation">;</span>\n  <span class="token keyword">const</span> dscript <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"script"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  dscript<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">//</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">DISQUS_ID</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/embed.js</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n  dscript<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"data-timestamp"</span><span class="token punctuation">,</span> <span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">(</span>page<span class="token punctuation">.</span>head <span class="token operator">||</span> page<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>dscript<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div>'}}),"\n",p.createElement(s.p,null,"Компонент комментариев."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="jsx"><pre class="language-jsx"><code class="language-jsx"><span class="token comment">// src/components/comments.js</span>\n<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react"</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> runDisqus <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./disqus"</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">Comments</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token comment">// Если юзер тыкнул по кнопке (isThreadOpened = true),</span>\n  <span class="token comment">// динамически подключаем скрипт disqus</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>isThreadOpened<span class="token punctuation">,</span> setIsThreadOpened<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">handleOpenThread</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setIsThreadOpened</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> window <span class="token operator">!==</span> <span class="token string">"undefined"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">runDisqus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">// переход с Link не перезагружает страницу полностью</span>\n  <span class="token comment">// поэтому выполняем DISQUS.reset, чтобы корректно обновлять</span>\n  <span class="token comment">// комментарии на странице</span>\n  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span><span class="token constant">DISQUS</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      window<span class="token punctuation">.</span><span class="token constant">DISQUS</span><span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n\n  <span class="token comment">// показать кнопку, если комментарии ещё не открывали</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>comments<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token punctuation">{</span><span class="token operator">!</span>isThreadOpened <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleOpenThread<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n          Show comments\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n      <span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>disqus_thread<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Comments</code></pre></div>'}}),"\n",p.createElement(s.p,null,"Подключаем компонент на страницы записей."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="jsx"><pre class="language-jsx"><code class="language-jsx"><span class="token comment">// src/templates/post-template.js</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">"react"</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> graphql <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"gatsby"</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> MDXRenderer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"gatsby-plugin-mdx"</span>\n<span class="token keyword">import</span> Comments <span class="token keyword">from</span> <span class="token string">"components/comments"</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">PostTemplate</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> data <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> h1 <span class="token punctuation">}</span> <span class="token operator">=</span> data<span class="token punctuation">.</span>mdx<span class="token punctuation">.</span>frontmatter\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> body <span class="token punctuation">}</span> <span class="token operator">=</span> data<span class="token punctuation">.</span>mdx\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>h1<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MDXRenderer</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>body<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">MDXRenderer</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Comments</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// ...</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"Ещё вариант: подключать скрипт когда скролл доходит до конца страницы,\nчтобы ленивцы не напрягали палец нажатием на кнопку."),"\n",p.createElement(s.h2,{id:"mdx",style:{position:"relative"}},p.createElement(s.a,{href:"#mdx","aria-label":"mdx permalink",className:"anchor before"},p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"MDX"),"\n",p.createElement(s.p,null,"Plugin MDX — это в первую очередь доступ к множеству пакетов. Для gatsby они\nподключаются в двух вариациях: как адаптированный gatsby-пакет или как родной пакет\n",p.createElement(s.a,{href:"https://github.com/remarkjs/remark",target:"_blank",rel:"nofollow"},"remark"),"."),"\n",p.createElement(s.p,null,"Выглядит это так:"),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">resolve</span><span class="token operator">:</span> <span class="token string">"gatsby-plugin-mdx"</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">extensions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">".mdx"</span><span class="token punctuation">,</span> <span class="token string">".md"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token comment">// родные плагины remark</span>\n        <span class="token literal-property property">remarkPlugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token comment">// ставит внешним ссылкам атрибуты rel="nofollow, noopener, noreferrer"</span>\n          <span class="token comment">// открывает их в новой вкладке</span>\n          <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"remark-external-links"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token comment">// адаптированные плагины</span>\n        <span class="token literal-property property">gatsbyRemarkPlugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token string">"gatsby-remark-images"</span><span class="token punctuation">,</span>\n          <span class="token string">"gatsby-remark-prismjs"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"А самое вкусное то, что можно импортировать компоненты прямо в markdown-файлы. Это позволит сделать\nпочти всё, что угодно. Вывод красивых табличек-предупреждений, нормальные вкладки с табами.\nВозможно, даже галерею изображений."),"\n",p.createElement(s.p,null,"Самый простой случай — предупреждения. Делаем."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="css"><pre class="language-css"><code class="language-css"><span class="token comment">/* components/tip/tip.module.css */</span>\n<span class="token comment">/* стиль с именем с module.css это css-модуль */</span>\n<span class="token selector">.tip</span> <span class="token punctuation">{</span>\n  <span class="token property">padding</span><span class="token punctuation">:</span> 2rem<span class="token punctuation">;</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.heading</span> <span class="token punctuation">{</span> <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span> <span class="token punctuation">}</span>\n<span class="token selector">.warning</span> <span class="token punctuation">{</span> <span class="token property">background-color</span><span class="token punctuation">:</span> coral<span class="token punctuation">;</span> <span class="token punctuation">}</span>\n<span class="token selector">.danger</span> <span class="token punctuation">{</span> <span class="token property">background-color</span><span class="token punctuation">:</span> crimson<span class="token punctuation">;</span> <span class="token punctuation">}</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"Сам компонент:"),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="jsx"><pre class="language-jsx"><code class="language-jsx"><span class="token comment">// components/tip/index.js</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">"react"</span>\n<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> styles <span class="token keyword">from</span> <span class="token string">"./tip.module.css"</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Tip</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> type<span class="token punctuation">,</span> heading<span class="token punctuation">,</span> children <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>styles<span class="token punctuation">.</span>tip<span class="token punctuation">,</span> styles<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">\' \'</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">.</span>heading<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>heading<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"Использование в mdx-файле:"),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="markdown"><pre class="language-markdown"><code class="language-markdown">import Tip from "components/tip"\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Tip</span> <span class="token attr-name">heading</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Danger!<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>danger<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\nMy danger text\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Tip</span><span class="token punctuation">></span></span></code></pre></div>'}}),"\n",p.createElement(s.h2,{id:"публикация",style:{position:"relative"}},p.createElement(s.a,{href:"#%D0%BF%D1%83%D0%B1%D0%BB%D0%B8%D0%BA%D0%B0%D1%86%D0%B8%D1%8F","aria-label":"публикация permalink",className:"anchor before"},p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Публикация"),"\n",p.createElement(s.p,null,"Вариантов много. Рассмотрим деплой на github pages."),"\n",p.createElement(s.p,null,"От знакомства с vuepress у меня остался прекрасный маленький скрипт, который я оставлю здесь,\nпотому как он универсален."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="bash"><pre class="language-bash"><code class="language-bash"><span class="token shebang important">#!/usr/bin/env sh</span>\n\n<span class="token comment"># abort on errors</span>\n<span class="token builtin class-name">set</span> <span class="token parameter variable">-e</span>\n\n<span class="token comment"># build and navigate into the build output directory</span>\n<span class="token function">npm</span> run build <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> public\n\n<span class="token comment"># if you are deploying to a custom domain</span>\n<span class="token builtin class-name">echo</span> <span class="token string">\'blogname.com\'</span> <span class="token operator">></span> CNAME\n\n<span class="token function">git</span> init\n<span class="token function">git</span> <span class="token function">add</span> <span class="token parameter variable">-A</span>\n<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">\'deploy\'</span>\n\n<span class="token comment"># git push -f git@github.com:&lt;имя_юзера>/&lt;имя_репозитория>.git &lt;имя_ветки></span>\n<span class="token function">git</span> push <span class="token parameter variable">-f</span> git@github.com:jack/jack.github.io.git master:gh-pages</code></pre></div>'}}),"\n",p.createElement(s.h2,{id:"послесловие",style:{position:"relative"}},p.createElement(s.a,{href:"#%D0%BF%D0%BE%D1%81%D0%BB%D0%B5%D1%81%D0%BB%D0%BE%D0%B2%D0%B8%D0%B5","aria-label":"послесловие permalink",className:"anchor before"},p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Послесловие"),"\n",p.createElement(s.p,null,"В статье осталось много неосвящённых моментов: как поднять PWA (точно надо?), можно ли брать gatsby\nкогда нужно сотворить Headless CMS + статику (можно), обязательно ли использовать graphql (нет)."),"\n",p.createElement(s.p,null,"Ответы есть в ",p.createElement(s.a,{href:"https://www.gatsbyjs.com",target:"_blank",rel:"nofollow"},"официальной документации"),".\nОна очень хороша для глубокого погружения."),"\n",p.createElement(s.p,null,"С чем сравнивать gatsby когда стоишь перед выбором? Зависит от потребностей."),"\n",p.createElement(s.p,null,"На первой ступени стоят генераторы статики."),"\n",p.createElement(s.p,null,"Тот же vuepress был создан в первую очередь для написания документации. И с этой задачей\nон справляется на 100% без ручного вмешательства. Его можно сравнить с octopress или jekyll.\nВернее, из него можно сделать octopress (и даже лучше)."),"\n",p.createElement(s.p,null,"Вторая ступень... не знаю как обозначить эти фреймворки. Gatsby и его молодой аналог\nна Vue — Gridsome. Они предоставляют больше возможностей: обращение к серверу или напрямую\nк базе данных, или использование классики в виде локально хранящихся markdown-файлов."),"\n",p.createElement(s.p,null,"Третья ступень: Next.js/Nuxt.js. Это если нужен server side rendering «из коробки»,\nно одной лишь статикой не обойтись. В основном это приложения с множеством страниц, когда интерфейс\nподстраивается под каждого пользователя индивидуально."),"\n",p.createElement(s.p,null,"Про мир Angular сказать не могу, но явно у них есть свои решения."),"\n",p.createElement(s.p,null,"В любом случае смотреть надо на наличие хорошей документации, поддержки сообщества и того,\nсколько средств вливается в инструмент. У gatsby в этом плане на текущий момент всё очень неплохо."),"\n",p.createElement(s.p,null,"У меня остались хорошие впечатления. И я, пожалуй, перееду на gatsby когда надумаю\nв следующий раз делать глобальный редизайн."))}s.c=function(n){void 0===n&&(n={});const{wrapper:s}=Object.assign({},(0,t.MN)(),n.components);return s?p.createElement(s,n,p.createElement(e,n)):e(n)}}}]);