"use strict";(self.webpackChunkgatsby_blog=self.webpackChunkgatsby_blog||[]).push([[3328],{5636:function(e,t,n){n.r(t),n.d(t,{Head:function(){return i.Ss},default:function(){return m}});var l=n(8876),a=n(4424),r=n(8860);function c(e){const t=Object.assign({p:"p",a:"a",code:"code",ul:"ul",li:"li",h2:"h2",span:"span",pre:"pre"},(0,l.MN)(),e.components);return a.createElement(a.Fragment,null,a.createElement(t.p,null,"В одной из ",a.createElement(t.a,{href:"/posts/django-first-steps/"},"предыдущих заметок"),",\nнами был написан шаблон для вывода списка публикаций на главной странице.\nСсылка на полный текст публикации имеет вид"),"\n",a.createElement(t.p,null,a.createElement(t.code,null,"{% url 'articles:detail' post.id %}"),","),"\n",a.createElement(t.p,null,"что позволяет получить определённую страницу по её идентификатору (",a.createElement(t.code,null,"id"),"). За отображение страницы ответственность несёт представление ",a.createElement(t.code,null,"articles")," из пространства имён (",a.createElement(t.code,null,"namespace"),") ",a.createElement(t.code,null,"detail"),". В данном ниже примере для разнообразия используем другую модель, а также для упрощения понимания материала откажемся от использования пространств имён: одно приложение — одна модель — один urls.py."),"\n",a.createElement(t.p,null,"И всё бы хорошо, но ссылки подобного вида иногда могут не\nподойти вам. Вот пара простых примеров, иллюстрирующих этот тезис:"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,"Вам нужно получить статью по slug"),"\n",a.createElement(t.li,null,"Вам нужно отобразить ссылки на предыдущую и следующую статью"),"\n"),"\n",a.createElement(t.p,null,"Что же, разберём указанные примеры по-порядку."),"\n",a.createElement(t.h2,{id:"вид-urlspy",style:{position:"relative"}},a.createElement(t.a,{href:"#%D0%B2%D0%B8%D0%B4-urlspy","aria-label":"вид urlspy permalink",className:"anchor before"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Вид urls.py"),"\n",a.createElement(t.p,null,"Создание файла ",a.createElement(t.code,null,"urls.py"),", отвечающего нашим запросам. Отображено использование\nобобщённых представлений, подробности о которых вы без труда найдёте в документации."),"\n",a.createElement(t.p,null,"У нас имеется представление ",a.createElement(t.code,null,"IndexView"),", на которое возложен вывод индексной\nстраницы со списком последних публикаций, а также ",a.createElement(t.code,null,"DetailView"),", которое выводит\nотдельную запись. В шаблоне к ним можно обращаться как к ",a.createElement(t.code,null,"latest_articles_list")," и ",a.createElement(t.code,null,"detail"),"\nсоответственно."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-python"},"# urls.py\n\nfrom django.conf.urls import patterns, include, url\nfrom .views import IndexView, DetailView\n\n\nurlpatterns = patterns('',\n    url(r'^$', IndexView.as_view(), name='latest_articles_list'),\n    url(r'^articles/(?P<slug>[-\\w]+)/$', DetailView.as_view(template_name = 'article.html'), name='detail'),\n)\n")),"\n",a.createElement(t.h2,{id:"обращение-по-первичному-ключу",style:{position:"relative"}},a.createElement(t.a,{href:"#%D0%BE%D0%B1%D1%80%D0%B0%D1%89%D0%B5%D0%BD%D0%B8%D0%B5-%D0%BF%D0%BE-%D0%BF%D0%B5%D1%80%D0%B2%D0%B8%D1%87%D0%BD%D0%BE%D0%BC%D1%83-%D0%BA%D0%BB%D1%8E%D1%87%D1%83","aria-label":"обращение по первичному ключу permalink",className:"anchor before"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Обращение по первичному ключу"),"\n",a.createElement(t.p,null,"В случае, когда нужно получить объект по ",a.createElement(t.code,null,"slug"),", нам важно знать, что любая\nмодель имеет свой первичный ключ (",a.createElement(t.code,null,"primary key"),") и его можно переопределить.\nПо-умолчанию первичным ключом является поле ",a.createElement(t.code,null,"id"),", генерируемое автоматически.\nТаким образом, мы получаем URL вида:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,null,"http://site.org/articles/1/\nhttp://site.org/articles/2/\n")),"\n",a.createElement(t.p,null,"А хотим видеть такие адреса:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,null,"http://site.org/articles/krasivyi-url/\nhttp://site.org/articles/po-poly-slug/\n")),"\n",a.createElement(t.p,null,"Самым простым решением является переопределение первичного ключа, но в\nэтом случае вы больше не сможете обращаться к полю модели по ",a.createElement(t.code,null,"id"),"."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-python"},"# models.py\n\nfrom django.db import models\n\n\nclass Article(models.Model):\n    ''' Create Post '''\n    title = models.CharField(max_length=150, verbose_name='Title')\n    content = models.TextField()\n    pub_date = models.DateField(auto_now=True, verbose_name='Create Date')\n    update = models.DateField(auto_now=False, blank=True, null=True,verbose_name='Last Update')\n    author = models.ForeignKey(to=User, verbose_name='Author')\n    slug = models.SlugField(primary_key=True, max_length=250, unique=True)\n    summary = models.TextField(blank=True, max_length=250, help_text='Meta Description')\n")),"\n",a.createElement(t.p,null,"Как мог заметить наблюдательный читатель, мы задали поле ",a.createElement(t.code,null,"slug")," со значением ",a.createElement(t.code,null,"primary_key=True"),". Предполагается, что в этом поле будет установлен устраивающий автора красивый URL. Теперь следует ссылаться на детальное представление публикации именно по этому полю. Конкретный пример будет приведён чуть ниже."),"\n",a.createElement(r.y,{heading:"Примечание"},a.createElement(t.p,null,"Если при создании представления вы используете обобщённые\nпредставления, вернуть публикацию по полю ",a.createElement(t.code,null,"slug"),", не нагромождая ваше\nпредставление и не затрагивая ",a.createElement(t.code,null,"primary key"),", также может быть очень легко.\nВ этом вам посодействуют ",a.createElement(t.code,null,"DetailView")," и ",a.createElement(t.code,null,"get_object_or_404"))),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-python"},'# views.py\n\nfrom django.shortcuts import get_object_or_404\nfrom django.views.generic.detail import DetailView\n\nclass DetailView(DetailView):\n    """ Return detail data """\n    model = Article\n    context_object_name = \'article\'\n\n    def get_object(self):\n        return get_object_or_404(Article, slug__iexact=self.kwargs[\'slug\'])\n')),"\n",a.createElement(t.p,null,"Прежде, чем приступить к написанию шаблонов, решим второй вопрос: о\nполучении абсолютных путей к объекту."),"\n",a.createElement(t.h2,{id:"абсолютные-пути",style:{position:"relative"}},a.createElement(t.a,{href:"#%D0%B0%D0%B1%D1%81%D0%BE%D0%BB%D1%8E%D1%82%D0%BD%D1%8B%D0%B5-%D0%BF%D1%83%D1%82%D0%B8","aria-label":"абсолютные пути permalink",className:"anchor before"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Абсолютные пути"),"\n",a.createElement(t.p,null,"Итак, для примера мы решили, что будем выводить предыдущую и следующую\nстатью при обращении к статье текущей. Если просто обращаться к статье по\nуказанному ключу, можно поиметь некоторые проблемы. Наш URL имеет относительный\nпуть, поэтому при наведении на любую ссылку внутри поста, которая сформирована\nтакже (то есть с указанием ",a.createElement(t.code,null,"{%raw%}{% url 'view' object.slug %}{%endraw%}"),"),\nпервичный ключ выбранной статьи просто будет добавлен к уже имеющемуся адресу. Вот так:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,null,"имеем:\nhttp://site.org/articles/my-article\n\nпри наведении на другую ссылку получим:\nhttp://site.org/articles/my-article/my-next-article\n")),"\n",a.createElement(t.p,null,"Поэтому мы добавим к нужной модели спасательный круг в виде метода\n",a.createElement(t.code,null,"get_absolute_url")," и сразу же выведем в шаблоне именно то, что нужно."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-python"},"# models.py\n\nfrom django.db import models\nfrom django.core.urlresolvers import reverse\n\n\nclass Article(models.Model):\n    title = models.CharField(max_length=150, verbose_name='Title')\n    content = models.TextField()\n    ...\n\n    def get_absolute_url(self):\n        return reverse('detail', args=[str(self.slug)])\n")),"\n",a.createElement(t.h2,{id:"подготовка-шаблонов",style:{position:"relative"}},a.createElement(t.a,{href:"#%D0%BF%D0%BE%D0%B4%D0%B3%D0%BE%D1%82%D0%BE%D0%B2%D0%BA%D0%B0-%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD%D0%BE%D0%B2","aria-label":"подготовка шаблонов permalink",className:"anchor before"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Подготовка шаблонов"),"\n",a.createElement(t.p,null,"Теперь в шаблонах мы можем ссылаться на статью по её абсолютному адресу,\nиспользуя ",a.createElement(t.code,null,"get_absolute_url"),". Примеры:"),"\n",a.createElement(t.p,null,"подобным образом может выглядеть индексная страница со списком последних публикаций"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-html"},'\x3c!--index.html--\x3e\n{% extends "base.html" %}\n\n{% block content %}\n    <main>\n        {% for article in latest_articles_list %}\n            <a href="{{ article.get_absolute_url }}">{{ article.title }}</a>\n        {% endfor %}\n    </main>\n{% endblock content %}\n')),"\n",a.createElement(t.p,null,"а на странице детального представления можно добавить ссылки на предыдущий и\nследующий пост"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-html"},'\x3c!--article.html--\x3e\n{% extends "base.html" %}\n\n{% block content %}\n<article>\n    <h2><a href="{{ article.get_absolute_url }}">{{ article.title }}</a></h2>\n    {{ article.content }}\n    <div class="links">\n        <a href="{{ article.get_next_by_pub_date.get_absolute_url }}">Next</a>\n        <a href="#">on top</a>\n        <a href="{{ article.get_previous_by_pub_date.get_absolute_url }}">Prev</a>\n    </div>\n</article>\n{% endblock %}\n')),"\n",a.createElement(t.p,null,a.createElement(t.code,null,"Model.get_next_by_pub_date")," вернёт следующую публикацию, основываясь на дате её создания"),"\n",a.createElement(t.p,null,a.createElement(t.code,null,"Model.get_previous_by_pub_date")," отобразит предыдущую публикацию."),"\n",a.createElement(t.p,null,"Применив к ним метод ",a.createElement(t.code,null,"get_absolute_url"),", мы получим искомое решение."))}var o=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,l.MN)(),e.components);return t?a.createElement(t,e,a.createElement(c,e)):c(e)},i=n(7792),s=n(7619);function u(e){var t,n;let{data:{mdx:l},children:r,pageContext:{prev:c,next:o}}=e;const{h1:u,title:m,description:d,image:p,table_of_contents:h}=l.frontmatter;return(0,a.useEffect)((()=>{(0,s.K)()}),[]),a.createElement(a.Fragment,null,a.createElement(i._W,{h1:u,title:m,description:d,image:null===(t=l.frontmatter.image)||void 0===t?void 0:t.publicURL},a.createElement(i.MV,{post:l.frontmatter,imageData:null==p||null===(n=p.childImageSharp)||void 0===n?void 0:n.gatsbyImageData},h?a.createElement(i.G8,{headings:l.tableOfContents}):null,a.createElement("div",{className:"page__content"},r,a.createElement(i.Mf,{prev:c,next:o})),a.createElement(i.QZ,null))))}function m(e){return a.createElement(u,e,a.createElement(o,e))}},8860:function(e,t,n){n.d(t,{y:function(){return l.y}});var l=n(3836)},8876:function(e,t,n){n.d(t,{MN:function(){return r}});var l=n(4424);const a=l.createContext({});function r(e){const t=l.useContext(a);return l.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}}}]);