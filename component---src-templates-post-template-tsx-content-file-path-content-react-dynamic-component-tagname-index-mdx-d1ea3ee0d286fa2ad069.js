"use strict";(self.webpackChunkgatsby_blog=self.webpackChunkgatsby_blog||[]).push([[1484],{628:function(n,a,s){s.r(a),s.d(a,{Head:function(){return c.Ss},default:function(){return u}});var t=s(8876),e=s(4424);function p(n){const a=Object.assign({p:"p",span:"span",h2:"h2",a:"a"},(0,t.MN)(),n.components);return e.createElement(e.Fragment,null,e.createElement(a.p,null,"В мире фронтенда принято переиспользовать один и тот же компонент множество раз. BEM-блоки, компонентный подход – всё об этом. Это как возвести здание из кирпичиков."),"\n",e.createElement(a.p,null,"Допустим, нам нужно использовать одну и ту же функциональность, но при этом иметь возможноть задавать компоненту разные html-теги. И тогда хочется сделать что-то подобное:"),"\n",e.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>tag<span class="token punctuation">]</span> <span class="token operator">/</span><span class="token operator">></span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",e.createElement(a.p,null,"Передавать через ",e.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">props</code>'}})," нужный тег. Без жёсткой привязки. Динамически."),"\n",e.createElement(a.h2,{id:"решение-для-react",style:{position:"relative"}},e.createElement(a.a,{href:"#%D1%80%D0%B5%D1%88%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B4%D0%BB%D1%8F-react","aria-label":"решение для react permalink",className:"anchor before"},e.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Решение для React"),"\n",e.createElement(a.p,null,"В JSX данный выше код вызовет ошибку на этапе компиляции. Дело в том, что нам требуются имена элементов, начинающиеся с заглавной буквы. То есть подойдёт следующая запись:"),"\n",e.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> TagName <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>tag\n  <span class="token keyword">return</span> <span class="token operator">&lt;</span>TagName <span class="token operator">/</span><span class="token operator">></span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",e.createElement(a.p,null,"Альтернативный способ потребует импорта компонентов:"),"\n",e.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> FooComponent <span class="token keyword">from</span> <span class="token string">\'./foo-component\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> BarComponent <span class="token keyword">from</span> <span class="token string">\'./bar-component\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">CustomComponent</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>\n  components <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">foo</span><span class="token operator">:</span> FooComponent<span class="token punctuation">,</span>\n    <span class="token literal-property property">bar</span><span class="token operator">:</span> BarComponent\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> TagName <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>components<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>tag <span class="token operator">||</span> <span class="token string">\'foo\'</span><span class="token punctuation">]</span>\n    <span class="token keyword">return</span> <span class="token operator">&lt;</span>TagName <span class="token operator">/</span><span class="token operator">></span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",e.createElement(a.p,null,"Подключаем извне как обычно:"),"\n",e.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> CustomComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./custom-component\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token operator">&lt;</span>CustomComponent tag<span class="token operator">=</span><span class="token string">"foo"</span> <span class="token operator">/</span><span class="token operator">></span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",e.createElement(a.h2,{id:"решение-для-vuejs",style:{position:"relative"}},e.createElement(a.a,{href:"#%D1%80%D0%B5%D1%88%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B4%D0%BB%D1%8F-vuejs","aria-label":"решение для vuejs permalink",className:"anchor before"},e.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Решение для Vue.js"),"\n",e.createElement(a.p,null,"С Vue.js в этом плане тоже всё отлично. И для этого также используется функция ",e.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">render</code>'}}),"."),"\n",e.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">\'vue\'</span><span class="token punctuation">;</span>\n\nVue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">\'custom-component\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'custom-component\'</span><span class="token punctuation">,</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">createElement</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token function">createElement</span><span class="token punctuation">(</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>tag<span class="token punctuation">,</span>           <span class="token comment">// tag</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>$slots<span class="token punctuation">.</span>default <span class="token comment">// array of children</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">tag</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",e.createElement(a.p,null,"Готово. Теперь можно переиспользовать и задавать свои html-теги."),"\n",e.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="vue"><pre class="language-vue"><code class="language-vue"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>custom-component</span> <span class="token attr-name">tag</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>section<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Hello<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>custom-component</span><span class="token punctuation">></span></span></code></pre></div>'}}))}var o=function(n){void 0===n&&(n={});const{wrapper:a}=Object.assign({},(0,t.MN)(),n.components);return a?e.createElement(a,n,e.createElement(p,n)):p(n)},c=s(7792),l=s(7619);function r(n){var a,s;let{data:{mdx:t},children:p,pageContext:{prev:o,next:r}}=n;const{h1:u,title:k,description:i,image:m,table_of_contents:g}=t.frontmatter;return(0,e.useEffect)((()=>{(0,l.K)()}),[]),e.createElement(e.Fragment,null,e.createElement(c._W,{h1:u,title:k,description:i,image:null===(a=t.frontmatter.image)||void 0===a?void 0:a.publicURL},e.createElement(c.MV,{post:t.frontmatter,imageData:null==m||null===(s=m.childImageSharp)||void 0===s?void 0:s.gatsbyImageData},g?e.createElement(c.G8,{headings:t.tableOfContents}):null,e.createElement("div",{className:"page__content"},p,e.createElement(c.Mf,{prev:o,next:r})),e.createElement(c.QZ,null))))}function u(n){return e.createElement(r,n,e.createElement(o,n))}},8876:function(n,a,s){s.d(a,{MN:function(){return p}});var t=s(4424);const e=t.createContext({});function p(n){const a=t.useContext(e);return t.useMemo((()=>"function"==typeof n?n(a):{...a,...n}),[a,n])}}}]);