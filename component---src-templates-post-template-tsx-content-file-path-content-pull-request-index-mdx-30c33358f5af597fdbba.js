"use strict";(self.webpackChunkgatsby_blog=self.webpackChunkgatsby_blog||[]).push([[716],{3408:function(e,n,a){a.r(n),a.d(n,{Head:function(){return o.Ss},default:function(){return g}});var t=a(8876),s=a(4424),l=a(8860);function c(e){const n=Object.assign({p:"p",strong:"strong",h2:"h2",a:"a",span:"span",em:"em"},(0,t.MN)(),e.components);return s.createElement(s.Fragment,null,s.createElement(n.p,null,"В кругу моих знакомых имеются товарищи весьма и весьма далёкие от\nмира железок, интернета и open source (в общем, они пропустили всё самое интересное).\nНе далее как на прошлой неделе угораздило таки употребить при них непотребное\nсловосочетание «pull request», после чего, ловя недоумённые взгляды,\nпришлось мяться и придумывать как сие получше перевести на великий и могучий.\nУвы, к взаимопониманию это не привело: попробую ответить здесь."),"\n",s.createElement(n.p,null,s.createElement(n.strong,null,"Pull Request")," — запрос на включение. На включение написанного\nвами кода в чужой репозиторий."),"\n",s.createElement(n.h2,{id:"с-чего-начать",style:{position:"relative"}},s.createElement(n.a,{href:"#%D1%81-%D1%87%D0%B5%D0%B3%D0%BE-%D0%BD%D0%B0%D1%87%D0%B0%D1%82%D1%8C","aria-label":"с чего начать permalink",className:"anchor before"},s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"С чего начать?"),"\n",s.createElement(n.p,null,"А для начала этот самый репозиторий нужно форкнуть (fork — вилка, ответвление).\nРазберём это нехитрое действо на примере веб-сервиса для хостинга IT-проектов,\nназвание которому GitHub. Разумеется, кроме GitHub есть и другие: BitBucket,\nнапример. Выбирать по вкусу."),"\n",s.createElement(l.y,{heading:"Примечание"},s.createElement(n.p,null,"Для успешного проведения нижеизложенных операций у вас\n(что естественно) должен быть установлен git")),"\n",s.createElement(n.p,null,"Заходим на страницу интересующего проекта, жмём кнопку ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">Fork</code>'}}),", ищем\n",s.createElement(n.em,null,"на своей")," странице URL для клонирования."),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<span\n      class="gatsby-resp-image-wrapper"\n      style="position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 460px; flex:3;"\n    >\n      <span\n    class="gatsby-resp-image-background-image"\n    style="padding-bottom: 34%; position: relative; bottom: 0; left: 0; display: block;"\n  ></span>\n  <picture>\n          <source\n              srcset="/static/3216e68792c40cf439d76e3049df22d2/e93cc/fork.webp 300w,\n/static/3216e68792c40cf439d76e3049df22d2/767a7/fork.webp 460w"\n              sizes="(max-width: 460px) 100vw, 460px"\n              type="image/webp"\n            />\n          <source\n            srcset="/static/3216e68792c40cf439d76e3049df22d2/eed55/fork.png 300w,\n/static/3216e68792c40cf439d76e3049df22d2/b0e63/fork.png 460w"\n            sizes="(max-width: 460px) 100vw, 460px"\n            type="image/png"\n          />\n          <img\n            class="gatsby-resp-image-image"\n            src="/static/3216e68792c40cf439d76e3049df22d2/b0e63/fork.png"\n            alt="fork"\n            title="форк репозитория на гитхаб"\n            loading="lazy"\n            decoding="async"\n            style="width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;"\n          />\n        </picture>\n    </span>'}}),"\n",s.createElement(n.p,null,"В консоли в зависимости от входных данных набираем нечто подобное:"),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">$ <span class="token function">git</span> clone git@github.com/username/django_documentation.git</code></pre></div>'}}),"\n",s.createElement(n.p,null,"Отлично. Уже можно вносить свои изменения в код проекта."),"\n",s.createElement(n.p,null,"Тот репозиторий, что теперь лежит на вашем жёстком диске, независим от\nосновного. В нём отслеживаются только ваши наработки. Но как следить за\nизменениями, происходящими в первоисточнике, откуда вы «стянули»\nрепозиторий? Добавить удаленный репозиторий в отслеживаемые. Например, так:"),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">$ <span class="token function">git</span> remote <span class="token parameter variable">-v</span>\norigin  git@github.com:username/django_documentation.git <span class="token punctuation">(</span>fetch<span class="token punctuation">)</span>\norigin  git@github.com:username/django_documentation.git <span class="token punctuation">(</span>push<span class="token punctuation">)</span>\n\n$ <span class="token function">git</span> remote <span class="token function">add</span> upstream git@github.com:Alerion/django_documentation.git</code></pre></div>'}}),"\n",s.createElement(n.p,null,"После добавления ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">upstream</code>'}})," в отслеживаемые, наберите команду ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">git remote -v</code>'}}),"\nещё раз, вы должны увидеть произошедшие изменения."),"\n",s.createElement(n.p,null,"Давайте посмотрим как сливать изменения из оригинального репозитория к себе\nв случае, если разработка в нём ушла вперёд пока вы сосредоточенно писали коммиты:"),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">$ <span class="token function">git</span> pull upstream master\nFrom github.com:Alerion/django_documentation\n* branch            master     -<span class="token operator">></span> FETCH_HEAD\nUpdating 66f032e<span class="token punctuation">..</span>062b294\nFast-forward\ndjbook/commands/authors.py                    <span class="token operator">|</span> <span class="token number">65</span> ++--\ndjbook/deps.txt                               <span class="token operator">|</span>  <span class="token number">6</span> ++--\ndjbook/templates/authors.html                 <span class="token operator">|</span> <span class="token number">14</span> ++--\ndjbook/templates/base.html                    <span class="token operator">|</span>  <span class="token number">7</span> ++--\nlocale/ru/LC_MESSAGES/faq/install.po          <span class="token operator">|</span> <span class="token number">94</span> +++-\nlocale/ru/LC_MESSAGES/faq/usage.po            <span class="token operator">|</span> <span class="token number">49</span> +---\nlocale/ru/LC_MESSAGES/howto/outputting-csv.po <span class="token operator">|</span> <span class="token number">61</span> ++--\nlocale/ru/LC_MESSAGES/topics/cache.po         <span class="token operator">|</span> <span class="token number">77</span> ++--\nlocale/ru/LC_MESSAGES/topics/db/multi-db.po   <span class="token operator">|</span> <span class="token number">80</span> +++-\n<span class="token number">9</span> files changed, <span class="token number">290</span> insertions<span class="token punctuation">(</span>+<span class="token punctuation">)</span>, <span class="token number">163</span> deletions<span class="token punctuation">(</span>-<span class="token punctuation">)</span></code></pre></div>'}}),"\n",s.createElement(n.p,null,"У нас есть основной репозиторий с веткой ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">master</code>'}})," и недавно добавленный нами\n— с ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">upstream</code>'}}),". Команда, данная выше, забирает всё новое из ветки ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">upstream</code>'}}),"\nи сливает изменения в ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">master</code>'}}),". Так, мы всегда можем получить последние наработки."),"\n",s.createElement(n.p,null,"Вы можете также воспользоваться другой командой — ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">fetch</code>'}}),"\nвместо указанной ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">pull</code>'}}),". В таком случае git заберет изменения с\nудаленного репозитория, но не будет пытаться слить их с вашей текущей веткой\nавтоматически."),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">$ <span class="token function">git</span> fetch upstream\n$ <span class="token function">git</span> merge upstream/master</code></pre></div>'}}),"\n",s.createElement(n.p,null,"Допустим, мы написали, что хотели и сделали коммит. Забираем изменения (но не сливаем их, fetch) из ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">upstream</code>'}}),".\nЗатем вручную сливаем изменения из удалённой ветки ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">upstream/master</code>'}})," к себе (merge),\nразрешаем конфликты (если есть) и снова делаем коммит."),"\n",s.createElement(n.p,null,"Если репозиторий огромен, а забирать его весь не хочется, клонируем только нужную ветку:"),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell"><span class="token comment"># клонировать только ветку real_branch:</span>\n$ <span class="token function">git</span> clone <span class="token parameter variable">-b</span> real_branch --single-branch git@github.com/username/django_documentation.git</code></pre></div>'}}),"\n",s.createElement(n.h2,{id:"что-такое-ветки",style:{position:"relative"}},s.createElement(n.a,{href:"#%D1%87%D1%82%D0%BE-%D1%82%D0%B0%D0%BA%D0%BE%D0%B5-%D0%B2%D0%B5%D1%82%D0%BA%D0%B8","aria-label":"что такое ветки permalink",className:"anchor before"},s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Что такое ветки?"),"\n",s.createElement(n.p,null,"Чаще всего ветки (branch — ответвление, ветвь, филиал) бывают\nтематическими. Например, при общей разработке, когда у всех участников\nесть право записи в репозиторий. В этом случае ветки используются для\nотделения изменений, сделанных одним из разработчиков, от общего репозитория.\nВетки могут пригодиться и в случае с созданием pull-request'а."),"\n",s.createElement(n.p,null,"Создание ветки происходит довольно просто. Находясь в каталоге с проектом,\nнаберите следующие команды:"),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell"><span class="token comment"># отобразить все ветки</span>\n$ <span class="token function">git</span> branch <span class="token parameter variable">-a</span>\n* master\nremotes/origin/1.4\nremotes/origin/HEAD -<span class="token operator">></span> origin/master\nremotes/origin/master\nremotes/upstream/1.4\nremotes/upstream/master\n\n<span class="token comment"># создать новую ветку из master, переключиться на неё</span>\n$ <span class="token function">git</span> checkout <span class="token parameter variable">-b</span> new_branch</code></pre></div>'}}),"\n",s.createElement(n.p,null,"Новые ветки создаются не только из master, берите любую!"),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell"><span class="token comment"># создать новую ветку из удалённой origin/1.4</span>\n$ <span class="token function">git</span> checkout <span class="token parameter variable">-b</span> new_branch origin/1.4\n\n<span class="token comment"># если ветки нет в отслеживаемых, а отслеживать надо, поможет флаг t (track)</span>\n$ <span class="token function">git</span> checkout <span class="token parameter variable">-t</span> origin/1.4</code></pre></div>'}}),"\n",s.createElement(n.p,null,"Находясь в только что созданной ветке, вы можете приступить к работе.\nВносите в код свои изменения, а когда закончите просто переключитесь\nобратно к своей основной ветке. Вы можете отправить pull request,\nвыбрав ветку ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">new_branch</code>'}})," или же прежде слить изменения из неё в\nосновную ветку разработки. Рассмотрим это подробнее:"),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">$ <span class="token function">git</span> checkout master  <span class="token comment"># вернуться к основной ветке</span>\n$ <span class="token function">git</span> merge new_branch <span class="token comment"># слить изменения из new_branch</span></code></pre></div>'}}),"\n",s.createElement(n.p,null,"Если нужно отправить в свой удалённый репозиторий вновь созданную\nветку (не сливать её с master), делаем следующее:"),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">$ <span class="token function">git</span> push master new_branch</code></pre></div>'}}),"\n",s.createElement(n.p,null,"Не торопитесь сливать изменения. Если что-то не заладилось, созданную\nветку можно удалить:"),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">$ <span class="token function">git</span> branch <span class="token parameter variable">-d</span> new_branch            <span class="token comment"># удалить локально</span>\n$ <span class="token function">git</span> push master :new_branch         <span class="token comment"># в удалённом репозитории</span>\n\n<span class="token comment"># ещё один способ удалить ветку в удалённом репозитории</span>\n$ <span class="token function">git</span> push origin <span class="token parameter variable">--delete</span> new_branch</code></pre></div>'}}),"\n",s.createElement(n.p,null,"Удалить все локальные ветки, которые были смержены (то есть код которых теперь есть)\nв ветках develop или master:"),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">$ <span class="token function">git</span> branch <span class="token parameter variable">--merged</span> <span class="token operator">|</span> <span class="token function">egrep</span> <span class="token parameter variable">-v</span> <span class="token string">"(master|develop)"</span> <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">git</span> branch <span class="token parameter variable">-d</span></code></pre></div>'}}),"\n",s.createElement(n.h2,{id:"отправляем-изменения",style:{position:"relative"}},s.createElement(n.a,{href:"#%D0%BE%D1%82%D0%BF%D1%80%D0%B0%D0%B2%D0%BB%D1%8F%D0%B5%D0%BC-%D0%B8%D0%B7%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D1%8F","aria-label":"отправляем изменения permalink",className:"anchor before"},s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Отправляем изменения"),"\n",s.createElement(n.p,null,"Добрались таки до ответа на поставленный вопрос: что такое pull request,\nзачем оно нужно и как его достичь. Как предложить владельцу репозитория свои изменения?"),"\n",s.createElement(n.p,null,"Для этого зайдите в свой аккаунт, выбирайте репозиторий владельца и ищите\nнебольшую зелёную кнопку (на момент написания поста она была таковой,\nесли даже что-то изменится, думаю, найти её будет несложно)."),"\n",s.createElement(n.p,null,"Перед тем как сделать запрос вы имеете возможность добавить комментарий,\nпросмотреть то, какие файлы будут изменены, какие коммиты добавлены.\nВ верхнем углу окна добавления запроса обратите внимание откуда куда и что\nвы сливаете. Если необходимо слить основные ветки выбор падёт на репозиторий\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">username:master</code>'}}),", если отдельную ветку (вспоминаем branch) — так и указывайте её."),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<span\n      class="gatsby-resp-image-wrapper"\n      style="position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 956px; flex:2;"\n    >\n      <span\n    class="gatsby-resp-image-background-image"\n    style="padding-bottom: 45.33333333333333%; position: relative; bottom: 0; left: 0; display: block;"\n  ></span>\n  <picture>\n          <source\n              srcset="/static/f34a7ad2f6b494dcc4830e2b14d1498a/e93cc/change-and-comment.webp 300w,\n/static/f34a7ad2f6b494dcc4830e2b14d1498a/b0544/change-and-comment.webp 600w,\n/static/f34a7ad2f6b494dcc4830e2b14d1498a/dbaa2/change-and-comment.webp 956w"\n              sizes="(max-width: 956px) 100vw, 956px"\n              type="image/webp"\n            />\n          <source\n            srcset="/static/f34a7ad2f6b494dcc4830e2b14d1498a/73b64/change-and-comment.jpg 300w,\n/static/f34a7ad2f6b494dcc4830e2b14d1498a/3ad8d/change-and-comment.jpg 600w,\n/static/f34a7ad2f6b494dcc4830e2b14d1498a/609ad/change-and-comment.jpg 956w"\n            sizes="(max-width: 956px) 100vw, 956px"\n            type="image/jpeg"\n          />\n          <img\n            class="gatsby-resp-image-image"\n            src="/static/f34a7ad2f6b494dcc4830e2b14d1498a/609ad/change-and-comment.jpg"\n            alt="request"\n            title="отправка MR"\n            loading="lazy"\n            decoding="async"\n            style="width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;"\n          />\n        </picture>\n    </span>'}}),"\n",s.createElement(n.p,null,"А дальше... ждать. Пока придёт владелец оригинального репозитория и\nпримет/отклонит ваши изменения."),"\n",s.createElement(n.p,null,"Ну вот, мы его достигли. Просветления то есть :)"),"\n",s.createElement(n.h2,{id:"как-отменить-изменения",style:{position:"relative"}},s.createElement(n.a,{href:"#%D0%BA%D0%B0%D0%BA-%D0%BE%D1%82%D0%BC%D0%B5%D0%BD%D0%B8%D1%82%D1%8C-%D0%B8%D0%B7%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D1%8F","aria-label":"как отменить изменения permalink",className:"anchor before"},s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Как отменить изменения"),"\n",s.createElement(n.p,null,"Если что-то пошло совсем не так как хотелось, изменения можно «откатить».\nКогда изменённый файл ещё не проиндексирован, сделать это просто:"),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">$ <span class="token function">git</span> checkout -- myfile</code></pre></div>'}}),"\n",s.createElement(n.p,null,"Когда нужно вернуть более старое состояние уже проиндексированных файлов и забыть\nо них совсем (помните, что упомянутая здесь операция отменит всю вашу работу\nдо определённого коммита!):"),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">$ <span class="token function">git</span> log\n$ <span class="token function">git</span> reset <span class="token parameter variable">--hard</span> HEAD~1</code></pre></div>'}}),"\n",s.createElement(n.p,null,"Cмотрим на какой коммит откатиться. В примере откатываемся назад на 1 коммит.\nДля изменения состояния в этой же ветке удалённого репозитория тоже придётся\nиспользовать грубую силу — флаг ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">force</code>'}}),":"),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">$ <span class="token function">git</span> push origin new_branch:new_branch <span class="token parameter variable">--force</span></code></pre></div>'}}),"\n",s.createElement(n.p,null,"Охватить все варианты невозможно, поэтому рекомендуется обратиться к\nдокументации и найти команду ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">git revert</code>'}})," и ключ ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">--soft</code>'}}),". Отдельно хочется отметить:\nв git ничего не пропадает бесследно. Если файлы были удалены, их можно восстановить опять."),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">$ <span class="token function">git</span> checkout 4b9df4bbd -- files</code></pre></div>'}}),"\n",s.createElement(n.p,null,"Дословно можно понимать эту команду как «из коммита 4b9df4bbd вернуть files».\nЗатем останется только зафиксировать изменения (сделать коммит)."),"\n",s.createElement(n.p,null,"Кстати, git log очень полезная команда, её изучению определённо стоит уделить время.\nНапример, полезно знать, что при помощи флага ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">-S</code>'}})," мы можем получить список всех\nкоммитов, в которых менялась строка, а соответственно и имя автора коммита."),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">$ <span class="token function">git</span> log <span class="token parameter variable">-S</span> <span class="token string">"mystring"</span></code></pre></div>'}}),"\n",s.createElement(n.p,null,"Или посмотреть все изменения, которые происходили с отдельным файлом:"),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">$ <span class="token function">git</span> log <span class="token parameter variable">--follow</span> <span class="token parameter variable">-p</span> путь_к_файлу</code></pre></div>'}}),"\n",s.createElement(n.p,null,"Последний пример покажет как стереть историю коммитов (фактически удалить ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">.git</code>'}})," и запушить с флагом ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">--force</code>'}}),"):"),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">$ <span class="token function">git</span> clone https://github.com/user/user-repo.git\n$ <span class="token builtin class-name">cd</span> user-repo\n$ <span class="token function">rm</span> <span class="token parameter variable">-rf</span> .git/\n$ <span class="token function">git</span> init\n$ <span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>\n$ <span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">\'первый коммит\'</span>\n\n$ <span class="token function">git</span> remote <span class="token function">add</span> origin https://github.com/user/user-repo.git\n$ <span class="token function">git</span> push <span class="token parameter variable">--force</span> origin master</code></pre></div>'}}),"\n",s.createElement(n.h2,{id:"а-подробнее",style:{position:"relative"}},s.createElement(n.a,{href:"#%D0%B0-%D0%BF%D0%BE%D0%B4%D1%80%D0%BE%D0%B1%D0%BD%D0%B5%D0%B5","aria-label":"а подробнее permalink",className:"anchor before"},s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"А подробнее?"),"\n",s.createElement(n.p,null,"Ну, что ещё? Применительно к github'у можно отметить факт наличия\nу них ",s.createElement(n.strong,null,"Issues"),". Это такая «примочка», благодаря которой\nможно ставить задачи для проекта, давать им описание и метку, определяющую\nк какому разряду данная задача относится (закрытие бага или написание фичи),\nа ещё назначать ответственного за выполнение определённого ",s.createElement(n.strong,null,"issue"),": всё как у больших."),"\n",s.createElement(n.p,null,"Итогов подводить не стану. Для заинтересованных лиц ссылочка на неофициальную документацию: ",s.createElement(n.a,{href:"http://uleming.github.io/gitbook/index.html",target:"_blank",rel:"nofollow"},"The Git Community Book")))}var r=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,t.MN)(),e.components);return n?s.createElement(n,e,s.createElement(c,e)):c(e)},o=a(7792),p=a(7619);function i(e){var n,a;let{data:{mdx:t},children:l,pageContext:{prev:c,next:r}}=e;const{h1:i,title:g,description:u,image:m,table_of_contents:d}=t.frontmatter;return(0,s.useEffect)((()=>{(0,p.K)()}),[]),s.createElement(s.Fragment,null,s.createElement(o._W,{h1:i,title:g,description:u,image:null===(n=t.frontmatter.image)||void 0===n?void 0:n.publicURL},s.createElement(o.MV,{post:t.frontmatter,imageData:null==m||null===(a=m.childImageSharp)||void 0===a?void 0:a.gatsbyImageData},d?s.createElement(o.G8,{headings:t.tableOfContents}):null,s.createElement("div",{className:"page__content"},l,s.createElement(o.Mf,{prev:c,next:r})),s.createElement(o.QZ,null))))}function g(e){return s.createElement(i,e,s.createElement(r,e))}},8860:function(e,n,a){a.d(n,{y:function(){return t.y}});var t=a(3836)},8876:function(e,n,a){a.d(n,{MN:function(){return l}});var t=a(4424);const s=t.createContext({});function l(e){const n=t.useContext(s);return t.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}}}]);