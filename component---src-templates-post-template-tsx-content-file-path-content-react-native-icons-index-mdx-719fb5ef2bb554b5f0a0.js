"use strict";(self.webpackChunkgatsby_blog=self.webpackChunkgatsby_blog||[]).push([[3680],{4540:function(n,a,e){e.r(a),e.d(a,{Head:function(){return p.Ss},default:function(){return r}});var t=e(8876),s=e(4424);function c(n){const a=Object.assign({p:"p",span:"span",a:"a"},(0,t.MN)(),n.components);return s.createElement(s.Fragment,null,s.createElement(a.p,null,"Сегодня поговорим про добавление в проект дизайнерских иконок. Тогда как для веба предпочтительными\nсчитаются векторные иконки, в сфере мобильных приложений чаще используются иконочные шрифты.\nНа то есть свои причины. Такие как производительность и удобство использования, например."),"\n",s.createElement(a.p,null,"Здесь нет способа сделать svg-спрайт. Это минус. В то же время здесь нет такой проблемы как ожидание загрузки шрифта.\nЭто плюс. Оба этих довода больше склоняют к использованию шрифтов. Этим и займёмся."),"\n",s.createElement(a.p,null,"Сначала нужно установить соответствующий пакет для создания компонента-иконки и обновить pod-файлы."),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">$ <span class="token function">yarn</span> <span class="token function">add</span> <span class="token parameter variable">-E</span> react-native-vector-icons\n$ <span class="token builtin class-name">cd</span> ios\n$ pod <span class="token function">install</span></code></pre></div>'}}),"\n",s.createElement(a.p,null,"Дальше подготовить векторную иконку дизайнера в формате ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">svg</code>'}}),". Сгенерировать шрифт любимым инструментом. Я буду использовать\n",s.createElement(a.a,{href:"https://icomoon.io/app/#/select",target:"_blank",rel:"nofollow"},"icomoon"),"."),"\n",s.createElement(a.p,null,"Выбор нового сета"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<span\n      class="gatsby-resp-image-wrapper"\n      style="position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 520px; flex:1;"\n    >\n      <span\n    class="gatsby-resp-image-background-image"\n    style="padding-bottom: 117.66666666666667%; position: relative; bottom: 0; left: 0; display: block;"\n  ></span>\n  <picture>\n          <source\n              srcset="/static/5d39af65613cce6b1d9f84b2c1764a47/e93cc/new_empty_set.webp 300w,\n/static/5d39af65613cce6b1d9f84b2c1764a47/0e8bf/new_empty_set.webp 520w"\n              sizes="(max-width: 520px) 100vw, 520px"\n              type="image/webp"\n            />\n          <source\n            srcset="/static/5d39af65613cce6b1d9f84b2c1764a47/73b64/new_empty_set.jpg 300w,\n/static/5d39af65613cce6b1d9f84b2c1764a47/91d27/new_empty_set.jpg 520w"\n            sizes="(max-width: 520px) 100vw, 520px"\n            type="image/jpeg"\n          />\n          <img\n            class="gatsby-resp-image-image"\n            src="/static/5d39af65613cce6b1d9f84b2c1764a47/91d27/new_empty_set.jpg"\n            alt="New Empty Set"\n            title=""\n            loading="lazy"\n            decoding="async"\n            style="width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;"\n          />\n        </picture>\n    </span>'}}),"\n",s.createElement(a.p,null,"Загрузка своей векторной иконки"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<span\n      class="gatsby-resp-image-wrapper"\n      style="position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 615px; flex:1;"\n    >\n      <span\n    class="gatsby-resp-image-background-image"\n    style="padding-bottom: 81.66666666666667%; position: relative; bottom: 0; left: 0; display: block;"\n  ></span>\n  <picture>\n          <source\n              srcset="/static/7b8a0fcbb2a88685484999ff300ad02c/e93cc/import_icon.webp 300w,\n/static/7b8a0fcbb2a88685484999ff300ad02c/b0544/import_icon.webp 600w,\n/static/7b8a0fcbb2a88685484999ff300ad02c/30e2f/import_icon.webp 615w"\n              sizes="(max-width: 615px) 100vw, 615px"\n              type="image/webp"\n            />\n          <source\n            srcset="/static/7b8a0fcbb2a88685484999ff300ad02c/73b64/import_icon.jpg 300w,\n/static/7b8a0fcbb2a88685484999ff300ad02c/3ad8d/import_icon.jpg 600w,\n/static/7b8a0fcbb2a88685484999ff300ad02c/9a256/import_icon.jpg 615w"\n            sizes="(max-width: 615px) 100vw, 615px"\n            type="image/jpeg"\n          />\n          <img\n            class="gatsby-resp-image-image"\n            src="/static/7b8a0fcbb2a88685484999ff300ad02c/9a256/import_icon.jpg"\n            alt="Import Icon"\n            title=""\n            loading="lazy"\n            decoding="async"\n            style="width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;"\n          />\n        </picture>\n    </span>'}}),"\n",s.createElement(a.p,null,"После генерации нового шрифта получим список всех шрифтов с указанием их имён. Останется только скачать\nархив, включающий сам шрифт + json-файл конфигурации. Последний переименуем в ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">icomoonConfig.json</code>'}}),".\nА со шрифтами поступим как и раньше — установим в проект. Не сказать, что это частая операция,\nпоэтому я предпочитаю обходиться своими силами и ",s.createElement(a.a,{href:"/posts/react-native-custom-fonts/"},"устанавливать шрифты вручную"),"."),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<span\n      class="gatsby-resp-image-wrapper"\n      style="position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 818px; flex:1;"\n    >\n      <span\n    class="gatsby-resp-image-background-image"\n    style="padding-bottom: 80%; position: relative; bottom: 0; left: 0; display: block;"\n  ></span>\n  <picture>\n          <source\n              srcset="/static/f1fcc8d416d734c9608c6dd0f0e3ba4a/e93cc/generated_icon.webp 300w,\n/static/f1fcc8d416d734c9608c6dd0f0e3ba4a/b0544/generated_icon.webp 600w,\n/static/f1fcc8d416d734c9608c6dd0f0e3ba4a/60c06/generated_icon.webp 818w"\n              sizes="(max-width: 818px) 100vw, 818px"\n              type="image/webp"\n            />\n          <source\n            srcset="/static/f1fcc8d416d734c9608c6dd0f0e3ba4a/73b64/generated_icon.jpg 300w,\n/static/f1fcc8d416d734c9608c6dd0f0e3ba4a/3ad8d/generated_icon.jpg 600w,\n/static/f1fcc8d416d734c9608c6dd0f0e3ba4a/abdf1/generated_icon.jpg 818w"\n            sizes="(max-width: 818px) 100vw, 818px"\n            type="image/jpeg"\n          />\n          <img\n            class="gatsby-resp-image-image"\n            src="/static/f1fcc8d416d734c9608c6dd0f0e3ba4a/abdf1/generated_icon.jpg"\n            alt="Icomoon Icon"\n            title=""\n            loading="lazy"\n            decoding="async"\n            style="width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;"\n          />\n        </picture>\n    </span>'}}),"\n",s.createElement(a.p,null,"Предположим, что структура проекта имеет следующий вид:"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">src\n├── App.js\n├── icomoonConfig.json\n├── components\n│   ├── Icon.js</code></pre></div>'}}),"\n",s.createElement(a.p,null,"В проекте есть файл ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">App.js</code>'}}),", там же создадим каталог ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">components</code>'}})," и сохраним json-файл с описанием имеющихся иконок.\nСоздадим компонент-иконку, ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">Icon.js</code>'}}),", со следующим содержимым:"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="jsx"><pre class="language-jsx"><code class="language-jsx"><span class="token comment">// Icon.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> createIconSetFromIcoMoon <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-native-vector-icons\'</span>\n<span class="token keyword">import</span> icomoonConfig <span class="token keyword">from</span> <span class="token string">\'../icomoonConfig.json\'</span>\n\n<span class="token keyword">const</span> Icon <span class="token operator">=</span> <span class="token function">createIconSetFromIcoMoon</span><span class="token punctuation">(</span>icomoonConfig<span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Icon</code></pre></div>'}}),"\n",s.createElement(a.p,null,"Подключим компонент туда, где хотели бы его использовать и посмотрим, что получилось.\nЧтобы отобразить иконку, достаточно указать её имя и размер. При необходимости — цвет."),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="jsx"><pre class="language-jsx"><code class="language-jsx"><span class="token comment">// App.js</span>\n<span class="token keyword">import</span> Icon <span class="token keyword">from</span> <span class="token string">\'./components/Icon\'</span>\n\n<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">View</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">.</span>body<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Icon</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>open-book<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>black<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">View</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<span\n      class="gatsby-resp-image-wrapper"\n      style="position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 996px; flex:1;"\n    >\n      <span\n    class="gatsby-resp-image-background-image"\n    style="padding-bottom: 72.33333333333334%; position: relative; bottom: 0; left: 0; display: block;"\n  ></span>\n  <picture>\n          <source\n              srcset="/static/ba3116e934aaee21ce0d42234b25bba8/e93cc/custom_icons_ios_android.webp 300w,\n/static/ba3116e934aaee21ce0d42234b25bba8/b0544/custom_icons_ios_android.webp 600w,\n/static/ba3116e934aaee21ce0d42234b25bba8/46197/custom_icons_ios_android.webp 996w"\n              sizes="(max-width: 996px) 100vw, 996px"\n              type="image/webp"\n            />\n          <source\n            srcset="/static/ba3116e934aaee21ce0d42234b25bba8/73b64/custom_icons_ios_android.jpg 300w,\n/static/ba3116e934aaee21ce0d42234b25bba8/3ad8d/custom_icons_ios_android.jpg 600w,\n/static/ba3116e934aaee21ce0d42234b25bba8/89c06/custom_icons_ios_android.jpg 996w"\n            sizes="(max-width: 996px) 100vw, 996px"\n            type="image/jpeg"\n          />\n          <img\n            class="gatsby-resp-image-image"\n            src="/static/ba3116e934aaee21ce0d42234b25bba8/89c06/custom_icons_ios_android.jpg"\n            alt="Custom Fonts iOS and Android"\n            title=""\n            loading="lazy"\n            decoding="async"\n            style="width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;"\n          />\n        </picture>\n    </span>'}}))}var o=function(n){void 0===n&&(n={});const{wrapper:a}=Object.assign({},(0,t.MN)(),n.components);return a?s.createElement(a,n,s.createElement(c,n)):c(n)},p=e(7792),l=e(7619);function i(n){var a,e;let{data:{mdx:t},children:c,pageContext:{prev:o,next:i}}=n;const{h1:r,title:d,description:g,image:u,table_of_contents:m}=t.frontmatter;return(0,s.useEffect)((()=>{(0,l.K)()}),[]),s.createElement(s.Fragment,null,s.createElement(p._W,{h1:r,title:d,description:g,image:null===(a=t.frontmatter.image)||void 0===a?void 0:a.publicURL},s.createElement(p.MV,{post:t.frontmatter,imageData:null==u||null===(e=u.childImageSharp)||void 0===e?void 0:e.gatsbyImageData},m?s.createElement(p.G8,{headings:t.tableOfContents}):null,s.createElement("div",{className:"page__content"},c,s.createElement(p.Mf,{prev:o,next:i})),s.createElement(p.QZ,null))))}function r(n){return s.createElement(i,n,s.createElement(o,n))}},8876:function(n,a,e){e.d(a,{MN:function(){return c}});var t=e(4424);const s=t.createContext({});function c(n){const a=t.useContext(s);return t.useMemo((()=>"function"==typeof n?n(a):{...a,...n}),[a,n])}}}]);