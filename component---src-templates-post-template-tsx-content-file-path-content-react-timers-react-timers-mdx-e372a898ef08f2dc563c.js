"use strict";(self.webpackChunkgatsby_blog=self.webpackChunkgatsby_blog||[]).push([[3364],{2796:function(n,s,a){a.r(s),a.d(s,{Head:function(){return c.Ss},default:function(){return k}});var t=a(8876),p=a(4424);function e(n){const s=Object.assign({p:"p",span:"span",h2:"h2",a:"a"},(0,t.MN)(),n.components);return p.createElement(p.Fragment,null,p.createElement(s.p,null,"Не секрет, что такие функции как ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">setInterval</code>'}}),", ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">setTimeout</code>'}})," очень хотят быть уничтоженными\nпри размонтировании компонента во избежание утечек памяти. И если с компонентами-классами всё понятно,\nто так ли очевидны способы взаимодействия с таймерами в функциональных компонентах?"),"\n",p.createElement(s.h2,{id:"компонент-класс",style:{position:"relative"}},p.createElement(s.a,{href:"#%D0%BA%D0%BE%D0%BC%D0%BF%D0%BE%D0%BD%D0%B5%D0%BD%D1%82-%D0%BA%D0%BB%D0%B0%D1%81%D1%81","aria-label":"компонент класс permalink",className:"anchor before"},p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Компонент-класс"),"\n",p.createElement(s.p,null,"В классах заботу о таймерах на себя берёт метод жизненного цикла ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">componentWillUnmount</code>'}}),".\nОбъявляем таймер и оставляем его на совесть методу."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="jsx"><pre class="language-jsx"><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Timer</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>\n  timer<span class="token punctuation">;</span>\n\n  <span class="token comment">// таймер срабатывает по клику</span>\n  <span class="token function-variable function">startTimer</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'start this.timer\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">componentWillUnmount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">clearTimeout</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// очистка таймера</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>startTimer<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">Start timer</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",p.createElement(s.h2,{id:"функциональный-компонент",style:{position:"relative"}},p.createElement(s.a,{href:"#%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%BE%D0%BD%D0%B0%D0%BB%D1%8C%D0%BD%D1%8B%D0%B9-%D0%BA%D0%BE%D0%BC%D0%BF%D0%BE%D0%BD%D0%B5%D0%BD%D1%82","aria-label":"функциональный компонент permalink",className:"anchor before"},p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Функциональный компонент"),"\n",p.createElement(s.p,null,"В функциональных компонентах нет возможности задать таймер как константу — это не сработает из-за\nособенностей рендера. Чтобы таймер запускался при каком-то пользовательском действии как в предыдущем примере,\nнужно привязать его через ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">useRef</code>'}}),"."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="jsx"><pre class="language-jsx"><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> useRef<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">Timer</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> timerRef <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// таймер срабатывает по клику</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">startTimer</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    timerRef<span class="token punctuation">.</span>current <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'start current timeout\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timerRef<span class="token punctuation">.</span>current<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// очистка таймера</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>startTimer<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">Start timer</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"Если пользовательских действий не нужно, на помощь придут пользовательские хуки:\nс ними не придётся дублировать код таймера каждый раз."),"\n",p.createElement(s.h2,{id:"хук-usetimeout",style:{position:"relative"}},p.createElement(s.a,{href:"#%D1%85%D1%83%D0%BA-usetimeout","aria-label":"хук usetimeout permalink",className:"anchor before"},p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Хук useTimeout"),"\n",p.createElement(s.p,null,"Аналог таймера, данного выше. Только запускаться он будет сразу после монтирования\nтого компонента, к которому подключен."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="jsx"><pre class="language-jsx"><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> useEffect<span class="token punctuation">,</span> useRef <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">useTimeout</span><span class="token punctuation">(</span><span class="token parameter">callback<span class="token punctuation">,</span> delay</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// Запомнить переданную функцию обратного вызова</span>\n  <span class="token keyword">const</span> savedCallback <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// переопределять callback при необходимости</span>\n  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    savedCallback<span class="token punctuation">.</span>current <span class="token operator">=</span> callback<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>callback<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// Запустить таймер</span>\n  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token comment">// или не запустить когда не задано время задержки</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>delay <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> timerId <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> savedCallback<span class="token punctuation">.</span><span class="token function">current</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> delay<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timerId<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>delay<span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"Как использовать в компоненте:"),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="jsx"><pre class="language-jsx"><code class="language-jsx"><span class="token comment">// передать в качестве handleCallback функцию,</span>\n<span class="token comment">// которая должна быть вызвана по таймауту</span>\n<span class="token function">useTimeout</span><span class="token punctuation">(</span>handleCallback<span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",p.createElement(s.h2,{id:"хук-useinterval",style:{position:"relative"}},p.createElement(s.a,{href:"#%D1%85%D1%83%D0%BA-useinterval","aria-label":"хук useinterval permalink",className:"anchor before"},p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Хук useInterval"),"\n",p.createElement(s.p,null,"Теперь что-нибудь поинтереснее с интервалом. На многих сайтах есть такой кейс:\nпри вводе логина получать одноразовый пароль по SMS и, если в течение некоторого времени SMS не приходит,\nотправлять запрос заново. Тут и может пригодиться наш хук."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="jsx"><pre class="language-jsx"><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">useInterval</span><span class="token punctuation">(</span><span class="token parameter">time<span class="token punctuation">,</span> delay</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// запомнить переданное время в секундах</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>timeLeft<span class="token punctuation">,</span> setTimeLeft<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token comment">// не запускать когда не задано время задержки</span>\n  \t<span class="token keyword">if</span> <span class="token punctuation">(</span>delay <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n\n  \t<span class="token comment">// уменьшать время на единицу</span>\n    <span class="token keyword">const</span> <span class="token function-variable function">tick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token function">setTimeLeft</span><span class="token punctuation">(</span>timeLeft <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// старт</span>\n    <span class="token keyword">const</span> timerId <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span>tick<span class="token punctuation">,</span> delay<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// остановить если время истекло</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>timeLeft <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token function">clearInterval</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// очистить интервал</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">clearInterval</span><span class="token punctuation">(</span>timerId<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>delay<span class="token punctuation">,</span> timeLeft<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// передать управление интервалом вовне</span>\n  <span class="token keyword">return</span> <span class="token punctuation">[</span>timeLeft<span class="token punctuation">,</span> setTimeLeft<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"Как использовать в компоненте:"),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="jsx"><pre class="language-jsx"><code class="language-jsx"><span class="token comment">// импорт хука</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useInterval <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'../hooks/useInterval\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token constant">ONE_SECOND</span> <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token constant">ONE_MINUTE</span> <span class="token operator">=</span> <span class="token number">60</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">formatTime</span> <span class="token operator">=</span> <span class="token parameter">time</span> <span class="token operator">=></span> time <span class="token operator">></span> <span class="token number">9</span> <span class="token operator">?</span> time <span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">0</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>time<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">Timeout</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token comment">// получить данные из хука</span>\n  <span class="token comment">// задать время 2 мнуты, остаток менять с интервалом в секунду</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>timeLeft<span class="token punctuation">,</span> setTimeLeft<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useInterval</span><span class="token punctuation">(</span><span class="token constant">ONE_MINUTE</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token constant">ONE_SECOND</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// используем timeLeft для привычного отображения времени</span>\n  <span class="token keyword">const</span> minutes <span class="token operator">=</span> <span class="token function">formatTime</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>timeLeft <span class="token operator">/</span> <span class="token constant">ONE_MINUTE</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> seconds <span class="token operator">=</span> <span class="token function">formatTime</span><span class="token punctuation">(</span>timeLeft <span class="token operator">-</span> minutes <span class="token operator">*</span> <span class="token constant">ONE_MINUTE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">handleStartTimer</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setTimeLeft</span><span class="token punctuation">(</span><span class="token constant">ONE_MINUTE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token punctuation">{</span>\n        timeLeft <span class="token operator">></span> <span class="token number">0</span>\n        <span class="token operator">?</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token plain-text">До повторной отправки осталось: </span><span class="token punctuation">{</span>minutes<span class="token punctuation">}</span><span class="token plain-text">:</span><span class="token punctuation">{</span>seconds<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n        <span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleStartTimer<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">Отправить SMS</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n      <span class="token punctuation">}</span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"Пока время не истекло, будет выводиться счётчик с таймером. После — кнопка с возможностью\nсбросить счётчик и запустить любую другую функцию."))}var o=function(n){void 0===n&&(n={});const{wrapper:s}=Object.assign({},(0,t.MN)(),n.components);return s?p.createElement(s,n,p.createElement(e,n)):e(n)},c=a(7792),l=a(7619);function u(n){var s,a;let{data:{mdx:t},children:e,pageContext:{prev:o,next:u}}=n;const{h1:k,title:i,description:r,image:m,table_of_contents:d}=t.frontmatter;return(0,p.useEffect)((()=>{(0,l.K)()}),[]),p.createElement(p.Fragment,null,p.createElement(c._W,{h1:k,title:i,description:r,image:null===(s=t.frontmatter.image)||void 0===s?void 0:s.publicURL},p.createElement(c.MV,{post:t.frontmatter,imageData:null==m||null===(a=m.childImageSharp)||void 0===a?void 0:a.gatsbyImageData},d?p.createElement(c.G8,{headings:t.tableOfContents}):null,p.createElement("div",{className:"page__content"},e,p.createElement(c.Mf,{prev:o,next:u})),p.createElement(c.QZ,null))))}function k(n){return p.createElement(u,n,p.createElement(o,n))}},8876:function(n,s,a){a.d(s,{MN:function(){return e}});var t=a(4424);const p=t.createContext({});function e(n){const s=t.useContext(p);return t.useMemo((()=>"function"==typeof n?n(s):{...s,...n}),[s,n])}}}]);