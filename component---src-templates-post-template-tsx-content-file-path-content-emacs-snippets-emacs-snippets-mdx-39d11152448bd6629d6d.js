"use strict";(self.webpackChunkgatsby_blog=self.webpackChunkgatsby_blog||[]).push([[2268],{4256:function(e,n,t){t.r(n),t.d(n,{Head:function(){return i.Ss},default:function(){return o}});var l=t(8876),a=t(4424);function c(e){const n=Object.assign({p:"p",pre:"pre",code:"code",h2:"h2",a:"a",span:"span"},(0,l.MN)(),e.components);return a.createElement(a.Fragment,null,a.createElement(n.p,null,"Сниппетом называют небольшой блок, фрагмент кода, предназначенный для повторного\nиспользования. Современные текстовые редакторы зачастую содержат сниппеты для\nразных задач и языков программирования."),"\n",a.createElement(n.p,null,"Например, в LaTeX это такие конструкции как"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-tex"},"\\begin{document}\n\\end{document}\n")),"\n",a.createElement(n.p,null,"С подобными кусочками кода в emacs тоже не бывает проблем. Однако, что если вам\nне хочется при создании нового документа заполнять его\nстандартным содержимым? Не весть как интересно наполнять стартовые файлы LaTeX\nили HTML, не правда ли?"),"\n",a.createElement(n.p,null,"Для такого случая можно заранее подготовить необходимые файлы-сниппеты, а при создании\nнового документа просто вставлять их содержимое в буфер текстового редактора. И\nздесь не обойтись без написания какой-нибудь полезной функции на emacs lisp."),"\n",a.createElement(n.p,null,"Рассмотрим несколько несложных примеров."),"\n",a.createElement(n.h2,{id:"вставка-текста-прямо-из-функции",style:{position:"relative"}},a.createElement(n.a,{href:"#%D0%B2%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0-%D1%82%D0%B5%D0%BA%D1%81%D1%82%D0%B0-%D0%BF%D1%80%D1%8F%D0%BC%D0%BE-%D0%B8%D0%B7-%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8","aria-label":"вставка текста прямо из функции permalink",className:"anchor before"},a.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Вставка текста прямо из функции"),"\n",a.createElement(n.p,null,"В случае постоянного использования одного и того же языка программирования\nзаготовочные файлы иметь вовсе не обязательно: можно получить нужную\nпоследовательность символов непосредственно из функции."),"\n",a.createElement(n.p,null,"Для этой нехитрой задачи воспользуемся командой вставки текста ",a.createElement(n.code,null,"insert"),". В\nдвойных кавычках укажем нужный фрагмент кода.\nНапример:"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-lisp"},'(defun newpy () ; определить функцию newpy\n  "Create new python document" ; комментарий\n  (interactive) ; работать интерактивно\n  ; вставить строки\n  (insert "#!/usr/bin/env python # -*- coding: utf-8 -*-"))\n')),"\n",a.createElement(n.p,null,"Теперь при нажатии ",a.createElement(n.code,null,"M-x")," (после рестарта emacs) можно смело вводить имя только\nчто созданной функции и наблюдать, как указанный текст будет вставлен в текущем\nбуфере на той строке, где стоит курсор."),"\n",a.createElement(n.p,null,"Если читатель относит себя к любителям горячих сочетаний клавиш, он может также\nопределить заветную комбинацию для быстрого вызова функции:"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-lisp"},'(global-set-key (kbd "C-c s") \'newpy)\n')),"\n",a.createElement(n.h2,{id:"получение-текста-из-файла",style:{position:"relative"}},a.createElement(n.a,{href:"#%D0%BF%D0%BE%D0%BB%D1%83%D1%87%D0%B5%D0%BD%D0%B8%D0%B5-%D1%82%D0%B5%D0%BA%D1%81%D1%82%D0%B0-%D0%B8%D0%B7-%D1%84%D0%B0%D0%B9%D0%BB%D0%B0","aria-label":"получение текста из файла permalink",className:"anchor before"},a.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Получение текста из файла"),"\n",a.createElement(n.p,null,"Обратимся к иному методу получения данных: вставке из определённого\nфайла."),"\n",a.createElement(n.p,null,"Создадим функцию ",a.createElement(n.code,null,"newtex"),", которая будет забирать данные из указанного файла при\nпомощи ",a.createElement(n.code,null,"insert-file-contents"),". При необходимости строки будут разделены."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-lisp"},'(defun newtex()\n  "Get data from the file ex.tex"\n  (interactive)\n    ; вставить данные из файла ex.tex\n    (insert-file-contents "~/ex.tex")\n    ; разделить строки\n    (split-string (buffer-string) "\\n" t))\n')),"\n",a.createElement(n.p,null,"Разделять строки совершенно необязательно: ведь заранее заготовленный сниппет уже\nприведён к соответствующему виду. Определить комбинацию клавиш можно так же, как\nэто уже было показано ранее."),"\n",a.createElement(n.p,null,"Теперь предлагается немного усовершенствовать функцию, дабы иметь возможность вставлять\nсодержимое из разных файлов в зависимости от переданного функции аргумента."),"\n",a.createElement(n.p,null,"В следующем примере даётся функция ",a.createElement(n.code,null,"snip"),", которая принимает аргумент\n",a.createElement(n.code,null,"ext"),". Она взаимодействует с пользователем, получает от него имя расширения\nфайла (аргумент) и открывает соответствующий ему файл. Для выбора файла\nиспользуется конструкция ",a.createElement(n.code,null,"if"),"."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-lisp"},'(defun snip (ext) ; ожидает аргумента ext\n  "Get data from the file."\n  (interactive "sExtension: ") ; приглашение для ввода строки\n  (if (equal ext "html") ; проверить на равенство\n      (insert-file-contents "~/ex.tex")\n  )\n  (if (equal ext "py")\n      (insert-file-contents "~/ex.py")\n  )\n  ; если аргумента нет\n  (if nil (message "argument is nil")))\n')),"\n",a.createElement(n.p,null,"Так, в несколько строчек кода вместилась весьма полезная функция, способная\nсделать работу с emacs ещё чуточку продуктивнее. Можно ли использовать для сегодняшней\nцели сторонние «фичи» emacs автору неведомо. Но нужны ли они, если и\nтак всё просто?"))}var r=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,l.MN)(),e.components);return n?a.createElement(n,e,a.createElement(c,e)):c(e)},i=t(7792),s=t(7619);function m(e){var n,t;let{data:{mdx:l},children:c,pageContext:{prev:r,next:m}}=e;const{h1:o,title:u,description:p,image:d,table_of_contents:E}=l.frontmatter;return(0,a.useEffect)((()=>{(0,s.K)()}),[]),a.createElement(a.Fragment,null,a.createElement(i._W,{h1:o,title:u,description:p,image:null===(n=l.frontmatter.image)||void 0===n?void 0:n.publicURL},a.createElement(i.MV,{post:l.frontmatter,imageData:null==d||null===(t=d.childImageSharp)||void 0===t?void 0:t.gatsbyImageData},E?a.createElement(i.G8,{headings:l.tableOfContents}):null,a.createElement("div",{className:"page__content"},c,a.createElement(i.Mf,{prev:r,next:m})),a.createElement(i.QZ,null))))}function o(e){return a.createElement(m,e,a.createElement(r,e))}},8876:function(e,n,t){t.d(n,{MN:function(){return c}});var l=t(4424);const a=l.createContext({});function c(e){const n=l.useContext(a);return l.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}}}]);